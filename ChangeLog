================================================================================
 MicroTESK Builds
================================================================================

--------------------------------------------------------------------------------
 2016/10/28 MicroTESK 2.4
--------------------------------------------------------------------------------

2019/10/XX MicroTESK 2.4.45 beta
  - Tests: Test suite uses QEMU4V 0.3.3

2019/01/29 MicroTESK 2.4.45 beta
  - Support for block-level register allocation constraints
  - Changes in the register allocation engine
  - MMU plugin: structures' fields are listed from upper to lower bits
  - Bug fixes and code improvements

2018/11/16 MicroTESK 2.4.44 beta
  - Support for separate-file sections (useful for boot generation)
  - Support for the 'decode' attribute of nML primitives (experimental)
  - Decoder generator: enabling bit selection for non-immediate arguments
  - Bug fixes and code improvements

2018/08/20 MicroTESK 2.4.43 beta
  - Templates: the 'nitems' generator was established
  - Templates: blocks with no attributes are now allowed (block {})
  - Code generation facilities moved to the Castle library
  - Bug fixes and code improvements

2018/07/24 MicroTESK 2.4.42 beta
  - Improved template facilities: support for addressing modes (registers)
    in printing functions (such as 'trace')
  - Improved template facilities: support for the '_SLL' operation
  - Improved register allocation: support for the 'retain' attribute

2018/07/19 MicroTESK 2.4.41 beta
  - Support for floating-point types in data sections
  - Support for formatted printing of values in data sections
  - Support for register reservation
  - Support for basic operations (_AND, _OR, _XOR, _ADD, _SUB, _PLUS, _MINUS, _NOT)
    with dynamic immediate values in test templates
  - Improved register allocation strategies
  - New permutator 'exhaustive' aliased as 'full'
  - Support for i386 in x86 specifications
  - Support for the NASM and GNU assembler in x86 specifications and
    test templates
  - miniMIPS test programs are compiled with GCC and simulated in QEMU
  - x86 test programs are compiled with the GNU and NASM assemblers
    and simulated in QEMU
  - New option '--model-name' to allow building several ISA models from the same
    specifications
  - New option 'base-template-path' for automated template generation
  - Bug fixes and code improvements

2018/05/04 MicroTESK 2.4.40 beta

 - Support for automated generation of test templates
 - Templates: methods 'rev_id' and 'is_rev' to get information on revisions
   supported by the model
 - Templates: support for global labels (the 'global_label' method)
 - Templates: support for numeric labels
 - Templates: support for weak symbols (the 'weak' method)
 - Templates: new method set_default_mode_allocator(allocator)
 - Templates: runtime methods to trace the state of registers and memory
   (instead of hand-written observers)
 - Bug fixes and code improvements

2018/02/19 MicroTESK 2.4.39 beta

 - Test data iterator functionality was implemented
 - New demo template testdata.rb (miniMIPS) demonstrating test data iterator
 - Refactoring in generation logic
 - Some general code improvements

2018/02/05 MicroTESK 2.4.38 beta

 - Enhancements in the branch engine
 - Refactoring in the memory engine
 - New demo specifications and templates: Vmem ISA aimed to demonstrate
   the facilities of the memory engine
 - Changes in the nML language translator: special constructs to specify
   label-based instruction operands
 - Improvements in the simulator: correct handling of jump instructions
 - Improvements in the symbolic executor: correct SMT-formulae
 - Other general improvements

2017/09/18 MicroTESK 2.4.37 beta

 - Bug fix in engine for constraint-based test data generation

2017/09/15 MicroTESK 2.4.36 beta

 - Enhancements in the branch engine
 - Bug fixes and general improvements

2017/09/08 MicroTESK 2.4.35 beta

 - Support for excluded elements in revision configuration files
 - Bug fixes and general improvements

2017/09/01 MicroTESK 2.4.34 beta

 - Bug fixes and general improvements

2017/08/25 MicroTESK 2.4.33 beta

 - Support for configuration files describing relations between revisions
 - Support for operation templates in nML
 - Supported new nML operators: is_type, type_of, and size_of
 - Support for bitfields in MMU constraints (test templates)
 - Bug fixes and general improvements

2017/08/18 MicroTESK 2.4.32 beta

 - Support for revisions in nML and MMU specifications
 - Integration of generation engines (branch and memory)
 - Test template demonstrating how to mix ALU, BPU and MMU constraints
   in a single sequence (miniMIPS)
 - Bug fixes and general improvements

2017/08/03 MicroTESK 2.4.31 beta

 - Test template demonstrating how to mix BPU and ALU constraints (miniMIPS)
 - Test template demonstrating how to mix MMU and ALU constraints (miniMIPS)
 - Bug fixes and general improvements

2017/08/01 MicroTESK 2.4.30 beta

 - Example templates demonstrating how to create tests for BPU (miniMIPS)
 - Bug fixes and general improvements

2017/07/14 MicroTESK 2.4.29 beta

 - Bug fixes and general improvements

2017/07/07 MicroTESK 2.4.28 beta

 - Support for generation of GCC linker scripts for test programs
 - Bug fixes and general improvements

2017/06/26 MicroTESK 2.4.27 beta

 - Improved support for sections in test templates (constructs section {},
   section_data {}, section_text{})

2017/06/09 MicroTESK 2.4.26 beta
 - Bug fixes and general improvements

2017/06/05 MicroTESK 2.4.25 beta

 - Support for sections (code and data can be placed into regions defined by
   the .section directive)
 - Changes in generator (common mechanism of test situation processing for
   all generation engines)
 - Bug fixes and general improvements

2017/05/26 MicroTESK 2.4.24 beta

 - Bug fixes and general improvements

2017/05/19 MicroTESK 2.4.23 beta

 - Changes in generator: external code with fixed origin is generated and
   allocated first
 - Bug fixes and general improvements

2017/05/12 MicroTESK 2.4.22 beta

 - Bug fixes and general improvements

2017/05/05 MicroTESK 2.4.21 beta

 - Bug fixes and general improvements

2017/04/28 MicroTESK 2.4.20 beta

 - Bug fixes and general improvements

2017/04/21 MicroTESK 2.4.19 beta

 - Option 'jruby-thread-pool-max' to limit the number of threads JRuby can create
 - Bug fixes and general improvements

2017/04/14 MicroTESK 2.4.18 beta

 - Bug fixes and general improvements

2017/04/07 MicroTESK 2.4.17 beta

 - Demo specification and test templates for x86
 - Bug fixes and general improvements

2017/03/24 MicroTESK 2.4.16 beta

 - Bug fixes and general improvements

2017/03/17 MicroTESK 2.4.15 beta

 - Accurate state modeling during pre-simulation
 - Bug fixes and general improvements

2017/03/06 MicroTESK 2.4.14 beta

 - Support for assertions in nML was implemented
 - New option 'debug-print' was introduced
 - Bug fixes and general improvements

2017/02/17 MicroTESK 2.4.13 beta

 - Bug fixes and general improvements

2017/02/10 MicroTESK 2.4.12 beta

 - Support for jumps over instruction blocks (unstable)
 - Support for generation of tests running on multiple processing elements
   (unstable)
 - Improvements in the memory engine

2017/02/03 MicroTESK 2.4.11 beta

 - Memory engine performance has been optimized
 - Bug fixes and general improvements

2017/01/27 MicroTESK 2.4.10 beta

 - The SAT4J solver has been adapted to be used in the memory engine
 - The .text directive is automatically inserted into code
 - Bug fixes and general improvements

2017/01/20 MicroTESK 2.4.9 beta

 - Refactoring of simulation logic

2017/01/16 MicroTESK 2.4.8 beta

 - Refactoring of simulation logic

2016/12/30 MicroTESK 2.4.7 beta

 - Refactoring of generation and simulation logic

2016/12/21 MicroTESK 2.4.6 beta

 - Improved disassembler
 - Improved floating-point support
 - Bug fixes and general improvements

2016/12/09 MicroTESK 2.4.5 beta

 - Improved floating-point support
 - Bug fixes and general improvements

2016/12/05 MicroTESK 2.4.4 beta

 - Basic implementation of disassembler
 - Basic support for 16-bit floating point data types
 - Bug fixes and general improvements

2016/11/18 MicroTESK 2.4.3 beta

 - Support for binary masks in preparators (test templates)
 - The 'internal' modifier for nML operation was established
 - Bug fixes and general improvements

2016/11/11 MicroTESK 2.4.2 beta

 - Support for structures (the 'struct' keyword) in nML
 - Improved timing statistics
 - Bug fixes and general improvements

2016/11/03 MicroTESK 2.4.1 beta

 - Performance optimization: variables are not reset
 - Simulation on multiple instances is debugged
 - Improvements in exception handling facilities
 - Bug fixes and general improvements

2016/10/28 MicroTESK 2.4.0 alpha

 - Basic facilities for multicore generation (unstable, untested)
 - nML: the 'init' attribute was made public
 - Refactoring in the ISA simulator

--------------------------------------------------------------------------------
 2015/09/04 MicroTESK 2.3
--------------------------------------------------------------------------------

2016/10/21 MicroTESK 2.3.52 beta

 - Refactoring in the ISA simulator

2016/09/30 MicroTESK 2.3.51 beta

 - Refactoring: meta model as a separate entity
 - Bug fixes and general improvements

2016/09/16 MicroTESK 2.3.50 beta

 - Bug fix in ExprFactory

2016/09/09 MicroTESK 2.3.49 beta

 - Bug fixes and general improvements

2016/09/02 MicroTESK 2.3.48 beta

 - Bug fixes and general improvements

2016/08/26 MicroTESK 2.3.47 beta

 - Documentation on Ruby code of test templates included into distribution
 - Possibility to override configuration options from test templates by using
   the set_option_value function
 - Updated configuration options (see MicroTESK help)
 - New configuration option 'reserve-explicit' that specifies whether
   explicitly specified registers must be reserved
 - New test template 'random_sequence.rb' that combines sequences based on
   distributions
 - Bug fixes and general improvements

2016/08/12 MicroTESK 2.3.46 beta

 - Improved functionality of the 'prologue' and 'epilogue' constructs
 - Bug fixes and general improvements

2016/08/06 MicroTESK 2.3.45 beta

 - ANTLR was updated to version 3.5.2
 - Bug fixes and general improvements

2016/08/01 MicroTESK 2.3.44 beta

 - New documentation file on simulator's memory settings
 - JRuby was updated to version 1.7.25
 - Bug fixes and general improvements

2016/07/22 MicroTESK 2.3.43 beta

 - Test Templates: support for global code sections, global labels and
   control transfers between global sections
 - New test template example for miniMIPS external_labels.rb

2016/07/15 MicroTESK 2.3.42 beta

 - Test Templates: new rearranger strategy 'sample'
 - Test Templates: improvements in the 'prepare' function
 - Test Templates: the 'rand' function can be parameterized with a distribution
 - Test Generator: new engine 'trivial'
 - Bug fixes and general improvements

2016/07/08 MicroTESK 2.3.41 beta

 - Improvements in the nML translator

2016/07/01 MicroTESK 2.3.40 beta

 - New option --default-test-data (-dtd) that enables generation of default
   test data for instructions with no explicitly specified test situations
 - External access to MODE and OP arguments (nML)
 - Bug fixes and general improvements

2016/06/24 MicroTESK 2.3.39 beta

 - New option --time-statistics (-ts) for printing time statistics
 - New option --no-simulation (-ns) for disabling simulation
 - Bug fixes and general improvements

2016/06/17 MicroTESK 2.3.38 beta

 - General improvements (refactoring in the nML translator)

2016/06/03 MicroTESK 2.3.37 beta

 - General code improvements

2016/05/27 MicroTESK 2.3.36 beta

 - Bug fixes and general improvements
   (refactoring in nML translator and ISA model)

2016/05/20 MicroTESK 2.3.35 beta

 - Registers used for streams are excluded from random selection
 - Bug fixes and general improvements

2016/05/13 MicroTESK 2.3.34 beta

 - Bug fixes and general improvements

2016/05/06 MicroTESK 2.3.33 beta

 - Bug fixes and general improvements

2016/04/22 MicroTESK 2.3.32 beta

 The new build contains the following changes:

  - A bug in coverage extractor for nML was fixed

2016/04/16 MicroTESK 2.3.31 beta

 The new build contains the following changes:

 - Possibility to specify exclusions for random register allocation
   was implemented
 - Possibility to free reserved registers was implemented
 - A bug in sign_extend and zero_extend nML functions was fixed

2016/04/11 MicroTESK 2.3.30 beta

 The new build contains the following changes:

 - Fixed a bug related to simulation of aligned instruction calls

2016/04/08 MicroTESK 2.3.29 beta

 The new build contains the following changes:

 - Support for handling control transfers to invalid addresses was implemented
 - Some bug fixes were made

2016/04/01 MicroTESK 2.3.28 beta

 The new build contains the following changes:

 - Test Templates: Possibility to specify strategy for register allocation
   was implemented

2016/03/18 MicroTESK 2.3.27 beta

 The new build contains the following changes:

  - Test Templates: The "atomic" and "iterate" block types were established
  - Test Templates: The "block" structure now can be used only to combine
    sequences returned by nested blocks
  - Test Templates: The "rearranger" parameter was supported by blocks

2016/03/11 MicroTESK 2.3.26 beta

 The new build contains the following changes:

  - Several bug fixes and general improvements

2016/03/04 MicroTESK 2.3.25 beta

 The new build contains the following changes:

  - Several bug fixes and general improvements

2016/02/26 MicroTESK 2.3.24 beta

 The new build contains the following changes:

 - Test Templates: support for test case level data sections
 - Test Templates: support for relative origins (.org :delta => 0xXXXX)

2016/02/20 MicroTESK 2.3.23 beta

 The new build contains the following changes:

 - Several bug fixes and general improvements

2016/02/12 MicroTESK 2.3.22 beta

 The new build contains the following changes:

 - Test Templates: support for assigning default test situations to
   instructions and instruction groups
 - Test Templates: support for preparator overriding
 - Test Templates: new instruction permulation methods
   (permutator and obfuscator engines)
 - Test Templates: data is now printed in the end of a test program
 - Several bug fixes and general improvements

2016/02/05 MicroTESK 2.3.21 beta

 The new build contains the following changes:

 - Branch engine: parameter 'limit' was renamed to 'branch_exec_limit'
 - Branch engine: new parameter 'trace_count_limit' that bounds the number
   of execution traces was introduced
 - Test templates: support for named preparators was implemented
 - Test templates: 'atomic' was renamed to 'sequence'
 - nML translator: some general improvements were made

2016/01/29 MicroTESK 2.3.20 beta

 The new build contains the following changes:

 - Support for randomizing preparators (random selection between several
   preparator variants) was implemented
 - Some issues in the branch generation engine were fixed

2016/01/22 MicroTESK 2.3.19 beta

 The new build contains the following changes:

- Support for instruction permutations in test template blocks was implemented

2016/01/18 MicroTESK 2.3.18 beta

 The new build contains the following changes:

- Some bug fixes and general improvements were made

2016/01/11 MicroTESK 2.3.17 beta

 The new build contains the following changes:

- Some bug fixes and general improvements were made

2015/12/25 MicroTESK 2.3.16 beta

 The new build contains the following changes:

- Possibility to print buffer state to simulation log was implemented
- ISA simulator API was improved
- Some bug fixes and general improvements were made

2015/12/17 MicroTESK 2.3.15 beta

 The new build contains the following changes:

- Support for explicit invocation of preparators in test templates
- Support for MMU-related constraints in test situations
- Some bug fixes and general improvements

2015/12/11 MicroTESK 2.3.14 beta

 The new build contains the following changes:

- Support for block-level prologue and epilogue was implemented
- Some bug fixes and general improvements were made

2015/12/04 MicroTESK 2.3.13 beta

 The new build contains the following changes:

- Some bug fixes and general improvements were made

2015/11/27 MicroTESK 2.3.12 beta

 The new build contains the following changes:

- Possibility of initialize address fields depending on the operation that
  performs memory access was implemented in the MMU specification language
- Cases of incorrect use of test template blocks are now reported to the user
- Several bug fixes and general improvements were made

2015/11/20 MicroTESK 2.3.11 beta

 The new build contains the following changes:

 - Test template blocks were made "passive" (processed by the generation engine
   only on request)
 - Support for reuse (composition, repetition) of test template blocks
   was implemented
 - Support for new floating-point functions 'is_nan' and 'is_signaling_nan'
   in nML was implemented
 - Several bug fixes and general improvements were made

 2015/11/13 MicroTESK 2.3.10 beta

 The new build contains the following changes:

 - Improvements in Tarmac logging: support for memory accesses
   and register writes were implemented
 - Handling of let-expressions (MMU) was improved
 - Several bug fixes and general improvements were made
 - Ruby engine was switched to JRuby 1.7.22

 2015/11/06 MicroTESK 2.3.9 beta

 The new build contains the following changes:

 - Support for functions in MMU specifications
 - Support for expressions based on extern variables in let-constructs (MMU)
 - Support for 'if-then-else' expressions in let-constructs (MMU)
 - Several bug fixes and general improvements
 - JRuby was updated to version 9.0.3.0

 2015/10/30 MicroTESK 2.3.8 beta

 The new build contains the following changes:

 - Several bug fixes and general improvements were made

 2015/10/23 MicroTESK 2.3.7 beta

 The new build contains the following changes:

 - Possibility to describe memory-related test situations in test templates
   was implemented
 - Support for bit mask operations in MMU specifications was implemented
 - Several bug fixes and general improvements were made

 2015/10/16 MicroTESK 2.3.6 beta

 The new build contains the following changes:

 - Possibility to use values of registers defined in ISA specifications
   as parameters while generating tests for MMU (the "extern" construct)
 - Possibility to map MMU buffers to virtual memory was implemented
   (the "memory buffer" construct)
 - Possibility to map MMU buffers to registers defined in ISA specifications
   was implemented (the "register buffer" construct)
 - Support for shift operations in MMU specifications was implemented
 - Several bug fixes and general improvements were made

 2015/10/09 MicroTESK 2.3.5 beta

 The new build contains the following changes:

 - Support for floating-point calculations was improved
   (integration with JSoftFloat, additional nML functions for type conversion)
 - Support for checking addresses using memory region settings was implemented
 - Some bug fixes and general improvements were made

 2015/10/02 MicroTESK 2.3.4 beta

 The new build contains the following changes:

 - Some bug fixes in the MMU simulator were made
 - Some optimizations of the MMU test engine were implemented

 2015/09/25 MicroTESK 2.3.3 beta

 The new build contains the following changes:

 - Some bug fixes in the MMU test engine were made

 2015/09/18 MicroTESK 2.3.2 beta

 The new build contains the following changes:

 - MMU-simulator was implemented
 - Some bug fixes and general improvements were made

 2015/09/11 MicroTESK 2.3.1 beta

 The new build contains the following changes:

 - Support for MMU-directed test program generation: improvements
 - Some bug fixes and general improvements

 2015/09/04 MicroTESK 2.3.0 alpha

 The new build contains the following changes:

 - Basic support for MMU-directed test program generation was implemented
 - Some bug fixes and general improvements were made

--------------------------------------------------------------------------------
 2015/03/24 MicroTESK 2.2
--------------------------------------------------------------------------------

 2015/08/28 MicroTESK 2.2.17 beta

 The new build contains the following changes:

 - Some bug fixes and general improvements were made

 2015/08/21 MicroTESK 2.2.16 beta

 The new build contains the following changes:

 - Some bug fixes and general improvements were made

 2015/08/14 MicroTESK 2.2.15 beta

 The new build contains the following changes:

 - Some bug fixes and general improvements were made

 2015/08/07 MicroTESK 2.2.14 beta

 The new build contains the following changes:

 - Support for self-checking test program generation was implemented
 - Some bug fixes and general improvements were made

 2015/07/30 MicroTESK 2.2.13 beta

 The new build contains the following changes:

 - Several bug fixes and general improvements were made

 2015/07/24 MicroTESK 2.2.12 beta

 The new build contains the following changes:

 - Data generated for test programs (defined in 'data' blocks) now can be
   placed into a separate file
 - Several bug fixes and general improvements were made

 2015/07/17 MicroTESK 2.2.11 beta

 The new build contains the following changes:

 - Several bug fixes and general improvements were made

 2015/07/15 MicroTESK 2.2.10 beta

 The new build contains the following changes:

 - Possibility to specify test case level prologue and epilogue in
   test templates was implemented
 - Possibility to specify calls of pseudo instructions in
   test templates was implemented
 - The functionality of 'align' and 'org' methods (test templates)
   was improved
 - CVC4 is now used as the default SMT solver
 - Z3_PATH and CVC4_PATH environment variables can now be used to specify
   path to corresponding SMT solver executable
 - Couple of bug fixes and general improvements were made

 2015/07/10 MicroTESK 2.2.9 beta

 The new build contains the following changes:

 - Support for '.org' and '.align' directives in test templates
 - Better handling of the 'undefined' and 'unpredicted' situations
 - Several bug fixes and general improvements

 2015/07/06 MicroTESK 2.2.8 beta

 The new build contains the following changes:

 - Support for preprocessor directives
 - Support for exception handling
 - Support for tracking instruction addresses during simulation (including
   tracking addresses in indirect branches)

 2015/06/26 MicroTESK 2.2.7 beta

 The new build contains the following changes:

 - Data file generation feature was implemented
 - Several bug fixes and general improvements were made

 2015/06/19 MicroTESK 2.2.6 beta

 The new build contains the following changes:

 - Support for large memory addresses (e.g 48 and 64 bits) was improved
 - Support for overloaded preparators was implemented
 - Support for operation and addressing mode groups in test templates was
   implemented
 - Support for user-defined test data generator extensions (in Java)
 - Improved console output format (use the --verbose option)
 - Several bug fixes and general improvements were made

 2015/06/11 MicroTESK 2.2.5 beta

 The new build contains the following changes:

 - Basic support for Tarmac was implemented (logging is enabled with
   the '--tarmac-log' option)
 - Support for large memory addresses (e.g 48 and 64 bits) was implemented

 2015/06/05 MicroTESK 2.2.4 beta

 The new build contains the following changes:

 - Possibility to select test situations applied to instruction on random manner
   was implemented.
 - Randomization of operands of instructions with unspecified situations
   was supported.
 - Architecture-specific settings (set up with '--arch-dirs' option)
   were established.
 - Support for random register allocation was implemented.
 - Options '--comments-enabled' and '--comments-enabled' for enabling/disabling
   printing comments to test programs were added.
 - Option '--solver-debug' for enabling debug output of SMT solvers was added.
 - Functionality of the 'include' directive was improved.
 - Format of generated test programs was enhanced.
 - If a preparator for an addressing mode is not specified, test generation
   is aborted.
 - Several bug fixes and general improvements were made.

 2015/05/29 MicroTESK 2.2.3 beta

 The new build contains the following changes:

 - Test data is generated taking into account data generated for other
   instructions.
 - Statistics on test program size and test generator performance is collected.
 - Test programs are split into parts if they exceed the specified limits
   on instruction number.

 2015/05/22 MicroTESK 2.2.2 alpha

 The new build contains the following changes:

 - Simple mechanism for detecting loops in test templates was implemented. If
   the number of branch executions exceeds the specified limit, test generation
   is halted.
 - New attribute 'init' was supported for 'mode' and 'op' nML primitives. It
   specifies initialization actions to be performed each time before code
   of other standard attributes like 'syntax' and 'image' is executed.
 - The repetition operator was implemented in nML. Syntax is the following:
   {N}X - concatenates the specified location X with itself N times.
 - Branches of logic in nML specifications which raise exceptions are
   automatically marked as named test situations.
 - Syntax of the 'reg', 'mem' and 'var' nML constructs was extended to support
   array-based aliases.
 - Functionality of 'format' and 'trace' nML functions was improved. Now they
   support conditional string-based expressions as arguments.
 - Default values for some command-line options are now stored in
   a configuration file.
 - Several bug fixes and general improvements were made.

 2015/04/23 MicroTESK 2.2.1 alpha

 The new build contains the following changes:

 - Support for the CVC4 constraint solver
 - Several bug fixes and general code improvements

 2015/03/24 MicroTESK 2.2.0 alpha

 The new build contains the following changes:

 - Support for automated extraction of coverage information that allows building
   constraints for named instruction execution paths
 - Possibility to process test templates in a stream manner (block by block)
   was implemented, which allows processing larger test templates
 - The "trace" method (test templates) now accepts objects created
   by the "rand" method
 - Several bug fixes and general improvements were made

--------------------------------------------------------------------------------
 2014/10/18 MicroTESK 2.1
--------------------------------------------------------------------------------

 2015/03/05 MicroTESK 2.1.5 beta

 The new build contains the following changes:

 - The random_seed setting was added to test templates
 - Biased random generation was supported
 - The miniMIPS specification was improved
 - More test templates for miniMIPS were added

 2015/02/19 MicroTESK 2.1.4 beta

 The new build contains the following changes:

 - The logic of test sequence building and processing has been improved
 - The format of generated test programs has been improved
 - Several bug fixes and general improvements have been made

 2015/02/17 MicroTESK 2.1.3 beta

 The new build contains the following changes:

 - Several bug fixes and general improvements have been made

 2014/12/30 MicroTESK 2.1.2 beta

 The new build contains the following changes:

 - Facilities to describe the data segment in test templates were implemented
 - Function 'trace' (nML) was supported
 - Possibility to create instances of modes and ops in nML code was implemented
 - Aliases for memory locations (mem, reg, var) were supported
 - Specification of the miniMIPS ISA was added to examples

 2014/10/31 MicroTESK 2.1.1 beta

 The new build contains the following changes:

 - Issue related to processing test templates under Windows was fixed

 2014/10/18 MicroTESK 2.1.0 beta

 The new build contains the following changes:

 - Support for VLIW was implemented
 - Support for floating-point types was implemented
 - Ability to specify initialization code in test templates
   (the 'preparator' construct) was implemented
 - New test data generators were implemented
 - The test templates library was improved (including new text printing
   facilities and ability to specify unknown immediate values)
 - New examples of test templates demonstrating features of MicroTESK
   were added
 - Ability to use labels rather than addresses in the generated code
   was implemented

--------------------------------------------------------------------------------
 2014/03/20 MicroTESK 2.0
--------------------------------------------------------------------------------

 2014/04/18 MicroTESK 2.0.2 beta

 The new build contains the following changes:

 - An ability to manually specify initialization code was implemented
 - The test templates library was improved
 - Test template examples for ARM were updated
 - Several bugs related to installation of MicroTESK were fixed
 - Default test situations Random and Zero were provided

 2014/03/20 MicroTESK 2.0.1 beta

 MicroTESK is an open-source framework for generating test programs for
 microprocessors. It is customized for a specific microprocessor architecture
 with formal specifications in nML/Sim-nML. Test programs are generated on a
 basis of test templates, which are abstract descriptions of test scenarios.
 Flexible and convenient Ruby-based test template language allows creating a
 wide range of tests (from random to directed) with minimal efforts.

--------------------------------------------------------------------------------
 2013/02/22 MicroTESK 2.0
--------------------------------------------------------------------------------
 2009/08/20 MicroTESK 1.0
--------------------------------------------------------------------------------
 Since 2007 MicroTESK 0.0
--------------------------------------------------------------------------------
