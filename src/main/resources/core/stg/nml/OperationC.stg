/*
 * Copyright 2012-2015 ISP RAS (http://www.ispras.ru)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

group Operation;

op(
  name, file, imps,
  arg_names, arg_types, arg_checks, arg_tnames, isa_type, arg_count
) ::= <<
<header(file)>

<op_build(name, arg_names, arg_types, isa_type, arg_count)>
>>

op_action(name) ::= <<
void <name>_action(IsaPrimitive *self) {
}<\n>
>>

op_build(name, arg_names, arg_types, isa_type, arg_count) ::= <<


IsaPrimitive <name>_args[<arg_count>];

void <name>_action(IsaPrimitive *self) {

}

char* <name>_image() {
  return 0;
}

int <name>_syntax() {
  return 0;
}

IsaPrimitive <name>(<get_func_param(arg_names, arg_types)>) {
  IsaPrimitive obj = {
    .type = <isa_type>_<name>,
    .action = (*<name>_action)(&obj),
    .image = (*<name>_image)(),
    .syntax = (*<name>_syntax)(),
    .args = &<name>_args,
    .argc = <arg_count>
  };

  return obj;
}
>>

get_func_param(arg_names, arg_types) ::= <<
<arg_names, arg_types:{n, t | IsaPrimitive <n>}; separator=", ">
>>

get_args(arg_names) ::= <<
<arg_names:{n | <n>}; separator=", ">
>>
