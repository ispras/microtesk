/*
 * Copyright 2012-2016 ISP RAS (http://www.ispras.ru)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

group Model;
 
model(file, pack, imps, simps, base, members) ::= <<
<header(file)>
<package(pack)>
<if(imps)><imports(imps)><endif>
<if(simps)><static_imports(simps)><endif>
<class(["public", "final"], 
       "Model",
       base,
       false,
       members)> 
>>

model_constructor(class, name, revid, modes, ops) ::= <<
public <class>() {
  super(
      "<name>",
      "<revid>",
      MetaModelFactory.newMetaModel(),
      Decoder.get(),
      PE.newFactory(),
      TempVars.newFactory()
      );<\n>
  <modes:{m |addMode(<m>.INFO);}; separator="\n"><\n>
  <ops:{op |addOperation(<op>.INFO);}; separator="\n">
}
>>
