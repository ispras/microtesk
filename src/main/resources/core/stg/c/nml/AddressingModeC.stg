/*
 * Copyright 2012-2015 ISP RAS (http://www.ispras.ru)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

group AddressingMode;


mode_attribute(primitive_name, name, rettype, stmts, override, usePE, arg_names, arg_types) ::= <<
<rettype> <primitive_name>_<name>(IsaPrimitive* isa, <if(usePE)>PE* procElem, <endif>TempVars* tempVars) {
  PE* pe__ = <if(usePE)> procElem<else>NULL<endif>;
  TempVars* vars__ = tempVars;
  <init_args(arg_names)>

  <stmts; separator="\n">
}
>>

mode(
  name, file, imps,
  arg_names, arg_types, arg_checks, arg_tnames, isa_type, arg_count, attrs, pack, simps, base, ret
) ::= <<
<header(file)>

<attrs; separator="\n\n">
<constructor_build(name, arg_names, arg_types, isa_type, arg_count, ret)>

<if(ret)><\n><mode_attribute(name, "access", "Location", ret:{e|return <e>;}, true, true, arg_names, arg_types)><endif>
>>

constructor_build(name, arg_names, arg_types, isa_type, arg_count, ret) ::= <<


IsaPrimitive* <name>_args[<arg_count>];

IsaPrimitive <name>(<get_func_param(arg_names, arg_types)>) {
  IsaPrimitive obj = {
    //.type = <isa_type>_<name>,
    .action = <name>_action,
    .image = <name>_image,
    .syntax = <name>_syntax,
    .args = &<name>_args,
    .argc = <arg_count>,
    <if(ret)>.action = <name>_action,<endif>
  };

  <get_args(arg_names)>

  return obj;
}
>>

get_func_param(arg_names, arg_types) ::= <<
<arg_names, arg_types:{n, t | IsaPrimitive* <n>}; separator=", ">
>>

get_args(arg_names) ::= <<
<arg_names:{n | obj.args[<i0>] = <n>;}; separator="\n">
>>

init_args(arg_names) ::= <<
<arg_names:{n | IsaPrimitive* <n> = isa->args[<i0>];}; separator="\n">
>>