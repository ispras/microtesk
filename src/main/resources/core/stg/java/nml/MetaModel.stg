/*
 * Copyright 2016 ISP RAS (http://www.ispras.ru)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

group MetaModel;

location(name, type, size)  ::= <<
"<name>", <type>, <size>
>>

metamodel_constructor(name, registers, memories, modes, operations) ::= <<
private <name>() {}<\n>
public static MetaModel newMetaModel() {
  final MetaModelBuilder builder = new MetaModelBuilder();<\n>
  <registers: { r | builder.addRegister(<r>);}; separator="\n"><\n>
  <memories: { m | builder.addMemory(<m>);}; separator="\n"><\n>
  <modes: { m | builder.addMode(<m>);}; separator="\n"><\n>
  <operations: { o | builder.addOperation(<o>);}; separator="\n"><\n>
  return builder.build();
}
>>

constructor(name, args, stmts) ::= <<
private <name>() {
  super(
      <args: { a | <a>}; separator=",\n">
      );
  <stmts: { stmt | <stmt>}; separator="\n">
}
>>

add_argument(type, args) ::= <<
addArgument(new <type>(<args: { a | <a>}; separator=", ">));
>>

add_shortcut(context, operation) ::= <<
addShortcut("<context>", <operation>);
>>
