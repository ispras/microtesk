Home: /home/kamkin/work/microtesk/build/target/
Current directory: /home/kamkin/work/microtesk/src/main/arch/demo/minimips/templates
Model name: minimips
Template file: multiple_engines.rb
Loaded template MiniMipsBaseTemplate defined in /home/kamkin/work/microtesk/src/main/arch/demo/minimips/templates/minimips_base.rb
Loaded template MultipleEnginesTemplate defined in /home/kamkin/work/microtesk/src/main/arch/demo/minimips/templates/multiple_engines.rb
Processing template MultipleEnginesTemplate defined in /home/kamkin/work/microtesk/src/main/arch/demo/minimips/templates/multiple_engines.rb...
Instance number: 1

----------------------- Initializing Processing Elements -----------------------


------------------------- Started Processing Template --------------------------


------------------ Started Processing Initialization Section -------------------


------------------------- Processing Exception Handler -------------------------


----------------- Printing exception handler to test_except.s ------------------


------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000080000

0x0000000000080000 (PA): .org 0x10000
.align 8
branch_data_0:
0x0000000000090000 (PA): .word 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
branch_data_1:
0x0000000000090200 (PA): .word 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

------------------- Ended Processing Initialization Section --------------------


------------------- Started Processing Finalization Section --------------------


-------------------- Ended Processing Finalization Section ---------------------


----------------------- Started Processing Main Section ------------------------


------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x0000000000080380 (PA): mfc0 $31, $14 (0x401F7000)
0x0000000000080384 (PA): addi $31, $31, 0x4 (0x23FF0004)
0x0000000000080388 (PA): jr $31 (0x03E00008)
0x000000000008038c (PA): nop (0x00000000)

----------------- Constructed Prologue (minimips_base.rb:281) ------------------

	.text
	.org 0x20000

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]


-------------- Constructed External Code (multiple_engines.rb:93) --------------

	.org 0x20000

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

Processing of block defined at multiple_engines.rb:112 is postponed.

------------------------ Ended Processing Main Section -------------------------


------------ Running Execution from Prologue (minimips_base.rb:281) ------------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x00000000000a0000

.org 0x20000

------------------ Processing Abstract Sequence (Instance 0) -------------------

Register ID: 16
Register ID: 17
Branch structure: [BASIC_BLOCK, IF_THEN: Target=6, Trace=[], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, GOTO: Target=9, Trace=[], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, IF_THEN: Target=0, Trace=[], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT]
Next branch structure (prolonged execution): [BASIC_BLOCK, IF_THEN: Target=6, Trace=[true], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, GOTO: Target=9, Trace=[], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, IF_THEN: Target=0, Trace=[false], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT]
Next branch structure (prolonged execution): [BASIC_BLOCK, IF_THEN: Target=6, Trace=[true], BlockCoverage=[0], SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, GOTO: Target=9, Trace=[], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, IF_THEN: Target=0, Trace=[false], BlockCoverage=[8], SlotCoverage=null, DELAY_SLOT]
Branch structure: [BASIC_BLOCK, IF_THEN: Target=6, Trace=[true], BlockCoverage=[0], SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, GOTO: Target=9, Trace=[], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, IF_THEN: Target=0, Trace=[false], BlockCoverage=[8], SlotCoverage=null, DELAY_SLOT]
Execution trace: [0, 1, 2, 6, 7, 8, 9, 10, 11]
Control code of length 2 for instruction 1 put to block 0
Control code of length 2 for instruction 10 put to block 8
Executed code: [], executed blocks: [0, 6]
Nontaken code: [], nontaken blocks: [3]
Memory engine configuration: classifier=BUFFER_ACCESS, preparator=true, iterator=RANDOM, recursion-limit=1, count=5
MemoryEngine.solve: [instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null), instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)]
MemoryEngine.solve: globalConstraints=MemoryAccessConstraints [null, [], []]
MemoryEngine.solve: accessTypes=[LOAD[WORD], LOAD[WORD]]
MemoryEngine.solve: accessConstraints=[MemoryAccessConstraints [null, [], []], MemoryAccessConstraints [null, [], []]]
Number of trajectories is 5
Trajectories are [[MMU_PA, L1, L1], [MMU_PA, L1, L2, L2, L1], [MMU_PA, L1, L2, M, L2, L1], [MMU_PA, L1, M, L1], [MMU_PA, M]]
Creating memory access chooser: MemoryAccessConstraints [null, [], []]
Add iterator for the trajectory: [MMU_PA, L1, L1]
Creating memory access chooser: MemoryAccessConstraints [null, [], []]
Add iterator for the trajectory: [MMU_PA, L1, L2, L2, L1]
Creating memory access chooser: MemoryAccessConstraints [null, [], []]
Add iterator for the trajectory: [MMU_PA, L1, L2, M, L2, L1]
Creating memory access chooser: MemoryAccessConstraints [null, [], []]
Add iterator for the trajectory: [MMU_PA, L1, M, L1]
Creating memory access chooser: MemoryAccessConstraints [null, [], []]
Add iterator for the trajectory: [MMU_PA, M]
Classifying memory access paths: LOAD[WORD] 5 classes
Classifying memory access paths: LOAD[WORD] 5 classes
Searching for a memory access path: [MMU_PA, L1, L2, M, L2, L1]
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 1 1 new$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 1) (EQ (BVEXTRACT 1 1 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 30 30 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value(0)) 1) (EQ (BVEXTRACT 2 2 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 3 3 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 29 29 VA.value(0)) 0) (EQ (BVEXTRACT 3 3 new$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value(0)) 1) (EQ (BVEXTRACT 3 3 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 4 4 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 28 28 VA.value(0)) 0) (EQ (BVEXTRACT 4 4 new$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value(0)) 1) (EQ (BVEXTRACT 4 4 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 5 5 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value(0)) 0) (EQ (BVEXTRACT 5 5 new$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value(0)) 1) (EQ (BVEXTRACT 5 5 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 6 6 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value(0)) 0) (EQ (BVEXTRACT 6 6 new$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value(0)) 1) (EQ (BVEXTRACT 6 6 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 7 7 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value(0)) 0) (EQ (BVEXTRACT 7 7 new$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value(0)) 1) (EQ (BVEXTRACT 7 7 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 8 8 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value(0)) 0) (EQ (BVEXTRACT 8 8 new$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value(0)) 1) (EQ (BVEXTRACT 8 8 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 9 9 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value(0)) 0) (EQ (BVEXTRACT 9 9 new$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value(0)) 1) (EQ (BVEXTRACT 9 9 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 10 10 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value(0)) 0) (EQ (BVEXTRACT 10 10 new$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value(0)) 1) (EQ (BVEXTRACT 10 10 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value(0)) 0) (EQ (BVEXTRACT 11 11 new$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value(0)) 1) (EQ (BVEXTRACT 11 11 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value(0)) 0) (EQ (BVEXTRACT 12 12 new$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value(0)) 1) (EQ (BVEXTRACT 12 12 new$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value(0)) 0) (EQ (BVEXTRACT 13 13 new$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value(0)) 1) (EQ (BVEXTRACT 13 13 new$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$0(0)) 0)
Add formula: (AND (EQ pmem.c(1) 3))
Handle equation: (EQ pmem.c(1) 3)
Add formula: (AND (EQ PA.value(1) VA.value(0)))
Handle equation: (EQ PA.value(1) VA.value(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1))
Add formula: (AND (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1))))
Handle equation: (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10)
Add formula: (AND (EQ PA.value_L1_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L1_1(1) PA.value(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c(1)) 11)
Add formula: (AND (EQ PA.value_L2_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L2_1(1) PA.value(1))
Add formula: (AND (EQ PA.value_M_1(1) PA.value(1)))
Handle equation: (EQ PA.value_M_1(1) PA.value(1))
Add formula: (AND (EQ pmem.cacheData(1) M.DATA_M_1(0)))
Handle equation: (EQ pmem.cacheData(1) M.DATA_M_1(0))
Add formula: (AND (EQ M.DATA(1) M.DATA_M_1(0)))
Handle equation: (EQ M.DATA(1) M.DATA_M_1(0))
Add formula: (OR (EQ phi_0 000) (EQ phi_0 001) (EQ phi_0 010) (EQ phi_0 011) (EQ phi_0 100) (EQ phi_0 101) (EQ phi_0 110) (EQ phi_0 111))
Add formula: (AND (OR (EQ phi_0_0 1) (NOTEQ phi_0 000)) (OR (NOTEQ phi_0_0 1) (EQ phi_0 000)) (OR (EQ phi_0_0 0) (EQ pmem.offset(1) 000)) (OR (EQ phi_0_0 0) (EQ pmem.TMP_2(1) (BVEXTRACT 31 0 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_0_1 1) (NOTEQ phi_0 001)) (OR (NOTEQ phi_0_1 1) (EQ phi_0 001)) (OR (EQ phi_0_1 0) (EQ pmem.offset(1) 001)) (OR (EQ phi_0_1 0) (EQ pmem.TMP_2(1) (BVEXTRACT 63 32 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_0_2 1) (NOTEQ phi_0 010)) (OR (NOTEQ phi_0_2 1) (EQ phi_0 010)) (OR (EQ phi_0_2 0) (EQ pmem.offset(1) 010)) (OR (EQ phi_0_2 0) (EQ pmem.TMP_2(1) (BVEXTRACT 95 64 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_0_3 1) (NOTEQ phi_0 011)) (OR (NOTEQ phi_0_3 1) (EQ phi_0 011)) (OR (EQ phi_0_3 0) (EQ pmem.offset(1) 011)) (OR (EQ phi_0_3 0) (EQ pmem.TMP_2(1) (BVEXTRACT 127 96 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_0_4 1) (NOTEQ phi_0 100)) (OR (NOTEQ phi_0_4 1) (EQ phi_0 100)) (OR (EQ phi_0_4 0) (EQ pmem.offset(1) 100)) (OR (EQ phi_0_4 0) (EQ pmem.TMP_2(1) (BVEXTRACT 159 128 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_0_5 1) (NOTEQ phi_0 101)) (OR (NOTEQ phi_0_5 1) (EQ phi_0 101)) (OR (EQ phi_0_5 0) (EQ pmem.offset(1) 101)) (OR (EQ phi_0_5 0) (EQ pmem.TMP_2(1) (BVEXTRACT 191 160 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_0_6 1) (NOTEQ phi_0 110)) (OR (NOTEQ phi_0_6 1) (EQ phi_0 110)) (OR (EQ phi_0_6 0) (EQ pmem.offset(1) 110)) (OR (EQ phi_0_6 0) (EQ pmem.TMP_2(1) (BVEXTRACT 223 192 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_0_7 1) (NOTEQ phi_0 111)) (OR (NOTEQ phi_0_7 1) (EQ phi_0 111)) (OR (EQ phi_0_7 0) (NOTEQ pmem.offset(1) 000)) (OR (EQ phi_0_7 0) (NOTEQ pmem.offset(1) 001)) (OR (EQ phi_0_7 0) (NOTEQ pmem.offset(1) 010)) (OR (EQ phi_0_7 0) (NOTEQ pmem.offset(1) 011)) (OR (EQ phi_0_7 0) (NOTEQ pmem.offset(1) 100)) (OR (EQ phi_0_7 0) (NOTEQ pmem.offset(1) 101)) (OR (EQ phi_0_7 0) (NOTEQ pmem.offset(1) 110)) (OR (EQ phi_0_7 0) (EQ pmem.TMP_2(1) (BVEXTRACT 255 224 pmem.cacheData(1)))))
Add formula: (AND (EQ pmem.data(1) pmem.TMP_2(1)))
Handle equation: (EQ pmem.data(1) pmem.TMP_2(1))
Add formula: (AND (EQ pmem.l2Entry.V(1) 1))
Handle equation: (EQ pmem.l2Entry.V(1) 1)
Add formula: (AND (EQ pmem.l2Entry.TAG(1) (BVEXTRACT 31 17 PA.value(1))))
Handle equation: (EQ pmem.l2Entry.TAG(1) (BVEXTRACT 31 17 PA.value(1)))
Add formula: (AND (EQ pmem.l2Entry.DATA(1) pmem.cacheData(1)))
Handle equation: (EQ pmem.l2Entry.DATA(1) pmem.cacheData(1))
Add formula: (AND (EQ pmem.l1Entry.V(1) 1))
Handle equation: (EQ pmem.l1Entry.V(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG(1) (BVEXTRACT 31 12 PA.value(1))))
Handle equation: (EQ pmem.l1Entry.TAG(1) (BVEXTRACT 31 12 PA.value(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA(1) pmem.cacheData(1)))
Handle equation: (EQ pmem.l1Entry.DATA(1) pmem.cacheData(1))
Checking feasibility of the memory access: MemoryAccessConstraints [null, [], []]
General constraints: []
Solving path constraints
Add formula: (EQ (BVEXTRACT 1 0 VA.value(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 1 1 new$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 1) (EQ (BVEXTRACT 1 1 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 30 30 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value(0)) 1) (EQ (BVEXTRACT 2 2 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 3 3 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 29 29 VA.value(0)) 0) (EQ (BVEXTRACT 3 3 new$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value(0)) 1) (EQ (BVEXTRACT 3 3 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 4 4 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 28 28 VA.value(0)) 0) (EQ (BVEXTRACT 4 4 new$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value(0)) 1) (EQ (BVEXTRACT 4 4 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 5 5 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value(0)) 0) (EQ (BVEXTRACT 5 5 new$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value(0)) 1) (EQ (BVEXTRACT 5 5 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 6 6 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value(0)) 0) (EQ (BVEXTRACT 6 6 new$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value(0)) 1) (EQ (BVEXTRACT 6 6 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 7 7 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value(0)) 0) (EQ (BVEXTRACT 7 7 new$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value(0)) 1) (EQ (BVEXTRACT 7 7 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 8 8 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value(0)) 0) (EQ (BVEXTRACT 8 8 new$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value(0)) 1) (EQ (BVEXTRACT 8 8 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 9 9 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value(0)) 0) (EQ (BVEXTRACT 9 9 new$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value(0)) 1) (EQ (BVEXTRACT 9 9 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 10 10 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value(0)) 0) (EQ (BVEXTRACT 10 10 new$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value(0)) 1) (EQ (BVEXTRACT 10 10 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value(0)) 0) (EQ (BVEXTRACT 11 11 new$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value(0)) 1) (EQ (BVEXTRACT 11 11 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value(0)) 0) (EQ (BVEXTRACT 12 12 new$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value(0)) 1) (EQ (BVEXTRACT 12 12 new$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value(0)) 0) (EQ (BVEXTRACT 13 13 new$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value(0)) 1) (EQ (BVEXTRACT 13 13 new$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$1(0)) 0)
Add formula: (AND (EQ pmem.c(1) 3))
Handle equation: (EQ pmem.c(1) 3)
Add formula: (AND (EQ PA.value(1) VA.value(0)))
Handle equation: (EQ PA.value(1) VA.value(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1))
Add formula: (AND (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1))))
Handle equation: (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10)
Add formula: (AND (EQ PA.value_L1_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L1_1(1) PA.value(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c(1)) 11)
Add formula: (AND (EQ PA.value_L2_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L2_1(1) PA.value(1))
Add formula: (AND (EQ PA.value_M_1(1) PA.value(1)))
Handle equation: (EQ PA.value_M_1(1) PA.value(1))
Add formula: (AND (EQ pmem.cacheData(1) M.DATA_M_1(0)))
Handle equation: (EQ pmem.cacheData(1) M.DATA_M_1(0))
Add formula: (AND (EQ M.DATA(1) M.DATA_M_1(0)))
Handle equation: (EQ M.DATA(1) M.DATA_M_1(0))
Add formula: (OR (EQ phi_1 000) (EQ phi_1 001) (EQ phi_1 010) (EQ phi_1 011) (EQ phi_1 100) (EQ phi_1 101) (EQ phi_1 110) (EQ phi_1 111))
Add formula: (AND (OR (EQ phi_1_0 1) (NOTEQ phi_1 000)) (OR (NOTEQ phi_1_0 1) (EQ phi_1 000)) (OR (EQ phi_1_0 0) (EQ pmem.offset(1) 000)) (OR (EQ phi_1_0 0) (EQ pmem.TMP_2(1) (BVEXTRACT 31 0 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_1_1 1) (NOTEQ phi_1 001)) (OR (NOTEQ phi_1_1 1) (EQ phi_1 001)) (OR (EQ phi_1_1 0) (EQ pmem.offset(1) 001)) (OR (EQ phi_1_1 0) (EQ pmem.TMP_2(1) (BVEXTRACT 63 32 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_1_2 1) (NOTEQ phi_1 010)) (OR (NOTEQ phi_1_2 1) (EQ phi_1 010)) (OR (EQ phi_1_2 0) (EQ pmem.offset(1) 010)) (OR (EQ phi_1_2 0) (EQ pmem.TMP_2(1) (BVEXTRACT 95 64 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_1_3 1) (NOTEQ phi_1 011)) (OR (NOTEQ phi_1_3 1) (EQ phi_1 011)) (OR (EQ phi_1_3 0) (EQ pmem.offset(1) 011)) (OR (EQ phi_1_3 0) (EQ pmem.TMP_2(1) (BVEXTRACT 127 96 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_1_4 1) (NOTEQ phi_1 100)) (OR (NOTEQ phi_1_4 1) (EQ phi_1 100)) (OR (EQ phi_1_4 0) (EQ pmem.offset(1) 100)) (OR (EQ phi_1_4 0) (EQ pmem.TMP_2(1) (BVEXTRACT 159 128 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_1_5 1) (NOTEQ phi_1 101)) (OR (NOTEQ phi_1_5 1) (EQ phi_1 101)) (OR (EQ phi_1_5 0) (EQ pmem.offset(1) 101)) (OR (EQ phi_1_5 0) (EQ pmem.TMP_2(1) (BVEXTRACT 191 160 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_1_6 1) (NOTEQ phi_1 110)) (OR (NOTEQ phi_1_6 1) (EQ phi_1 110)) (OR (EQ phi_1_6 0) (EQ pmem.offset(1) 110)) (OR (EQ phi_1_6 0) (EQ pmem.TMP_2(1) (BVEXTRACT 223 192 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_1_7 1) (NOTEQ phi_1 111)) (OR (NOTEQ phi_1_7 1) (EQ phi_1 111)) (OR (EQ phi_1_7 0) (NOTEQ pmem.offset(1) 000)) (OR (EQ phi_1_7 0) (NOTEQ pmem.offset(1) 001)) (OR (EQ phi_1_7 0) (NOTEQ pmem.offset(1) 010)) (OR (EQ phi_1_7 0) (NOTEQ pmem.offset(1) 011)) (OR (EQ phi_1_7 0) (NOTEQ pmem.offset(1) 100)) (OR (EQ phi_1_7 0) (NOTEQ pmem.offset(1) 101)) (OR (EQ phi_1_7 0) (NOTEQ pmem.offset(1) 110)) (OR (EQ phi_1_7 0) (EQ pmem.TMP_2(1) (BVEXTRACT 255 224 pmem.cacheData(1)))))
Add formula: (AND (EQ pmem.data(1) pmem.TMP_2(1)))
Handle equation: (EQ pmem.data(1) pmem.TMP_2(1))
Add formula: (AND (EQ pmem.l2Entry.V(1) 1))
Handle equation: (EQ pmem.l2Entry.V(1) 1)
Add formula: (AND (EQ pmem.l2Entry.TAG(1) (BVEXTRACT 31 17 PA.value(1))))
Handle equation: (EQ pmem.l2Entry.TAG(1) (BVEXTRACT 31 17 PA.value(1)))
Add formula: (AND (EQ pmem.l2Entry.DATA(1) pmem.cacheData(1)))
Handle equation: (EQ pmem.l2Entry.DATA(1) pmem.cacheData(1))
Add formula: (AND (EQ pmem.l1Entry.V(1) 1))
Handle equation: (EQ pmem.l1Entry.V(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG(1) (BVEXTRACT 31 12 PA.value(1))))
Handle equation: (EQ pmem.l1Entry.TAG(1) (BVEXTRACT 31 12 PA.value(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA(1) pmem.cacheData(1)))
Handle equation: (EQ pmem.l1Entry.DATA(1) pmem.cacheData(1))
Add formula: (EQ pmem.c pmem.c(1))
Handle equation: (EQ pmem.c pmem.c(1))
Add formula: (EQ PA.value PA.value(1))
Handle equation: (EQ PA.value PA.value(1))
Add formula: (EQ VA.value VA.value(0))
Handle equation: (EQ VA.value VA.value(0))
Add formula: (EQ MMU_PA.value_MMU_PA_0 MMU_PA.value_MMU_PA_0(1))
Handle equation: (EQ MMU_PA.value_MMU_PA_0 MMU_PA.value_MMU_PA_0(1))
Add formula: (EQ pmem.offset pmem.offset(1))
Handle equation: (EQ pmem.offset pmem.offset(1))
Add formula: (EQ PA.value_L1_1 PA.value_L1_1(1))
Handle equation: (EQ PA.value_L1_1 PA.value_L1_1(1))
Add formula: (EQ PA.value_L2_1 PA.value_L2_1(1))
Handle equation: (EQ PA.value_L2_1 PA.value_L2_1(1))
Add formula: (EQ PA.value_M_1 PA.value_M_1(1))
Handle equation: (EQ PA.value_M_1 PA.value_M_1(1))
Add formula: (EQ pmem.cacheData pmem.cacheData(1))
Handle equation: (EQ pmem.cacheData pmem.cacheData(1))
Add formula: (EQ M.DATA_M_1 M.DATA_M_1(0))
Handle equation: (EQ M.DATA_M_1 M.DATA_M_1(0))
Add formula: (EQ M.DATA M.DATA(1))
Handle equation: (EQ M.DATA M.DATA(1))
Add formula: (EQ pmem.data pmem.data(1))
Handle equation: (EQ pmem.data pmem.data(1))
Add formula: (EQ pmem.TMP_2 pmem.TMP_2(1))
Handle equation: (EQ pmem.TMP_2 pmem.TMP_2(1))
Add formula: (EQ pmem.l2Entry.V pmem.l2Entry.V(1))
Handle equation: (EQ pmem.l2Entry.V pmem.l2Entry.V(1))
Add formula: (EQ pmem.l2Entry.TAG pmem.l2Entry.TAG(1))
Handle equation: (EQ pmem.l2Entry.TAG pmem.l2Entry.TAG(1))
Add formula: (EQ pmem.l2Entry.DATA pmem.l2Entry.DATA(1))
Handle equation: (EQ pmem.l2Entry.DATA pmem.l2Entry.DATA(1))
Add formula: (EQ pmem.l1Entry.V pmem.l1Entry.V(1))
Handle equation: (EQ pmem.l1Entry.V pmem.l1Entry.V(1))
Add formula: (EQ pmem.l1Entry.TAG pmem.l1Entry.TAG(1))
Handle equation: (EQ pmem.l1Entry.TAG pmem.l1Entry.TAG(1))
Add formula: (EQ pmem.l1Entry.DATA pmem.l1Entry.DATA(1))
Handle equation: (EQ pmem.l1Entry.DATA pmem.l1Entry.DATA(1))
Solving result: {}
Memory access path of length 26 for trajectory [MMU_PA, L1, L2, M, L2, L1]
Success
Searching for a memory access path: [MMU_PA, L1, L2, M, L2, L1]
No feasible memory access path has been found
Searching for a memory access path: [MMU_PA, L1, L1]
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$2(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$2(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 1 1 new$2(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 1) (EQ (BVEXTRACT 1 1 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 30 30 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$2(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value(0)) 1) (EQ (BVEXTRACT 2 2 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 3 3 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 29 29 VA.value(0)) 0) (EQ (BVEXTRACT 3 3 new$2(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value(0)) 1) (EQ (BVEXTRACT 3 3 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 4 4 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 28 28 VA.value(0)) 0) (EQ (BVEXTRACT 4 4 new$2(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value(0)) 1) (EQ (BVEXTRACT 4 4 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 5 5 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value(0)) 0) (EQ (BVEXTRACT 5 5 new$2(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value(0)) 1) (EQ (BVEXTRACT 5 5 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 6 6 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value(0)) 0) (EQ (BVEXTRACT 6 6 new$2(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value(0)) 1) (EQ (BVEXTRACT 6 6 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 7 7 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value(0)) 0) (EQ (BVEXTRACT 7 7 new$2(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value(0)) 1) (EQ (BVEXTRACT 7 7 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 8 8 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value(0)) 0) (EQ (BVEXTRACT 8 8 new$2(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value(0)) 1) (EQ (BVEXTRACT 8 8 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 9 9 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value(0)) 0) (EQ (BVEXTRACT 9 9 new$2(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value(0)) 1) (EQ (BVEXTRACT 9 9 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 10 10 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value(0)) 0) (EQ (BVEXTRACT 10 10 new$2(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value(0)) 1) (EQ (BVEXTRACT 10 10 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value(0)) 0) (EQ (BVEXTRACT 11 11 new$2(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value(0)) 1) (EQ (BVEXTRACT 11 11 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value(0)) 0) (EQ (BVEXTRACT 12 12 new$2(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value(0)) 1) (EQ (BVEXTRACT 12 12 new$2(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$2(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value(0)) 0) (EQ (BVEXTRACT 13 13 new$2(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value(0)) 1) (EQ (BVEXTRACT 13 13 new$2(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$2(0)) 0)
Add formula: (AND (EQ pmem.c(1) 3))
Handle equation: (EQ pmem.c(1) 3)
Add formula: (AND (EQ PA.value(1) VA.value(0)))
Handle equation: (EQ PA.value(1) VA.value(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1))
Add formula: (AND (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1))))
Handle equation: (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10)
Add formula: (AND (EQ PA.value_L1_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L1_1(1) PA.value(1))
Add formula: (AND (EQ L1.V_L1_1(1) 1) (EQ L1.TAG_L1_1(1) (BVEXTRACT 31 12 PA.value_L1_1(1))))
Handle equation: (EQ L1.V_L1_1(1) 1)
Handle equation: (EQ L1.TAG_L1_1(1) (BVEXTRACT 31 12 PA.value_L1_1(1)))
Add formula: (AND (EQ PA.value_L1_1(2) PA.value(1)))
Handle equation: (EQ PA.value_L1_1(2) PA.value(1))
Add formula: (AND (EQ pmem.l1Entry.DATA(1) L1.DATA_L1_1(0)) (EQ pmem.l1Entry.TAG(1) L1.TAG_L1_1(1)) (EQ pmem.l1Entry.V(1) L1.V_L1_1(1)))
Handle equation: (EQ pmem.l1Entry.DATA(1) L1.DATA_L1_1(0))
Handle equation: (EQ pmem.l1Entry.TAG(1) L1.TAG_L1_1(1))
Handle equation: (EQ pmem.l1Entry.V(1) L1.V_L1_1(1))
Add formula: (AND (EQ L1.V(1) L1.V_L1_1(1)) (EQ L1.TAG(1) L1.TAG_L1_1(1)) (EQ L1.DATA(1) L1.DATA_L1_1(0)))
Handle equation: (EQ L1.V(1) L1.V_L1_1(1))
Handle equation: (EQ L1.TAG(1) L1.TAG_L1_1(1))
Handle equation: (EQ L1.DATA(1) L1.DATA_L1_1(0))
Add formula: (AND (EQ pmem.cacheData(1) pmem.l1Entry.DATA(1)))
Handle equation: (EQ pmem.cacheData(1) pmem.l1Entry.DATA(1))
Add formula: (OR (EQ phi_2 000) (EQ phi_2 001) (EQ phi_2 010) (EQ phi_2 011) (EQ phi_2 100) (EQ phi_2 101) (EQ phi_2 110) (EQ phi_2 111))
Add formula: (AND (OR (EQ phi_2_0 1) (NOTEQ phi_2 000)) (OR (NOTEQ phi_2_0 1) (EQ phi_2 000)) (OR (EQ phi_2_0 0) (EQ pmem.offset(1) 000)) (OR (EQ phi_2_0 0) (EQ pmem.TMP_0(1) (BVEXTRACT 31 0 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_2_1 1) (NOTEQ phi_2 001)) (OR (NOTEQ phi_2_1 1) (EQ phi_2 001)) (OR (EQ phi_2_1 0) (EQ pmem.offset(1) 001)) (OR (EQ phi_2_1 0) (EQ pmem.TMP_0(1) (BVEXTRACT 63 32 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_2_2 1) (NOTEQ phi_2 010)) (OR (NOTEQ phi_2_2 1) (EQ phi_2 010)) (OR (EQ phi_2_2 0) (EQ pmem.offset(1) 010)) (OR (EQ phi_2_2 0) (EQ pmem.TMP_0(1) (BVEXTRACT 95 64 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_2_3 1) (NOTEQ phi_2 011)) (OR (NOTEQ phi_2_3 1) (EQ phi_2 011)) (OR (EQ phi_2_3 0) (EQ pmem.offset(1) 011)) (OR (EQ phi_2_3 0) (EQ pmem.TMP_0(1) (BVEXTRACT 127 96 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_2_4 1) (NOTEQ phi_2 100)) (OR (NOTEQ phi_2_4 1) (EQ phi_2 100)) (OR (EQ phi_2_4 0) (EQ pmem.offset(1) 100)) (OR (EQ phi_2_4 0) (EQ pmem.TMP_0(1) (BVEXTRACT 159 128 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_2_5 1) (NOTEQ phi_2 101)) (OR (NOTEQ phi_2_5 1) (EQ phi_2 101)) (OR (EQ phi_2_5 0) (EQ pmem.offset(1) 101)) (OR (EQ phi_2_5 0) (EQ pmem.TMP_0(1) (BVEXTRACT 191 160 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_2_6 1) (NOTEQ phi_2 110)) (OR (NOTEQ phi_2_6 1) (EQ phi_2 110)) (OR (EQ phi_2_6 0) (EQ pmem.offset(1) 110)) (OR (EQ phi_2_6 0) (EQ pmem.TMP_0(1) (BVEXTRACT 223 192 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_2_7 1) (NOTEQ phi_2 111)) (OR (NOTEQ phi_2_7 1) (EQ phi_2 111)) (OR (EQ phi_2_7 0) (NOTEQ pmem.offset(1) 000)) (OR (EQ phi_2_7 0) (NOTEQ pmem.offset(1) 001)) (OR (EQ phi_2_7 0) (NOTEQ pmem.offset(1) 010)) (OR (EQ phi_2_7 0) (NOTEQ pmem.offset(1) 011)) (OR (EQ phi_2_7 0) (NOTEQ pmem.offset(1) 100)) (OR (EQ phi_2_7 0) (NOTEQ pmem.offset(1) 101)) (OR (EQ phi_2_7 0) (NOTEQ pmem.offset(1) 110)) (OR (EQ phi_2_7 0) (EQ pmem.TMP_0(1) (BVEXTRACT 255 224 pmem.cacheData(1)))))
Add formula: (AND (EQ pmem.data(1) pmem.TMP_0(1)))
Handle equation: (EQ pmem.data(1) pmem.TMP_0(1))
Checking feasibility of the memory access: MemoryAccessConstraints [null, [], []]
Solving path constraints
Add formula: (EQ (BVEXTRACT 1 0 VA.value(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$3(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$3(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 1 1 new$3(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 1) (EQ (BVEXTRACT 1 1 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 30 30 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$3(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value(0)) 1) (EQ (BVEXTRACT 2 2 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 3 3 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 29 29 VA.value(0)) 0) (EQ (BVEXTRACT 3 3 new$3(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value(0)) 1) (EQ (BVEXTRACT 3 3 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 4 4 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 28 28 VA.value(0)) 0) (EQ (BVEXTRACT 4 4 new$3(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value(0)) 1) (EQ (BVEXTRACT 4 4 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 5 5 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value(0)) 0) (EQ (BVEXTRACT 5 5 new$3(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value(0)) 1) (EQ (BVEXTRACT 5 5 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 6 6 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value(0)) 0) (EQ (BVEXTRACT 6 6 new$3(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value(0)) 1) (EQ (BVEXTRACT 6 6 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 7 7 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value(0)) 0) (EQ (BVEXTRACT 7 7 new$3(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value(0)) 1) (EQ (BVEXTRACT 7 7 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 8 8 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value(0)) 0) (EQ (BVEXTRACT 8 8 new$3(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value(0)) 1) (EQ (BVEXTRACT 8 8 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 9 9 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value(0)) 0) (EQ (BVEXTRACT 9 9 new$3(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value(0)) 1) (EQ (BVEXTRACT 9 9 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 10 10 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value(0)) 0) (EQ (BVEXTRACT 10 10 new$3(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value(0)) 1) (EQ (BVEXTRACT 10 10 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value(0)) 0) (EQ (BVEXTRACT 11 11 new$3(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value(0)) 1) (EQ (BVEXTRACT 11 11 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value(0)) 0) (EQ (BVEXTRACT 12 12 new$3(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value(0)) 1) (EQ (BVEXTRACT 12 12 new$3(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$3(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value(0)) 0) (EQ (BVEXTRACT 13 13 new$3(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value(0)) 1) (EQ (BVEXTRACT 13 13 new$3(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$3(0)) 0)
Add formula: (AND (EQ pmem.c(1) 3))
Handle equation: (EQ pmem.c(1) 3)
Add formula: (AND (EQ PA.value(1) VA.value(0)))
Handle equation: (EQ PA.value(1) VA.value(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1))
Add formula: (AND (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1))))
Handle equation: (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10)
Add formula: (AND (EQ PA.value_L1_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L1_1(1) PA.value(1))
Add formula: (AND (EQ L1.V_L1_1(1) 1) (EQ L1.TAG_L1_1(1) (BVEXTRACT 31 12 PA.value_L1_1(1))))
Handle equation: (EQ L1.V_L1_1(1) 1)
Handle equation: (EQ L1.TAG_L1_1(1) (BVEXTRACT 31 12 PA.value_L1_1(1)))
Add formula: (AND (EQ PA.value_L1_1(2) PA.value(1)))
Handle equation: (EQ PA.value_L1_1(2) PA.value(1))
Add formula: (AND (EQ pmem.l1Entry.DATA(1) L1.DATA_L1_1(0)) (EQ pmem.l1Entry.TAG(1) L1.TAG_L1_1(1)) (EQ pmem.l1Entry.V(1) L1.V_L1_1(1)))
Handle equation: (EQ pmem.l1Entry.DATA(1) L1.DATA_L1_1(0))
Handle equation: (EQ pmem.l1Entry.TAG(1) L1.TAG_L1_1(1))
Handle equation: (EQ pmem.l1Entry.V(1) L1.V_L1_1(1))
Add formula: (AND (EQ L1.V(1) L1.V_L1_1(1)) (EQ L1.TAG(1) L1.TAG_L1_1(1)) (EQ L1.DATA(1) L1.DATA_L1_1(0)))
Handle equation: (EQ L1.V(1) L1.V_L1_1(1))
Handle equation: (EQ L1.TAG(1) L1.TAG_L1_1(1))
Handle equation: (EQ L1.DATA(1) L1.DATA_L1_1(0))
Add formula: (AND (EQ pmem.cacheData(1) pmem.l1Entry.DATA(1)))
Handle equation: (EQ pmem.cacheData(1) pmem.l1Entry.DATA(1))
Add formula: (OR (EQ phi_3 000) (EQ phi_3 001) (EQ phi_3 010) (EQ phi_3 011) (EQ phi_3 100) (EQ phi_3 101) (EQ phi_3 110) (EQ phi_3 111))
Add formula: (AND (OR (EQ phi_3_0 1) (NOTEQ phi_3 000)) (OR (NOTEQ phi_3_0 1) (EQ phi_3 000)) (OR (EQ phi_3_0 0) (EQ pmem.offset(1) 000)) (OR (EQ phi_3_0 0) (EQ pmem.TMP_0(1) (BVEXTRACT 31 0 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_3_1 1) (NOTEQ phi_3 001)) (OR (NOTEQ phi_3_1 1) (EQ phi_3 001)) (OR (EQ phi_3_1 0) (EQ pmem.offset(1) 001)) (OR (EQ phi_3_1 0) (EQ pmem.TMP_0(1) (BVEXTRACT 63 32 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_3_2 1) (NOTEQ phi_3 010)) (OR (NOTEQ phi_3_2 1) (EQ phi_3 010)) (OR (EQ phi_3_2 0) (EQ pmem.offset(1) 010)) (OR (EQ phi_3_2 0) (EQ pmem.TMP_0(1) (BVEXTRACT 95 64 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_3_3 1) (NOTEQ phi_3 011)) (OR (NOTEQ phi_3_3 1) (EQ phi_3 011)) (OR (EQ phi_3_3 0) (EQ pmem.offset(1) 011)) (OR (EQ phi_3_3 0) (EQ pmem.TMP_0(1) (BVEXTRACT 127 96 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_3_4 1) (NOTEQ phi_3 100)) (OR (NOTEQ phi_3_4 1) (EQ phi_3 100)) (OR (EQ phi_3_4 0) (EQ pmem.offset(1) 100)) (OR (EQ phi_3_4 0) (EQ pmem.TMP_0(1) (BVEXTRACT 159 128 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_3_5 1) (NOTEQ phi_3 101)) (OR (NOTEQ phi_3_5 1) (EQ phi_3 101)) (OR (EQ phi_3_5 0) (EQ pmem.offset(1) 101)) (OR (EQ phi_3_5 0) (EQ pmem.TMP_0(1) (BVEXTRACT 191 160 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_3_6 1) (NOTEQ phi_3 110)) (OR (NOTEQ phi_3_6 1) (EQ phi_3 110)) (OR (EQ phi_3_6 0) (EQ pmem.offset(1) 110)) (OR (EQ phi_3_6 0) (EQ pmem.TMP_0(1) (BVEXTRACT 223 192 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_3_7 1) (NOTEQ phi_3 111)) (OR (NOTEQ phi_3_7 1) (EQ phi_3 111)) (OR (EQ phi_3_7 0) (NOTEQ pmem.offset(1) 000)) (OR (EQ phi_3_7 0) (NOTEQ pmem.offset(1) 001)) (OR (EQ phi_3_7 0) (NOTEQ pmem.offset(1) 010)) (OR (EQ phi_3_7 0) (NOTEQ pmem.offset(1) 011)) (OR (EQ phi_3_7 0) (NOTEQ pmem.offset(1) 100)) (OR (EQ phi_3_7 0) (NOTEQ pmem.offset(1) 101)) (OR (EQ phi_3_7 0) (NOTEQ pmem.offset(1) 110)) (OR (EQ phi_3_7 0) (EQ pmem.TMP_0(1) (BVEXTRACT 255 224 pmem.cacheData(1)))))
Add formula: (AND (EQ pmem.data(1) pmem.TMP_0(1)))
Handle equation: (EQ pmem.data(1) pmem.TMP_0(1))
Add formula: (EQ pmem.c pmem.c(1))
Handle equation: (EQ pmem.c pmem.c(1))
Add formula: (EQ PA.value PA.value(1))
Handle equation: (EQ PA.value PA.value(1))
Add formula: (EQ VA.value VA.value(0))
Handle equation: (EQ VA.value VA.value(0))
Add formula: (EQ MMU_PA.value_MMU_PA_0 MMU_PA.value_MMU_PA_0(1))
Handle equation: (EQ MMU_PA.value_MMU_PA_0 MMU_PA.value_MMU_PA_0(1))
Add formula: (EQ pmem.offset pmem.offset(1))
Handle equation: (EQ pmem.offset pmem.offset(1))
Add formula: (EQ PA.value_L1_1 PA.value_L1_1(2))
Handle equation: (EQ PA.value_L1_1 PA.value_L1_1(2))
Add formula: (EQ L1.V_L1_1 L1.V_L1_1(1))
Handle equation: (EQ L1.V_L1_1 L1.V_L1_1(1))
Add formula: (EQ L1.TAG_L1_1 L1.TAG_L1_1(1))
Handle equation: (EQ L1.TAG_L1_1 L1.TAG_L1_1(1))
Add formula: (EQ pmem.l1Entry.DATA pmem.l1Entry.DATA(1))
Handle equation: (EQ pmem.l1Entry.DATA pmem.l1Entry.DATA(1))
Add formula: (EQ L1.DATA_L1_1 L1.DATA_L1_1(0))
Handle equation: (EQ L1.DATA_L1_1 L1.DATA_L1_1(0))
Add formula: (EQ pmem.l1Entry.TAG pmem.l1Entry.TAG(1))
Handle equation: (EQ pmem.l1Entry.TAG pmem.l1Entry.TAG(1))
Add formula: (EQ pmem.l1Entry.V pmem.l1Entry.V(1))
Handle equation: (EQ pmem.l1Entry.V pmem.l1Entry.V(1))
Add formula: (EQ L1.V L1.V(1))
Handle equation: (EQ L1.V L1.V(1))
Add formula: (EQ L1.TAG L1.TAG(1))
Handle equation: (EQ L1.TAG L1.TAG(1))
Add formula: (EQ L1.DATA L1.DATA(1))
Handle equation: (EQ L1.DATA L1.DATA(1))
Add formula: (EQ pmem.cacheData pmem.cacheData(1))
Handle equation: (EQ pmem.cacheData pmem.cacheData(1))
Add formula: (EQ pmem.data pmem.data(1))
Handle equation: (EQ pmem.data pmem.data(1))
Add formula: (EQ pmem.TMP_0 pmem.TMP_0(1))
Handle equation: (EQ pmem.TMP_0 pmem.TMP_0(1))
Solving result: {}
Memory access path of length 15 for trajectory [MMU_PA, L1, L1]
Success
Searching for a memory access path: [MMU_PA, L1, L1]
No feasible memory access path has been found
Checking dependencies between READ(M:M_1[PA:PA.value_M_1[32]]) and READ(L1:L1_1[PA:PA.value_L1_1[32]])
Possible dependencies: 1
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.

-------------- Constructed Test Case 0 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	ori $16, $0, 0x56f5
	sll $16, $16, 16
	ori $16, $16, 0xb098
	sw $16, 0($18)
	addiu $18, $18, 0x4
	xori $11, $0, 0xf8a2
	sll $11, $11, 16
	ori $11, $11, 0x6647
	lui $12, 0x6315
	ori $12, $12, 0x34c9
	
	# M[0x140000]=[DATA=0xC7719687]
	ori $8, $0, 0x14
	sll $8, $8, 16
	ori $9, $0, 0xc771
	sll $9, $9, 16
	xori $9, $9, 0x9687
	sw $9, 0($8)
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x140000]=[0xC7719687]
	#   WRITE MMU_PA[<unknown>]
	#   MISS  L1[0x140000]
	#   MISS  L2[0x140000]
	#   READ  M[0x140000]=[DATA=0xC7719687]
	#   WRITE L2[0x140000]
	#   WRITE L1[0x140000]
	xori $13, $0, 0x14
	sll $13, $13, 16
	ori $17, $0, 0x5789
	sll $17, $17, 16
	xori $17, $17, 0xd814
	sw $17, 0($19)
	addiu $19, $19, 0x4
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x140000]=[0x40831258]
	#   WRITE MMU_PA[<unknown>]
	#   HIT   L1[0x140000]
	#   READ  L1[0x140000]
	ori $14, $0, 0x14
	sll $14, $14, 16
	la $18, branch_data_0
	lui $10, 0x862f
	ori $10, $10, 0xe7c4
	la $19, branch_data_1
	
	Stimulus
start_0000:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [true]
	bgez $16, normal_0000
	nop
overflow_0000:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $9, $10
	j finish_0000
	nop
normal_0000:
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $11, $12
	lw $20, 0($13)
	lw $17, 0($19)
	addiu $19, $19, 0x4
	lw $21, 0($14)
finish_0000:
	nop
	# Execution trace: [false]
	bltz $17, start_0000
	nop

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a0000 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a0008 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a0010 (PA): ori $16, $0, 0x56f5 (0x341056F5)
0x00000000000a0014 (PA): sll $16, $16, 16 (0x00108400)
0x00000000000a0018 (PA): ori $16, $16, 0xb098 (0x3610B098)
0x00000000000a001c (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a0020 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0024 (PA): xori $11, $0, 0xf8a2 (0x380BF8A2)
0x00000000000a0028 (PA): sll $11, $11, 16 (0x000B5C00)
0x00000000000a002c (PA): ori $11, $11, 0x6647 (0x356B6647)
0x00000000000a0030 (PA): lui $12, 0x6315 (0x3C0C6315)
0x00000000000a0034 (PA): ori $12, $12, 0x34c9 (0x358C34C9)
0x00000000000a0038 (PA): ori $8, $0, 0x14 (0x34080014)
0x00000000000a003c (PA): sll $8, $8, 16 (0x00084400)
0x00000000000a0040 (PA): ori $9, $0, 0xc771 (0x3409C771)
0x00000000000a0044 (PA): sll $9, $9, 16 (0x00094C00)
0x00000000000a0048 (PA): xori $9, $9, 0x9687 (0x39299687)
0x00000000000a004c (PA): sw $9, 0($8) (0xAD090000)
0x00000000000a0050 (PA): xori $13, $0, 0x14 (0x380D0014)
0x00000000000a0054 (PA): sll $13, $13, 16 (0x000D6C00)
0x00000000000a0058 (PA): ori $17, $0, 0x5789 (0x34115789)
0x00000000000a005c (PA): sll $17, $17, 16 (0x00118C00)
0x00000000000a0060 (PA): xori $17, $17, 0xd814 (0x3A31D814)
0x00000000000a0064 (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a0068 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a006c (PA): ori $14, $0, 0x14 (0x340E0014)
0x00000000000a0070 (PA): sll $14, $14, 16 (0x000E7400)
0x00000000000a0074 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a007c (PA): lui $10, 0x862f (0x3C0A862F)
0x00000000000a0080 (PA): ori $10, $10, 0xe7c4 (0x354AE7C4)
0x00000000000a0084 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a008c (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a0090 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0094 (PA): nop (0x00000000)
0x00000000000a0098 (PA): bgez $16, normal_0000 (0x0601FFE5)
0x00000000000a009c (PA): nop (0x00000000)
0x00000000000a00a0 (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a00a4 (PA): j finish_0000 (0x08028011)
0x00000000000a00a8 (PA): nop (0x00000000)
0x00000000000a00ac (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a00b0 (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a00b4 (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a00b8 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a00bc (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a00c0 (PA): nop (0x00000000)
0x00000000000a00c4 (PA): bltz $17, start_0000 (0x0620FFD2)
0x00000000000a00c8 (PA): nop (0x00000000)

--------- Running Execution from Test Case 0 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x00000000000a0000

0x00000000000a0000 la $18, branch_data_0
0x00000000000a0008 la $19, branch_data_1
0x00000000000a0010 ori $16, $0, 0x56f5
0x00000000000a0014 sll $16, $16, 16
0x00000000000a0018 ori $16, $16, 0xb098
0x00000000000a001c sw $16, 0($18)
0x00000000000a0020 addiu $18, $18, 0x4
0x00000000000a0024 xori $11, $0, 0xf8a2
0x00000000000a0028 sll $11, $11, 16
0x00000000000a002c ori $11, $11, 0x6647
0x00000000000a0030 lui $12, 0x6315
0x00000000000a0034 ori $12, $12, 0x34c9
0x00000000000a0038 
0x00000000000a0038 ori $8, $0, 0x14
0x00000000000a003c sll $8, $8, 16
0x00000000000a0040 ori $9, $0, 0xc771
0x00000000000a0044 sll $9, $9, 16
0x00000000000a0048 xori $9, $9, 0x9687
0x00000000000a004c sw $9, 0($8)
0x00000000000a0050 
0x00000000000a0050 xori $13, $0, 0x14
0x00000000000a0054 sll $13, $13, 16
0x00000000000a0058 ori $17, $0, 0x5789
0x00000000000a005c sll $17, $17, 16
0x00000000000a0060 xori $17, $17, 0xd814
0x00000000000a0064 sw $17, 0($19)
0x00000000000a0068 addiu $19, $19, 0x4
0x00000000000a006c 
0x00000000000a006c ori $14, $0, 0x14
0x00000000000a0070 sll $14, $14, 16
0x00000000000a0074 la $18, branch_data_0
0x00000000000a007c lui $10, 0x862f
0x00000000000a0080 ori $10, $10, 0xe7c4
0x00000000000a0084 la $19, branch_data_1
start_0000:
0x00000000000a008c lw $16, 0($18)
0x00000000000a0090 addiu $18, $18, 0x4
0x00000000000a0094 nop
0x00000000000a0098 bgez $16, normal_0000
0x00000000000a009c nop
Jump to 0x00000000000a00ac
normal_0000:
0x00000000000a00ac add $8, $11, $12
0x00000000000a00b0 lw $20, 0($13)
0x00000000000a00b4 lw $17, 0($19)
0x00000000000a00b8 addiu $19, $19, 0x4
0x00000000000a00bc lw $21, 0($14)
finish_0000:
0x00000000000a00c0 nop
0x00000000000a00c4 bltz $17, start_0000
0x00000000000a00c8 nop
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.

-------------- Constructed Test Case 1 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	xori $16, $0, 0x6b5
	sll $16, $16, 16
	xori $16, $16, 0xcda4
	sw $16, 0($18)
	addiu $18, $18, 0x4
	lui $11, 0x6074
	xori $11, $11, 0xb8e3
	la $1, preparator_data_n08_0001
	lw $12, 0($1)
	
	# M[0x160000]=[DATA=0xE9D9C5ED]
	lui $8, 0x16
	xori $9, $0, 0xe9d9
	sll $9, $9, 16
	xori $9, $9, 0xc5ed
	sw $9, 0($8)
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x160000]=[0xE9D9C5ED]
	#   WRITE MMU_PA[<unknown>]
	#   MISS  L1[0x160000]
	#   MISS  L2[0x160000]
	#   READ  M[0x160000]=[DATA=0xE9D9C5ED]
	#   WRITE L2[0x160000]
	#   WRITE L1[0x160000]
	ori $13, $0, 0x16
	sll $13, $13, 16
	xori $17, $0, 0x4fd6
	sll $17, $17, 16
	ori $17, $17, 0x768d
	sw $17, 0($19)
	addiu $19, $19, 0x4
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x140000]=[0xC633228]
	#   WRITE MMU_PA[<unknown>]
	#   HIT   L1[0x140000]
	#   READ  L1[0x140000]
	ori $14, $0, 0x14
	sll $14, $14, 16
	la $18, branch_data_0
	xori $10, $0, 0x8ab0
	sll $10, $10, 16
	ori $10, $10, 0x170d
	la $19, branch_data_1
	
	Stimulus
start_0001:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [true]
	bgez $16, normal_0001
	nop
overflow_0001:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $9, $10
	j finish_0001
	nop
normal_0001:
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $11, $12
	lw $20, 0($13)
	lw $17, 0($19)
	addiu $19, $19, 0x4
	lw $21, 0($14)
finish_0001:
	nop
	# Execution trace: [false]
	bltz $17, start_0001
	nop

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090400

0x0000000000090400 (PA): .org 0x10410
.align 4
preparator_data_n08_0001:
0x0000000000090410 (PA): .word 0x67A9BB6D

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a00cc (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a00d4 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a00dc (PA): xori $16, $0, 0x6b5 (0x381006B5)
0x00000000000a00e0 (PA): sll $16, $16, 16 (0x00108400)
0x00000000000a00e4 (PA): xori $16, $16, 0xcda4 (0x3A10CDA4)
0x00000000000a00e8 (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a00ec (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a00f0 (PA): lui $11, 0x6074 (0x3C0B6074)
0x00000000000a00f4 (PA): xori $11, $11, 0xb8e3 (0x396BB8E3)
0x00000000000a00f8 (PA): la $1, preparator_data_n08_0001 (0x3C01000934210410)
0x00000000000a0100 (PA): lw $12, 0($1) (0x8C2C0000)
0x00000000000a0104 (PA): lui $8, 0x16 (0x3C080016)
0x00000000000a0108 (PA): xori $9, $0, 0xe9d9 (0x3809E9D9)
0x00000000000a010c (PA): sll $9, $9, 16 (0x00094C00)
0x00000000000a0110 (PA): xori $9, $9, 0xc5ed (0x3929C5ED)
0x00000000000a0114 (PA): sw $9, 0($8) (0xAD090000)
0x00000000000a0118 (PA): ori $13, $0, 0x16 (0x340D0016)
0x00000000000a011c (PA): sll $13, $13, 16 (0x000D6C00)
0x00000000000a0120 (PA): xori $17, $0, 0x4fd6 (0x38114FD6)
0x00000000000a0124 (PA): sll $17, $17, 16 (0x00118C00)
0x00000000000a0128 (PA): ori $17, $17, 0x768d (0x3631768D)
0x00000000000a012c (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a0130 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a0134 (PA): ori $14, $0, 0x14 (0x340E0014)
0x00000000000a0138 (PA): sll $14, $14, 16 (0x000E7400)
0x00000000000a013c (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a0144 (PA): xori $10, $0, 0x8ab0 (0x380A8AB0)
0x00000000000a0148 (PA): sll $10, $10, 16 (0x000A5400)
0x00000000000a014c (PA): ori $10, $10, 0x170d (0x354A170D)
0x00000000000a0150 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a0158 (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a015c (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0160 (PA): nop (0x00000000)
0x00000000000a0164 (PA): bgez $16, normal_0001 (0x0601FFE5)
0x00000000000a0168 (PA): nop (0x00000000)
0x00000000000a016c (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a0170 (PA): j finish_0001 (0x08028044)
0x00000000000a0174 (PA): nop (0x00000000)
0x00000000000a0178 (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a017c (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a0180 (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a0184 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a0188 (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a018c (PA): nop (0x00000000)
0x00000000000a0190 (PA): bltz $17, start_0001 (0x0620FFD2)
0x00000000000a0194 (PA): nop (0x00000000)

--------- Running Execution from Test Case 1 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x00000000000a00cc

0x00000000000a00cc la $18, branch_data_0
0x00000000000a00d4 la $19, branch_data_1
0x00000000000a00dc xori $16, $0, 0x6b5
0x00000000000a00e0 sll $16, $16, 16
0x00000000000a00e4 xori $16, $16, 0xcda4
0x00000000000a00e8 sw $16, 0($18)
0x00000000000a00ec addiu $18, $18, 0x4
0x00000000000a00f0 lui $11, 0x6074
0x00000000000a00f4 xori $11, $11, 0xb8e3
0x00000000000a00f8 la $1, preparator_data_n08_0001
0x00000000000a0100 lw $12, 0($1)
0x00000000000a0104 
0x00000000000a0104 lui $8, 0x16
0x00000000000a0108 xori $9, $0, 0xe9d9
0x00000000000a010c sll $9, $9, 16
0x00000000000a0110 xori $9, $9, 0xc5ed
0x00000000000a0114 sw $9, 0($8)
0x00000000000a0118 
0x00000000000a0118 ori $13, $0, 0x16
0x00000000000a011c sll $13, $13, 16
0x00000000000a0120 xori $17, $0, 0x4fd6
0x00000000000a0124 sll $17, $17, 16
0x00000000000a0128 ori $17, $17, 0x768d
0x00000000000a012c sw $17, 0($19)
0x00000000000a0130 addiu $19, $19, 0x4
0x00000000000a0134 
0x00000000000a0134 ori $14, $0, 0x14
0x00000000000a0138 sll $14, $14, 16
0x00000000000a013c la $18, branch_data_0
0x00000000000a0144 xori $10, $0, 0x8ab0
0x00000000000a0148 sll $10, $10, 16
0x00000000000a014c ori $10, $10, 0x170d
0x00000000000a0150 la $19, branch_data_1
start_0001:
0x00000000000a0158 lw $16, 0($18)
0x00000000000a015c addiu $18, $18, 0x4
0x00000000000a0160 nop
0x00000000000a0164 bgez $16, normal_0001
0x00000000000a0168 nop
Jump to 0x00000000000a0178
normal_0001:
0x00000000000a0178 add $8, $11, $12
Exception was raised: IntegerOverflow
Jump to handler of IntegerOverflow at 0x0000000000000380.
Address 0x0000000000000380 is unallocated. Simulation is paused until it is allocated.
Searching for a memory access path: [MMU_PA, L1, M, L1]
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$18(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$18(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 1 1 new$18(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 1) (EQ (BVEXTRACT 1 1 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 30 30 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$18(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value(0)) 1) (EQ (BVEXTRACT 2 2 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 3 3 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 29 29 VA.value(0)) 0) (EQ (BVEXTRACT 3 3 new$18(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value(0)) 1) (EQ (BVEXTRACT 3 3 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 4 4 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 28 28 VA.value(0)) 0) (EQ (BVEXTRACT 4 4 new$18(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value(0)) 1) (EQ (BVEXTRACT 4 4 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 5 5 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value(0)) 0) (EQ (BVEXTRACT 5 5 new$18(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value(0)) 1) (EQ (BVEXTRACT 5 5 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 6 6 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value(0)) 0) (EQ (BVEXTRACT 6 6 new$18(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value(0)) 1) (EQ (BVEXTRACT 6 6 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 7 7 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value(0)) 0) (EQ (BVEXTRACT 7 7 new$18(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value(0)) 1) (EQ (BVEXTRACT 7 7 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 8 8 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value(0)) 0) (EQ (BVEXTRACT 8 8 new$18(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value(0)) 1) (EQ (BVEXTRACT 8 8 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 9 9 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value(0)) 0) (EQ (BVEXTRACT 9 9 new$18(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value(0)) 1) (EQ (BVEXTRACT 9 9 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 10 10 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value(0)) 0) (EQ (BVEXTRACT 10 10 new$18(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value(0)) 1) (EQ (BVEXTRACT 10 10 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value(0)) 0) (EQ (BVEXTRACT 11 11 new$18(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value(0)) 1) (EQ (BVEXTRACT 11 11 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value(0)) 0) (EQ (BVEXTRACT 12 12 new$18(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value(0)) 1) (EQ (BVEXTRACT 12 12 new$18(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$18(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value(0)) 0) (EQ (BVEXTRACT 13 13 new$18(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value(0)) 1) (EQ (BVEXTRACT 13 13 new$18(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$18(0)) 0)
Add formula: (AND (EQ pmem.c(1) 3))
Handle equation: (EQ pmem.c(1) 3)
Add formula: (AND (EQ PA.value(1) VA.value(0)))
Handle equation: (EQ PA.value(1) VA.value(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1))
Add formula: (AND (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1))))
Handle equation: (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10)
Add formula: (AND (EQ PA.value_L1_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L1_1(1) PA.value(1))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 11))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 11)
No feasible memory access path has been found
Searching for a memory access path: [MMU_PA, M]
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$19(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$19(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 1 1 new$19(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 1) (EQ (BVEXTRACT 1 1 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 30 30 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$19(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value(0)) 1) (EQ (BVEXTRACT 2 2 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 3 3 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 29 29 VA.value(0)) 0) (EQ (BVEXTRACT 3 3 new$19(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value(0)) 1) (EQ (BVEXTRACT 3 3 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 4 4 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 28 28 VA.value(0)) 0) (EQ (BVEXTRACT 4 4 new$19(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value(0)) 1) (EQ (BVEXTRACT 4 4 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 5 5 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value(0)) 0) (EQ (BVEXTRACT 5 5 new$19(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value(0)) 1) (EQ (BVEXTRACT 5 5 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 6 6 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value(0)) 0) (EQ (BVEXTRACT 6 6 new$19(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value(0)) 1) (EQ (BVEXTRACT 6 6 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 7 7 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value(0)) 0) (EQ (BVEXTRACT 7 7 new$19(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value(0)) 1) (EQ (BVEXTRACT 7 7 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 8 8 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value(0)) 0) (EQ (BVEXTRACT 8 8 new$19(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value(0)) 1) (EQ (BVEXTRACT 8 8 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 9 9 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value(0)) 0) (EQ (BVEXTRACT 9 9 new$19(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value(0)) 1) (EQ (BVEXTRACT 9 9 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 10 10 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value(0)) 0) (EQ (BVEXTRACT 10 10 new$19(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value(0)) 1) (EQ (BVEXTRACT 10 10 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value(0)) 0) (EQ (BVEXTRACT 11 11 new$19(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value(0)) 1) (EQ (BVEXTRACT 11 11 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value(0)) 0) (EQ (BVEXTRACT 12 12 new$19(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value(0)) 1) (EQ (BVEXTRACT 12 12 new$19(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$19(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value(0)) 0) (EQ (BVEXTRACT 13 13 new$19(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value(0)) 1) (EQ (BVEXTRACT 13 13 new$19(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$19(0)) 0)
Add formula: (AND (EQ pmem.c(1) 3))
Handle equation: (EQ pmem.c(1) 3)
Add formula: (AND (EQ PA.value(1) VA.value(0)))
Handle equation: (EQ PA.value(1) VA.value(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1))
Add formula: (AND (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1))))
Handle equation: (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1)))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c(1)) 10))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c(1)) 10)
No feasible memory access path has been found
Checking dependencies between READ(L1:L1_1[PA:PA.value_L1_1[32]]) and READ(L1:L1_1[PA:PA.value_L1_1[32]])
Enumerating dependencies between READ(L1:L1_1[PA:PA.value_L1_1[32]]) and READ(L1:L1_1[PA:PA.value_L1_1[32]])
Possible dependencies: hazard L1.IndexNotEqual[READ(L1:L1_1[PA:PA.value_L1_1[32]]),READ(L1:L1_1[PA:PA.value_L1_1[32]])]
Possible dependencies: hazard L1.TagNotEqual[READ(L1:L1_1[PA:PA.value_L1_1[32]]),READ(L1:L1_1[PA:PA.value_L1_1[32]])]
Possible dependencies: hazard L1.TagEqual[READ(L1:L1_1[PA:PA.value_L1_1[32]]),READ(L1:L1_1[PA:PA.value_L1_1[32]])]
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$20$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$20$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$20$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$20$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$20$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$20$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L1.V_L1_1$0(1) 1) (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1))))
Handle equation: (EQ L1.V_L1_1$0(1) 1)
Handle equation: (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1)))
Add formula: (AND (EQ PA.value_L1_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0)) (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1))
Add formula: (AND (EQ L1.V$0(1) L1.V_L1_1$0(1)) (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0)))
Handle equation: (EQ L1.V$0(1) L1.V_L1_1$0(1))
Handle equation: (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1))
Add formula: (OR (EQ phi_6 000) (EQ phi_6 001) (EQ phi_6 010) (EQ phi_6 011) (EQ phi_6 100) (EQ phi_6 101) (EQ phi_6 110) (EQ phi_6 111))
Add formula: (AND (OR (EQ phi_6_0 1) (NOTEQ phi_6 000)) (OR (NOTEQ phi_6_0 1) (EQ phi_6 000)) (OR (EQ phi_6_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_6_0 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_6_1 1) (NOTEQ phi_6 001)) (OR (NOTEQ phi_6_1 1) (EQ phi_6 001)) (OR (EQ phi_6_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_6_1 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_6_2 1) (NOTEQ phi_6 010)) (OR (NOTEQ phi_6_2 1) (EQ phi_6 010)) (OR (EQ phi_6_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_6_2 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_6_3 1) (NOTEQ phi_6 011)) (OR (NOTEQ phi_6_3 1) (EQ phi_6 011)) (OR (EQ phi_6_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_6_3 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_6_4 1) (NOTEQ phi_6 100)) (OR (NOTEQ phi_6_4 1) (EQ phi_6 100)) (OR (EQ phi_6_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_6_4 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_6_5 1) (NOTEQ phi_6 101)) (OR (NOTEQ phi_6_5 1) (EQ phi_6 101)) (OR (EQ phi_6_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_6_5 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_6_6 1) (NOTEQ phi_6 110)) (OR (NOTEQ phi_6_6 1) (EQ phi_6 110)) (OR (EQ phi_6_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_6_6 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_6_7 1) (NOTEQ phi_6 111)) (OR (NOTEQ phi_6_7 1) (EQ phi_6 111)) (OR (EQ phi_6_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_6_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_6_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_6_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_6_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_6_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_6_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_6_7 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_0$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_0$0(1))
Add formula: (AND (NOTEQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0))))
Handle equation: (NOTEQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$21$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$21$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$21$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$21$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$21$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$21$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L1.V_L1_1$1(1) 1) (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1))))
Handle equation: (EQ L1.V_L1_1$1(1) 1)
Handle equation: (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1)))
Add formula: (AND (EQ PA.value_L1_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0)) (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1))
Add formula: (AND (EQ L1.V$1(1) L1.V_L1_1$1(1)) (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0)))
Handle equation: (EQ L1.V$1(1) L1.V_L1_1$1(1))
Handle equation: (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1))
Add formula: (OR (EQ phi_7 000) (EQ phi_7 001) (EQ phi_7 010) (EQ phi_7 011) (EQ phi_7 100) (EQ phi_7 101) (EQ phi_7 110) (EQ phi_7 111))
Add formula: (AND (OR (EQ phi_7_0 1) (NOTEQ phi_7 000)) (OR (NOTEQ phi_7_0 1) (EQ phi_7 000)) (OR (EQ phi_7_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_7_0 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_7_1 1) (NOTEQ phi_7 001)) (OR (NOTEQ phi_7_1 1) (EQ phi_7 001)) (OR (EQ phi_7_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_7_1 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_7_2 1) (NOTEQ phi_7 010)) (OR (NOTEQ phi_7_2 1) (EQ phi_7 010)) (OR (EQ phi_7_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_7_2 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_7_3 1) (NOTEQ phi_7 011)) (OR (NOTEQ phi_7_3 1) (EQ phi_7 011)) (OR (EQ phi_7_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_7_3 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_7_4 1) (NOTEQ phi_7 100)) (OR (NOTEQ phi_7_4 1) (EQ phi_7 100)) (OR (EQ phi_7_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_7_4 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_7_5 1) (NOTEQ phi_7 101)) (OR (NOTEQ phi_7_5 1) (EQ phi_7 101)) (OR (EQ phi_7_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_7_5 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_7_6 1) (NOTEQ phi_7 110)) (OR (NOTEQ phi_7_6 1) (EQ phi_7 110)) (OR (EQ phi_7_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_7_6 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_7_7 1) (NOTEQ phi_7 111)) (OR (NOTEQ phi_7_7 1) (EQ phi_7 111)) (OR (EQ phi_7_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_7_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_7_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_7_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_7_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_7_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_7_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_7_7 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_0$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_0$1(1))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$22$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$22$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$22$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$22$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$22$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$22$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L1.V_L1_1$0(1) 1) (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1))))
Handle equation: (EQ L1.V_L1_1$0(1) 1)
Handle equation: (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1)))
Add formula: (AND (EQ PA.value_L1_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0)) (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1))
Add formula: (AND (EQ L1.V$0(1) L1.V_L1_1$0(1)) (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0)))
Handle equation: (EQ L1.V$0(1) L1.V_L1_1$0(1))
Handle equation: (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1))
Add formula: (OR (EQ phi_8 000) (EQ phi_8 001) (EQ phi_8 010) (EQ phi_8 011) (EQ phi_8 100) (EQ phi_8 101) (EQ phi_8 110) (EQ phi_8 111))
Add formula: (AND (OR (EQ phi_8_0 1) (NOTEQ phi_8 000)) (OR (NOTEQ phi_8_0 1) (EQ phi_8 000)) (OR (EQ phi_8_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_8_0 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_8_1 1) (NOTEQ phi_8 001)) (OR (NOTEQ phi_8_1 1) (EQ phi_8 001)) (OR (EQ phi_8_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_8_1 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_8_2 1) (NOTEQ phi_8 010)) (OR (NOTEQ phi_8_2 1) (EQ phi_8 010)) (OR (EQ phi_8_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_8_2 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_8_3 1) (NOTEQ phi_8 011)) (OR (NOTEQ phi_8_3 1) (EQ phi_8 011)) (OR (EQ phi_8_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_8_3 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_8_4 1) (NOTEQ phi_8 100)) (OR (NOTEQ phi_8_4 1) (EQ phi_8 100)) (OR (EQ phi_8_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_8_4 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_8_5 1) (NOTEQ phi_8 101)) (OR (NOTEQ phi_8_5 1) (EQ phi_8 101)) (OR (EQ phi_8_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_8_5 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_8_6 1) (NOTEQ phi_8 110)) (OR (NOTEQ phi_8_6 1) (EQ phi_8 110)) (OR (EQ phi_8_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_8_6 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_8_7 1) (NOTEQ phi_8 111)) (OR (NOTEQ phi_8_7 1) (EQ phi_8 111)) (OR (EQ phi_8_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_8_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_8_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_8_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_8_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_8_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_8_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_8_7 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_0$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_0$0(1))
Add formula: (AND (EQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0))) (NOTEQ (BVEXTRACT 31 12 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 31 12 PA.value_L1_1_L1_0$1(0))))
Handle equation: (EQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0)))
Handle equation: (NOTEQ (BVEXTRACT 31 12 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 31 12 PA.value_L1_1_L1_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$23$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$23$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$23$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$23$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$23$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$23$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L1.V_L1_1$1(1) 1) (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1))))
Handle equation: (EQ L1.V_L1_1$1(1) 1)
Handle equation: (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1)))
Add formula: (AND (EQ PA.value_L1_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0)) (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1))
Add formula: (AND (EQ L1.V$1(1) L1.V_L1_1$1(1)) (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0)))
Handle equation: (EQ L1.V$1(1) L1.V_L1_1$1(1))
Handle equation: (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1))
Add formula: (OR (EQ phi_9 000) (EQ phi_9 001) (EQ phi_9 010) (EQ phi_9 011) (EQ phi_9 100) (EQ phi_9 101) (EQ phi_9 110) (EQ phi_9 111))
Add formula: (AND (OR (EQ phi_9_0 1) (NOTEQ phi_9 000)) (OR (NOTEQ phi_9_0 1) (EQ phi_9 000)) (OR (EQ phi_9_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_9_0 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_9_1 1) (NOTEQ phi_9 001)) (OR (NOTEQ phi_9_1 1) (EQ phi_9 001)) (OR (EQ phi_9_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_9_1 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_9_2 1) (NOTEQ phi_9 010)) (OR (NOTEQ phi_9_2 1) (EQ phi_9 010)) (OR (EQ phi_9_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_9_2 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_9_3 1) (NOTEQ phi_9 011)) (OR (NOTEQ phi_9_3 1) (EQ phi_9 011)) (OR (EQ phi_9_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_9_3 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_9_4 1) (NOTEQ phi_9 100)) (OR (NOTEQ phi_9_4 1) (EQ phi_9 100)) (OR (EQ phi_9_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_9_4 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_9_5 1) (NOTEQ phi_9 101)) (OR (NOTEQ phi_9_5 1) (EQ phi_9 101)) (OR (EQ phi_9_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_9_5 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_9_6 1) (NOTEQ phi_9 110)) (OR (NOTEQ phi_9_6 1) (EQ phi_9 110)) (OR (EQ phi_9_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_9_6 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_9_7 1) (NOTEQ phi_9 111)) (OR (NOTEQ phi_9_7 1) (EQ phi_9 111)) (OR (EQ phi_9_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_9_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_9_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_9_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_9_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_9_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_9_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_9_7 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_0$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_0$1(1))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$24$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$24$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$24$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$24$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$24$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$24$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L1.V_L1_1$0(1) 1) (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1))))
Handle equation: (EQ L1.V_L1_1$0(1) 1)
Handle equation: (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1)))
Add formula: (AND (EQ PA.value_L1_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0)) (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1))
Add formula: (AND (EQ L1.V$0(1) L1.V_L1_1$0(1)) (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0)))
Handle equation: (EQ L1.V$0(1) L1.V_L1_1$0(1))
Handle equation: (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1))
Add formula: (OR (EQ phi_10 000) (EQ phi_10 001) (EQ phi_10 010) (EQ phi_10 011) (EQ phi_10 100) (EQ phi_10 101) (EQ phi_10 110) (EQ phi_10 111))
Add formula: (AND (OR (EQ phi_10_0 1) (NOTEQ phi_10 000)) (OR (NOTEQ phi_10_0 1) (EQ phi_10 000)) (OR (EQ phi_10_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_10_0 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_10_1 1) (NOTEQ phi_10 001)) (OR (NOTEQ phi_10_1 1) (EQ phi_10 001)) (OR (EQ phi_10_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_10_1 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_10_2 1) (NOTEQ phi_10 010)) (OR (NOTEQ phi_10_2 1) (EQ phi_10 010)) (OR (EQ phi_10_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_10_2 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_10_3 1) (NOTEQ phi_10 011)) (OR (NOTEQ phi_10_3 1) (EQ phi_10 011)) (OR (EQ phi_10_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_10_3 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_10_4 1) (NOTEQ phi_10 100)) (OR (NOTEQ phi_10_4 1) (EQ phi_10 100)) (OR (EQ phi_10_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_10_4 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_10_5 1) (NOTEQ phi_10 101)) (OR (NOTEQ phi_10_5 1) (EQ phi_10 101)) (OR (EQ phi_10_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_10_5 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_10_6 1) (NOTEQ phi_10 110)) (OR (NOTEQ phi_10_6 1) (EQ phi_10 110)) (OR (EQ phi_10_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_10_6 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_10_7 1) (NOTEQ phi_10 111)) (OR (NOTEQ phi_10_7 1) (EQ phi_10 111)) (OR (EQ phi_10_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_10_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_10_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_10_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_10_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_10_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_10_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_10_7 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_0$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_0$0(1))
Add formula: (AND (EQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0))) (EQ (BVEXTRACT 31 12 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 31 12 PA.value_L1_1_L1_0$1(0))))
Handle equation: (EQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0)))
Handle equation: (EQ (BVEXTRACT 31 12 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 31 12 PA.value_L1_1_L1_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$25$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$25$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$25$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$25$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$25$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$25$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L1.V_L1_1$1(1) 1) (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1))))
Handle equation: (EQ L1.V_L1_1$1(1) 1)
Handle equation: (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1)))
Add formula: (AND (EQ PA.value_L1_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0)) (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1))
Add formula: (AND (EQ L1.V$1(1) L1.V_L1_1$1(1)) (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0)))
Handle equation: (EQ L1.V$1(1) L1.V_L1_1$1(1))
Handle equation: (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1))
Add formula: (OR (EQ phi_11 000) (EQ phi_11 001) (EQ phi_11 010) (EQ phi_11 011) (EQ phi_11 100) (EQ phi_11 101) (EQ phi_11 110) (EQ phi_11 111))
Add formula: (AND (OR (EQ phi_11_0 1) (NOTEQ phi_11 000)) (OR (NOTEQ phi_11_0 1) (EQ phi_11 000)) (OR (EQ phi_11_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_11_0 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_11_1 1) (NOTEQ phi_11 001)) (OR (NOTEQ phi_11_1 1) (EQ phi_11 001)) (OR (EQ phi_11_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_11_1 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_11_2 1) (NOTEQ phi_11 010)) (OR (NOTEQ phi_11_2 1) (EQ phi_11 010)) (OR (EQ phi_11_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_11_2 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_11_3 1) (NOTEQ phi_11 011)) (OR (NOTEQ phi_11_3 1) (EQ phi_11 011)) (OR (EQ phi_11_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_11_3 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_11_4 1) (NOTEQ phi_11 100)) (OR (NOTEQ phi_11_4 1) (EQ phi_11 100)) (OR (EQ phi_11_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_11_4 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_11_5 1) (NOTEQ phi_11 101)) (OR (NOTEQ phi_11_5 1) (EQ phi_11 101)) (OR (EQ phi_11_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_11_5 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_11_6 1) (NOTEQ phi_11 110)) (OR (NOTEQ phi_11_6 1) (EQ phi_11 110)) (OR (EQ phi_11_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_11_6 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_11_7 1) (NOTEQ phi_11 111)) (OR (NOTEQ phi_11_7 1) (EQ phi_11 111)) (OR (EQ phi_11_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_11_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_11_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_11_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_11_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_11_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_11_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_11_7 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_0$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_0$1(1))
Possible dependencies: 3
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={L1.TagEqual[READ(L1:L1_1[PA:PA.value_L1_1[32]]),READ(L1:L1_1[PA:PA.value_L1_1[32]])]}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={L1.TagNotEqual[READ(L1:L1_1[PA:PA.value_L1_1[32]]),READ(L1:L1_1[PA:PA.value_L1_1[32]])]}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  Data generation failed. Reason: Exception: java.lang.NullPointerException: null
java.lang.NullPointerException
	at ru.ispras.microtesk.mmu.test.engine.memory.MemoryDataGenerator.getHazardCondition(MemoryDataGenerator.java:301)
	at ru.ispras.microtesk.mmu.test.engine.memory.MemoryDataGenerator.getHazardConditions(MemoryDataGenerator.java:364)
	at ru.ispras.microtesk.mmu.test.engine.memory.MemoryDataGenerator.generate(MemoryDataGenerator.java:143)
	at ru.ispras.testbase.TestBase.executeQueryInternal(TestBase.java:71)
	at ru.ispras.testbase.TestBase.executeQuery(TestBase.java:56)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:88)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

]
Warning: Default test data will be used.

-------------- Constructed Test Case 2 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	ori $16, $0, 0x47e8
	sll $16, $16, 16
	ori $16, $16, 0xa16
	sw $16, 0($18)
	addiu $18, $18, 0x4
	lui $11, 0x5b2d
	xori $11, $11, 0x4bb
	ori $12, $0, 0x631
	sll $12, $12, 16
	ori $12, $12, 0xc57b
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x140000]=[0x78F0B35F]
	#   WRITE MMU_PA[<unknown>]
	#   HIT   L1[0x140000]
	#   READ  L1[0x140000]
	ori $13, $0, 0x14
	sll $13, $13, 16
	ori $17, $0, 0x1658
	sll $17, $17, 16
	xori $17, $17, 0xb6c1
	sw $17, 0($19)
	addiu $19, $19, 0x4
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x140000]=[0x23D61900]
	#   WRITE MMU_PA[<unknown>]
	#   HIT   L1[0x140000]
	#   READ  L1[0x140000]
	ori $14, $0, 0x14
	sll $14, $14, 16
	la $18, branch_data_0
	xori $9, $0, 0x87fb
	sll $9, $9, 16
	ori $9, $9, 0x68f0
	ori $10, $0, 0xf976
	sll $10, $10, 16
	ori $10, $10, 0x531d
	la $19, branch_data_1
	
	Stimulus
start_0002:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [true]
	bgez $16, normal_0002
	nop
overflow_0002:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $9, $10
	j finish_0002
	nop
normal_0002:
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $11, $12
	lw $20, 0($13)
	lw $17, 0($19)
	addiu $19, $19, 0x4
	lw $21, 0($14)
finish_0002:
	nop
	# Execution trace: [false]
	bltz $17, start_0002
	nop

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a0198 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a01a0 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a01a8 (PA): ori $16, $0, 0x47e8 (0x341047E8)
0x00000000000a01ac (PA): sll $16, $16, 16 (0x00108400)
0x00000000000a01b0 (PA): ori $16, $16, 0xa16 (0x36100A16)
0x00000000000a01b4 (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a01b8 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a01bc (PA): lui $11, 0x5b2d (0x3C0B5B2D)
0x00000000000a01c0 (PA): xori $11, $11, 0x4bb (0x396B04BB)
0x00000000000a01c4 (PA): ori $12, $0, 0x631 (0x340C0631)
0x00000000000a01c8 (PA): sll $12, $12, 16 (0x000C6400)
0x00000000000a01cc (PA): ori $12, $12, 0xc57b (0x358CC57B)
0x00000000000a01d0 (PA): ori $13, $0, 0x14 (0x340D0014)
0x00000000000a01d4 (PA): sll $13, $13, 16 (0x000D6C00)
0x00000000000a01d8 (PA): ori $17, $0, 0x1658 (0x34111658)
0x00000000000a01dc (PA): sll $17, $17, 16 (0x00118C00)
0x00000000000a01e0 (PA): xori $17, $17, 0xb6c1 (0x3A31B6C1)
0x00000000000a01e4 (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a01e8 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a01ec (PA): ori $14, $0, 0x14 (0x340E0014)
0x00000000000a01f0 (PA): sll $14, $14, 16 (0x000E7400)
0x00000000000a01f4 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a01fc (PA): xori $9, $0, 0x87fb (0x380987FB)
0x00000000000a0200 (PA): sll $9, $9, 16 (0x00094C00)
0x00000000000a0204 (PA): ori $9, $9, 0x68f0 (0x352968F0)
0x00000000000a0208 (PA): ori $10, $0, 0xf976 (0x340AF976)
0x00000000000a020c (PA): sll $10, $10, 16 (0x000A5400)
0x00000000000a0210 (PA): ori $10, $10, 0x531d (0x354A531D)
0x00000000000a0214 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a021c (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a0220 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0224 (PA): nop (0x00000000)
0x00000000000a0228 (PA): bgez $16, normal_0002 (0x0601FFE7)
0x00000000000a022c (PA): nop (0x00000000)
0x00000000000a0230 (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a0234 (PA): j finish_0002 (0x08028077)
0x00000000000a0238 (PA): nop (0x00000000)
0x00000000000a023c (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a0240 (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a0244 (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a0248 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a024c (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a0250 (PA): nop (0x00000000)
0x00000000000a0254 (PA): bltz $17, start_0002 (0x0620FFD4)
0x00000000000a0258 (PA): nop (0x00000000)

--------- Running Execution from Test Case 2 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x0000000000000380

Execution cannot continue at the current stage.
Checking dependencies between READ(L1:L1_1[PA:PA.value_L1_1[32]]) and READ(M:M_1[PA:PA.value_M_1[32]])
Possible dependencies: 1
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.

-------------- Constructed Test Case 3 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	xori $16, $0, 0x882
	sll $16, $16, 16
	xori $16, $16, 0xc733
	sw $16, 0($18)
	addiu $18, $18, 0x4
	la $1, preparator_data_n19_0003
	lw $11, 0($1)
	ori $12, $0, 0x24ed
	sll $12, $12, 16
	ori $12, $12, 0x4e72
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x140000]=[0x18801606]
	#   WRITE MMU_PA[<unknown>]
	#   HIT   L1[0x140000]
	#   READ  L1[0x140000]
	xori $13, $0, 0x14
	sll $13, $13, 16
	xori $17, $0, 0x6f4f
	sll $17, $17, 16
	xori $17, $17, 0xdb3e
	sw $17, 0($19)
	addiu $19, $19, 0x4
	
	# M[0x160000]=[DATA=0x79E53FA3]
	ori $8, $0, 0x16
	sll $8, $8, 16
	ori $9, $0, 0x79e5
	sll $9, $9, 16
	ori $9, $9, 0x3fa3
	sw $9, 0($8)
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x160000]=[0x79E53FA3]
	#   WRITE MMU_PA[<unknown>]
	#   MISS  L1[0x160000]
	#   MISS  L2[0x160000]
	#   READ  M[0x160000]=[DATA=0x79E53FA3]
	#   WRITE L2[0x160000]
	#   WRITE L1[0x160000]
	ori $14, $0, 0x16
	sll $14, $14, 16
	la $18, branch_data_0
	ori $10, $0, 0x66e2
	sll $10, $10, 16
	ori $10, $10, 0x421c
	la $19, branch_data_1
	
	Stimulus
start_0003:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [true]
	bgez $16, normal_0003
	nop
overflow_0003:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $9, $10
	j finish_0003
	nop
normal_0003:
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $11, $12
	lw $20, 0($13)
	lw $17, 0($19)
	addiu $19, $19, 0x4
	lw $21, 0($14)
finish_0003:
	nop
	# Execution trace: [false]
	bltz $17, start_0003
	nop

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090414

0x0000000000090414 (PA): .org 0x10424
0x0000000000090424 (PA): .align 4
preparator_data_n19_0003:
0x0000000000090430 (PA): .word 0xE6D36120

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a025c (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a0264 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a026c (PA): xori $16, $0, 0x882 (0x38100882)
0x00000000000a0270 (PA): sll $16, $16, 16 (0x00108400)
0x00000000000a0274 (PA): xori $16, $16, 0xc733 (0x3A10C733)
0x00000000000a0278 (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a027c (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0280 (PA): la $1, preparator_data_n19_0003 (0x3C01000934210430)
0x00000000000a0288 (PA): lw $11, 0($1) (0x8C2B0000)
0x00000000000a028c (PA): ori $12, $0, 0x24ed (0x340C24ED)
0x00000000000a0290 (PA): sll $12, $12, 16 (0x000C6400)
0x00000000000a0294 (PA): ori $12, $12, 0x4e72 (0x358C4E72)
0x00000000000a0298 (PA): xori $13, $0, 0x14 (0x380D0014)
0x00000000000a029c (PA): sll $13, $13, 16 (0x000D6C00)
0x00000000000a02a0 (PA): xori $17, $0, 0x6f4f (0x38116F4F)
0x00000000000a02a4 (PA): sll $17, $17, 16 (0x00118C00)
0x00000000000a02a8 (PA): xori $17, $17, 0xdb3e (0x3A31DB3E)
0x00000000000a02ac (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a02b0 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a02b4 (PA): ori $8, $0, 0x16 (0x34080016)
0x00000000000a02b8 (PA): sll $8, $8, 16 (0x00084400)
0x00000000000a02bc (PA): ori $9, $0, 0x79e5 (0x340979E5)
0x00000000000a02c0 (PA): sll $9, $9, 16 (0x00094C00)
0x00000000000a02c4 (PA): ori $9, $9, 0x3fa3 (0x35293FA3)
0x00000000000a02c8 (PA): sw $9, 0($8) (0xAD090000)
0x00000000000a02cc (PA): ori $14, $0, 0x16 (0x340E0016)
0x00000000000a02d0 (PA): sll $14, $14, 16 (0x000E7400)
0x00000000000a02d4 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a02dc (PA): ori $10, $0, 0x66e2 (0x340A66E2)
0x00000000000a02e0 (PA): sll $10, $10, 16 (0x000A5400)
0x00000000000a02e4 (PA): ori $10, $10, 0x421c (0x354A421C)
0x00000000000a02e8 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a02f0 (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a02f4 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a02f8 (PA): nop (0x00000000)
0x00000000000a02fc (PA): bgez $16, normal_0003 (0x0601FFE3)
0x00000000000a0300 (PA): nop (0x00000000)
0x00000000000a0304 (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a0308 (PA): j finish_0003 (0x080280A8)
0x00000000000a030c (PA): nop (0x00000000)
0x00000000000a0310 (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a0314 (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a0318 (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a031c (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a0320 (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a0324 (PA): nop (0x00000000)
0x00000000000a0328 (PA): bltz $17, start_0003 (0x0620FFD0)
0x00000000000a032c (PA): nop (0x00000000)

--------- Running Execution from Test Case 3 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x0000000000000380

Execution cannot continue at the current stage.
Checking dependencies between READ(M:M_1[PA:PA.value_M_1[32]]) and READ(M:M_1[PA:PA.value_M_1[32]])
Enumerating dependencies between READ(M:M_1[PA:PA.value_M_1[32]]) and READ(M:M_1[PA:PA.value_M_1[32]])
Possible dependencies: hazard M.IndexNotEqual[READ(M:M_1[PA:PA.value_M_1[32]]),READ(M:M_1[PA:PA.value_M_1[32]])]
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$42$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$42$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$42$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$42$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$42$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$42$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(1) PA.value$0(1))
Add formula: (AND (EQ PA.value_M_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_M_1$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.cacheData$0(1) M.DATA_M_1$0(0)))
Handle equation: (EQ pmem.cacheData$0(1) M.DATA_M_1$0(0))
Add formula: (AND (EQ M.DATA$0(1) M.DATA_M_1$0(0)))
Handle equation: (EQ M.DATA$0(1) M.DATA_M_1$0(0))
Add formula: (OR (EQ phi_16 000) (EQ phi_16 001) (EQ phi_16 010) (EQ phi_16 011) (EQ phi_16 100) (EQ phi_16 101) (EQ phi_16 110) (EQ phi_16 111))
Add formula: (AND (OR (EQ phi_16_0 1) (NOTEQ phi_16 000)) (OR (NOTEQ phi_16_0 1) (EQ phi_16 000)) (OR (EQ phi_16_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_16_0 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_16_1 1) (NOTEQ phi_16 001)) (OR (NOTEQ phi_16_1 1) (EQ phi_16 001)) (OR (EQ phi_16_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_16_1 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_16_2 1) (NOTEQ phi_16 010)) (OR (NOTEQ phi_16_2 1) (EQ phi_16 010)) (OR (EQ phi_16_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_16_2 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_16_3 1) (NOTEQ phi_16 011)) (OR (NOTEQ phi_16_3 1) (EQ phi_16 011)) (OR (EQ phi_16_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_16_3 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_16_4 1) (NOTEQ phi_16 100)) (OR (NOTEQ phi_16_4 1) (EQ phi_16 100)) (OR (EQ phi_16_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_16_4 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_16_5 1) (NOTEQ phi_16 101)) (OR (NOTEQ phi_16_5 1) (EQ phi_16 101)) (OR (EQ phi_16_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_16_5 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_16_6 1) (NOTEQ phi_16 110)) (OR (NOTEQ phi_16_6 1) (EQ phi_16 110)) (OR (EQ phi_16_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_16_6 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_16_7 1) (NOTEQ phi_16 111)) (OR (NOTEQ phi_16_7 1) (EQ phi_16 111)) (OR (EQ phi_16_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_16_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_16_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_16_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_16_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_16_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_16_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_16_7 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_2$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_2$0(1))
Add formula: (AND (EQ pmem.l2Entry.V$0(1) 1))
Handle equation: (EQ pmem.l2Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l2Entry.TAG$0(1) (BVEXTRACT 31 17 PA.value$0(1))))
Handle equation: (EQ pmem.l2Entry.TAG$0(1) (BVEXTRACT 31 17 PA.value$0(1)))
Add formula: (AND (EQ pmem.l2Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l2Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (EQ pmem.l1Entry.V$0(1) 1))
Handle equation: (EQ pmem.l1Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1))))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (NOTEQ (BVEXTRACT 31 5 PA.value_M_1_M_1$0(0)) (BVEXTRACT 31 5 PA.value_M_1_M_0$1(0))))
Handle equation: (NOTEQ (BVEXTRACT 31 5 PA.value_M_1_M_1$0(0)) (BVEXTRACT 31 5 PA.value_M_1_M_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$43$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$43$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$43$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$43$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$43$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$43$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(1) PA.value$1(1))
Add formula: (AND (EQ PA.value_M_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_M_1$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.cacheData$1(1) M.DATA_M_1$1(0)))
Handle equation: (EQ pmem.cacheData$1(1) M.DATA_M_1$1(0))
Add formula: (AND (EQ M.DATA$1(1) M.DATA_M_1$1(0)))
Handle equation: (EQ M.DATA$1(1) M.DATA_M_1$1(0))
Add formula: (OR (EQ phi_17 000) (EQ phi_17 001) (EQ phi_17 010) (EQ phi_17 011) (EQ phi_17 100) (EQ phi_17 101) (EQ phi_17 110) (EQ phi_17 111))
Add formula: (AND (OR (EQ phi_17_0 1) (NOTEQ phi_17 000)) (OR (NOTEQ phi_17_0 1) (EQ phi_17 000)) (OR (EQ phi_17_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_17_0 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_17_1 1) (NOTEQ phi_17 001)) (OR (NOTEQ phi_17_1 1) (EQ phi_17 001)) (OR (EQ phi_17_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_17_1 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_17_2 1) (NOTEQ phi_17 010)) (OR (NOTEQ phi_17_2 1) (EQ phi_17 010)) (OR (EQ phi_17_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_17_2 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_17_3 1) (NOTEQ phi_17 011)) (OR (NOTEQ phi_17_3 1) (EQ phi_17 011)) (OR (EQ phi_17_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_17_3 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_17_4 1) (NOTEQ phi_17 100)) (OR (NOTEQ phi_17_4 1) (EQ phi_17 100)) (OR (EQ phi_17_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_17_4 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_17_5 1) (NOTEQ phi_17 101)) (OR (NOTEQ phi_17_5 1) (EQ phi_17 101)) (OR (EQ phi_17_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_17_5 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_17_6 1) (NOTEQ phi_17 110)) (OR (NOTEQ phi_17_6 1) (EQ phi_17 110)) (OR (EQ phi_17_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_17_6 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_17_7 1) (NOTEQ phi_17 111)) (OR (NOTEQ phi_17_7 1) (EQ phi_17 111)) (OR (EQ phi_17_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_17_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_17_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_17_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_17_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_17_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_17_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_17_7 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_2$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_2$1(1))
Add formula: (AND (EQ pmem.l2Entry.V$1(1) 1))
Handle equation: (EQ pmem.l2Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l2Entry.TAG$1(1) (BVEXTRACT 31 17 PA.value$1(1))))
Handle equation: (EQ pmem.l2Entry.TAG$1(1) (BVEXTRACT 31 17 PA.value$1(1)))
Add formula: (AND (EQ pmem.l2Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l2Entry.DATA$1(1) pmem.cacheData$1(1))
Add formula: (AND (EQ pmem.l1Entry.V$1(1) 1))
Handle equation: (EQ pmem.l1Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1))))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1))
Possible dependencies: 1
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={M.IndexNotEqual[READ(M:M_1[PA:PA.value_M_1[32]]),READ(M:M_1[PA:PA.value_M_1[32]])]}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={M.IndexNotEqual[READ(M:M_1[PA:PA.value_M_1[32]]),READ(M:M_1[PA:PA.value_M_1[32]])]}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.

-------------- Constructed Test Case 4 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	lui $16, 0x21
	ori $16, $16, 0xc8a0
	sw $16, 0($18)
	addiu $18, $18, 0x4
	ori $11, $0, 0x2510
	sll $11, $11, 16
	xori $11, $11, 0xac9e
	lui $12, 0x66a8
	ori $12, $12, 0xf9cf
	
	# M[0x140000]=[DATA=0x60CAF8BA]
	ori $8, $0, 0x14
	sll $8, $8, 16
	lui $9, 0x60ca
	ori $9, $9, 0xf8ba
	sw $9, 0($8)
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x140000]=[0x60CAF8BA]
	#   WRITE MMU_PA[<unknown>]
	#   MISS  L1[0x140000]
	#   MISS  L2[0x140000]
	#   READ  M[0x140000]=[DATA=0x60CAF8BA]
	#   WRITE L2[0x140000]
	#   WRITE L1[0x140000]
	xori $13, $0, 0x14
	sll $13, $13, 16
	la $1, preparator_data_n28_0004
	lw $17, 0($1)
	sw $17, 0($19)
	addiu $19, $19, 0x4
	
	# M[0x160000]=[DATA=0x9AC56AE9]
	ori $8, $0, 0x16
	sll $8, $8, 16
	lui $9, 0x9ac5
	ori $9, $9, 0x6ae9
	sw $9, 0($8)
	
	# Initializing Instruction LOAD[WORD]:
	# pmem[0x160000]=[0x9AC56AE9]
	#   WRITE MMU_PA[<unknown>]
	#   MISS  L1[0x160000]
	#   MISS  L2[0x160000]
	#   READ  M[0x160000]=[DATA=0x9AC56AE9]
	#   WRITE L2[0x160000]
	#   WRITE L1[0x160000]
	lui $14, 0x16
	la $18, branch_data_0
	xori $10, $0, 0x3237
	sll $10, $10, 16
	xori $10, $10, 0xd50b
	la $19, branch_data_1
	
	Stimulus
start_0004:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [true]
	bgez $16, normal_0004
	nop
overflow_0004:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $9, $10
	j finish_0004
	nop
normal_0004:
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $11, $12
	lw $20, 0($13)
	lw $17, 0($19)
	addiu $19, $19, 0x4
	lw $21, 0($14)
finish_0004:
	nop
	# Execution trace: [false]
	bltz $17, start_0004
	nop

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090434

0x0000000000090434 (PA): .org 0x10444
0x0000000000090444 (PA): .align 4
preparator_data_n28_0004:
0x0000000000090450 (PA): .word 0x68658CFE

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a0330 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a0338 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a0340 (PA): lui $16, 0x21 (0x3C100021)
0x00000000000a0344 (PA): ori $16, $16, 0xc8a0 (0x3610C8A0)
0x00000000000a0348 (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a034c (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0350 (PA): ori $11, $0, 0x2510 (0x340B2510)
0x00000000000a0354 (PA): sll $11, $11, 16 (0x000B5C00)
0x00000000000a0358 (PA): xori $11, $11, 0xac9e (0x396BAC9E)
0x00000000000a035c (PA): lui $12, 0x66a8 (0x3C0C66A8)
0x00000000000a0360 (PA): ori $12, $12, 0xf9cf (0x358CF9CF)
0x00000000000a0364 (PA): ori $8, $0, 0x14 (0x34080014)
0x00000000000a0368 (PA): sll $8, $8, 16 (0x00084400)
0x00000000000a036c (PA): lui $9, 0x60ca (0x3C0960CA)
0x00000000000a0370 (PA): ori $9, $9, 0xf8ba (0x3529F8BA)
0x00000000000a0374 (PA): sw $9, 0($8) (0xAD090000)
0x00000000000a0378 (PA): xori $13, $0, 0x14 (0x380D0014)
0x00000000000a037c (PA): sll $13, $13, 16 (0x000D6C00)
0x00000000000a0380 (PA): la $1, preparator_data_n28_0004 (0x3C01000934210450)
0x00000000000a0388 (PA): lw $17, 0($1) (0x8C310000)
0x00000000000a038c (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a0390 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a0394 (PA): ori $8, $0, 0x16 (0x34080016)
0x00000000000a0398 (PA): sll $8, $8, 16 (0x00084400)
0x00000000000a039c (PA): lui $9, 0x9ac5 (0x3C099AC5)
0x00000000000a03a0 (PA): ori $9, $9, 0x6ae9 (0x35296AE9)
0x00000000000a03a4 (PA): sw $9, 0($8) (0xAD090000)
0x00000000000a03a8 (PA): lui $14, 0x16 (0x3C0E0016)
0x00000000000a03ac (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a03b4 (PA): xori $10, $0, 0x3237 (0x380A3237)
0x00000000000a03b8 (PA): sll $10, $10, 16 (0x000A5400)
0x00000000000a03bc (PA): xori $10, $10, 0xd50b (0x394AD50B)
0x00000000000a03c0 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a03c8 (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a03cc (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a03d0 (PA): nop (0x00000000)
0x00000000000a03d4 (PA): bgez $16, normal_0004 (0x0601FFE2)
0x00000000000a03d8 (PA): nop (0x00000000)
0x00000000000a03dc (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a03e0 (PA): j finish_0004 (0x080280DD)
0x00000000000a03e4 (PA): nop (0x00000000)
0x00000000000a03e8 (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a03ec (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a03f0 (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a03f4 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a03f8 (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a03fc (PA): nop (0x00000000)
0x00000000000a0400 (PA): bltz $17, start_0004 (0x0620FFCF)
0x00000000000a0404 (PA): nop (0x00000000)

--------- Running Execution from Test Case 4 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x0000000000000380

Execution cannot continue at the current stage.
Checking dependencies between READ(L1:L1_1[PA:PA.value_L1_1[32]]) and READ(L1:L1_1[PA:PA.value_L1_1[32]])
Enumerating dependencies between READ(L1:L1_1[PA:PA.value_L1_1[32]]) and READ(L1:L1_1[PA:PA.value_L1_1[32]])
Possible dependencies: hazard L1.IndexNotEqual[READ(L1:L1_1[PA:PA.value_L1_1[32]]),READ(L1:L1_1[PA:PA.value_L1_1[32]])]
Possible dependencies: hazard L1.TagNotEqual[READ(L1:L1_1[PA:PA.value_L1_1[32]]),READ(L1:L1_1[PA:PA.value_L1_1[32]])]
Possible dependencies: hazard L1.TagEqual[READ(L1:L1_1[PA:PA.value_L1_1[32]]),READ(L1:L1_1[PA:PA.value_L1_1[32]])]
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$52$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$52$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$52$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$52$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$52$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$52$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L1.V_L1_1$0(1) 1) (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1))))
Handle equation: (EQ L1.V_L1_1$0(1) 1)
Handle equation: (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1)))
Add formula: (AND (EQ PA.value_L1_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0)) (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1))
Add formula: (AND (EQ L1.V$0(1) L1.V_L1_1$0(1)) (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0)))
Handle equation: (EQ L1.V$0(1) L1.V_L1_1$0(1))
Handle equation: (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1))
Add formula: (OR (EQ phi_20 000) (EQ phi_20 001) (EQ phi_20 010) (EQ phi_20 011) (EQ phi_20 100) (EQ phi_20 101) (EQ phi_20 110) (EQ phi_20 111))
Add formula: (AND (OR (EQ phi_20_0 1) (NOTEQ phi_20 000)) (OR (NOTEQ phi_20_0 1) (EQ phi_20 000)) (OR (EQ phi_20_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_20_0 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_20_1 1) (NOTEQ phi_20 001)) (OR (NOTEQ phi_20_1 1) (EQ phi_20 001)) (OR (EQ phi_20_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_20_1 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_20_2 1) (NOTEQ phi_20 010)) (OR (NOTEQ phi_20_2 1) (EQ phi_20 010)) (OR (EQ phi_20_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_20_2 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_20_3 1) (NOTEQ phi_20 011)) (OR (NOTEQ phi_20_3 1) (EQ phi_20 011)) (OR (EQ phi_20_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_20_3 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_20_4 1) (NOTEQ phi_20 100)) (OR (NOTEQ phi_20_4 1) (EQ phi_20 100)) (OR (EQ phi_20_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_20_4 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_20_5 1) (NOTEQ phi_20 101)) (OR (NOTEQ phi_20_5 1) (EQ phi_20 101)) (OR (EQ phi_20_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_20_5 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_20_6 1) (NOTEQ phi_20 110)) (OR (NOTEQ phi_20_6 1) (EQ phi_20 110)) (OR (EQ phi_20_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_20_6 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_20_7 1) (NOTEQ phi_20 111)) (OR (NOTEQ phi_20_7 1) (EQ phi_20 111)) (OR (EQ phi_20_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_20_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_20_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_20_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_20_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_20_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_20_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_20_7 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_0$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_0$0(1))
Add formula: (AND (NOTEQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0))))
Handle equation: (NOTEQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$53$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$53$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$53$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$53$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$53$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$53$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L1.V_L1_1$1(1) 1) (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1))))
Handle equation: (EQ L1.V_L1_1$1(1) 1)
Handle equation: (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1)))
Add formula: (AND (EQ PA.value_L1_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0)) (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1))
Add formula: (AND (EQ L1.V$1(1) L1.V_L1_1$1(1)) (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0)))
Handle equation: (EQ L1.V$1(1) L1.V_L1_1$1(1))
Handle equation: (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1))
Add formula: (OR (EQ phi_21 000) (EQ phi_21 001) (EQ phi_21 010) (EQ phi_21 011) (EQ phi_21 100) (EQ phi_21 101) (EQ phi_21 110) (EQ phi_21 111))
Add formula: (AND (OR (EQ phi_21_0 1) (NOTEQ phi_21 000)) (OR (NOTEQ phi_21_0 1) (EQ phi_21 000)) (OR (EQ phi_21_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_21_0 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_21_1 1) (NOTEQ phi_21 001)) (OR (NOTEQ phi_21_1 1) (EQ phi_21 001)) (OR (EQ phi_21_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_21_1 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_21_2 1) (NOTEQ phi_21 010)) (OR (NOTEQ phi_21_2 1) (EQ phi_21 010)) (OR (EQ phi_21_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_21_2 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_21_3 1) (NOTEQ phi_21 011)) (OR (NOTEQ phi_21_3 1) (EQ phi_21 011)) (OR (EQ phi_21_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_21_3 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_21_4 1) (NOTEQ phi_21 100)) (OR (NOTEQ phi_21_4 1) (EQ phi_21 100)) (OR (EQ phi_21_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_21_4 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_21_5 1) (NOTEQ phi_21 101)) (OR (NOTEQ phi_21_5 1) (EQ phi_21 101)) (OR (EQ phi_21_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_21_5 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_21_6 1) (NOTEQ phi_21 110)) (OR (NOTEQ phi_21_6 1) (EQ phi_21 110)) (OR (EQ phi_21_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_21_6 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_21_7 1) (NOTEQ phi_21 111)) (OR (NOTEQ phi_21_7 1) (EQ phi_21 111)) (OR (EQ phi_21_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_21_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_21_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_21_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_21_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_21_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_21_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_21_7 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_0$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_0$1(1))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$54$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$54$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$54$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$54$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$54$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$54$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L1.V_L1_1$0(1) 1) (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1))))
Handle equation: (EQ L1.V_L1_1$0(1) 1)
Handle equation: (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1)))
Add formula: (AND (EQ PA.value_L1_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0)) (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1))
Add formula: (AND (EQ L1.V$0(1) L1.V_L1_1$0(1)) (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0)))
Handle equation: (EQ L1.V$0(1) L1.V_L1_1$0(1))
Handle equation: (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1))
Add formula: (OR (EQ phi_22 000) (EQ phi_22 001) (EQ phi_22 010) (EQ phi_22 011) (EQ phi_22 100) (EQ phi_22 101) (EQ phi_22 110) (EQ phi_22 111))
Add formula: (AND (OR (EQ phi_22_0 1) (NOTEQ phi_22 000)) (OR (NOTEQ phi_22_0 1) (EQ phi_22 000)) (OR (EQ phi_22_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_22_0 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_22_1 1) (NOTEQ phi_22 001)) (OR (NOTEQ phi_22_1 1) (EQ phi_22 001)) (OR (EQ phi_22_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_22_1 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_22_2 1) (NOTEQ phi_22 010)) (OR (NOTEQ phi_22_2 1) (EQ phi_22 010)) (OR (EQ phi_22_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_22_2 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_22_3 1) (NOTEQ phi_22 011)) (OR (NOTEQ phi_22_3 1) (EQ phi_22 011)) (OR (EQ phi_22_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_22_3 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_22_4 1) (NOTEQ phi_22 100)) (OR (NOTEQ phi_22_4 1) (EQ phi_22 100)) (OR (EQ phi_22_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_22_4 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_22_5 1) (NOTEQ phi_22 101)) (OR (NOTEQ phi_22_5 1) (EQ phi_22 101)) (OR (EQ phi_22_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_22_5 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_22_6 1) (NOTEQ phi_22 110)) (OR (NOTEQ phi_22_6 1) (EQ phi_22 110)) (OR (EQ phi_22_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_22_6 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_22_7 1) (NOTEQ phi_22 111)) (OR (NOTEQ phi_22_7 1) (EQ phi_22 111)) (OR (EQ phi_22_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_22_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_22_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_22_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_22_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_22_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_22_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_22_7 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_0$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_0$0(1))
Add formula: (AND (EQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0))) (NOTEQ (BVEXTRACT 31 12 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 31 12 PA.value_L1_1_L1_0$1(0))))
Handle equation: (EQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0)))
Handle equation: (NOTEQ (BVEXTRACT 31 12 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 31 12 PA.value_L1_1_L1_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$55$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$55$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$55$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$55$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$55$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$55$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L1.V_L1_1$1(1) 1) (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1))))
Handle equation: (EQ L1.V_L1_1$1(1) 1)
Handle equation: (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1)))
Add formula: (AND (EQ PA.value_L1_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0)) (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1))
Add formula: (AND (EQ L1.V$1(1) L1.V_L1_1$1(1)) (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0)))
Handle equation: (EQ L1.V$1(1) L1.V_L1_1$1(1))
Handle equation: (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1))
Add formula: (OR (EQ phi_23 000) (EQ phi_23 001) (EQ phi_23 010) (EQ phi_23 011) (EQ phi_23 100) (EQ phi_23 101) (EQ phi_23 110) (EQ phi_23 111))
Add formula: (AND (OR (EQ phi_23_0 1) (NOTEQ phi_23 000)) (OR (NOTEQ phi_23_0 1) (EQ phi_23 000)) (OR (EQ phi_23_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_23_0 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_23_1 1) (NOTEQ phi_23 001)) (OR (NOTEQ phi_23_1 1) (EQ phi_23 001)) (OR (EQ phi_23_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_23_1 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_23_2 1) (NOTEQ phi_23 010)) (OR (NOTEQ phi_23_2 1) (EQ phi_23 010)) (OR (EQ phi_23_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_23_2 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_23_3 1) (NOTEQ phi_23 011)) (OR (NOTEQ phi_23_3 1) (EQ phi_23 011)) (OR (EQ phi_23_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_23_3 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_23_4 1) (NOTEQ phi_23 100)) (OR (NOTEQ phi_23_4 1) (EQ phi_23 100)) (OR (EQ phi_23_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_23_4 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_23_5 1) (NOTEQ phi_23 101)) (OR (NOTEQ phi_23_5 1) (EQ phi_23 101)) (OR (EQ phi_23_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_23_5 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_23_6 1) (NOTEQ phi_23 110)) (OR (NOTEQ phi_23_6 1) (EQ phi_23 110)) (OR (EQ phi_23_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_23_6 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_23_7 1) (NOTEQ phi_23 111)) (OR (NOTEQ phi_23_7 1) (EQ phi_23 111)) (OR (EQ phi_23_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_23_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_23_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_23_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_23_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_23_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_23_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_23_7 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_0$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_0$1(1))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$56$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$56$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$56$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$56$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$56$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$56$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L1.V_L1_1$0(1) 1) (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1))))
Handle equation: (EQ L1.V_L1_1$0(1) 1)
Handle equation: (EQ L1.TAG_L1_1$0(1) (BVEXTRACT 31 12 PA.value_L1_1$0(1)))
Add formula: (AND (EQ PA.value_L1_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0)) (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) L1.DATA_L1_1$0(0))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ pmem.l1Entry.V$0(1) L1.V_L1_1$0(1))
Add formula: (AND (EQ L1.V$0(1) L1.V_L1_1$0(1)) (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1)) (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0)))
Handle equation: (EQ L1.V$0(1) L1.V_L1_1$0(1))
Handle equation: (EQ L1.TAG$0(1) L1.TAG_L1_1$0(1))
Handle equation: (EQ L1.DATA$0(1) L1.DATA_L1_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l1Entry.DATA$0(1))
Add formula: (OR (EQ phi_24 000) (EQ phi_24 001) (EQ phi_24 010) (EQ phi_24 011) (EQ phi_24 100) (EQ phi_24 101) (EQ phi_24 110) (EQ phi_24 111))
Add formula: (AND (OR (EQ phi_24_0 1) (NOTEQ phi_24 000)) (OR (NOTEQ phi_24_0 1) (EQ phi_24 000)) (OR (EQ phi_24_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_24_0 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_24_1 1) (NOTEQ phi_24 001)) (OR (NOTEQ phi_24_1 1) (EQ phi_24 001)) (OR (EQ phi_24_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_24_1 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_24_2 1) (NOTEQ phi_24 010)) (OR (NOTEQ phi_24_2 1) (EQ phi_24 010)) (OR (EQ phi_24_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_24_2 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_24_3 1) (NOTEQ phi_24 011)) (OR (NOTEQ phi_24_3 1) (EQ phi_24 011)) (OR (EQ phi_24_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_24_3 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_24_4 1) (NOTEQ phi_24 100)) (OR (NOTEQ phi_24_4 1) (EQ phi_24 100)) (OR (EQ phi_24_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_24_4 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_24_5 1) (NOTEQ phi_24 101)) (OR (NOTEQ phi_24_5 1) (EQ phi_24 101)) (OR (EQ phi_24_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_24_5 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_24_6 1) (NOTEQ phi_24 110)) (OR (NOTEQ phi_24_6 1) (EQ phi_24 110)) (OR (EQ phi_24_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_24_6 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_24_7 1) (NOTEQ phi_24 111)) (OR (NOTEQ phi_24_7 1) (EQ phi_24 111)) (OR (EQ phi_24_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_24_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_24_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_24_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_24_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_24_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_24_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_24_7 0) (EQ pmem.TMP_0$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_0$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_0$0(1))
Add formula: (AND (EQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0))) (EQ (BVEXTRACT 31 12 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 31 12 PA.value_L1_1_L1_0$1(0))))
Handle equation: (EQ (BVEXTRACT 11 5 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 11 5 PA.value_L1_1_L1_0$1(0)))
Handle equation: (EQ (BVEXTRACT 31 12 PA.value_L1_1_L1_1$0(0)) (BVEXTRACT 31 12 PA.value_L1_1_L1_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$57$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$57$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$57$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$57$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$57$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$57$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L1.V_L1_1$1(1) 1) (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1))))
Handle equation: (EQ L1.V_L1_1$1(1) 1)
Handle equation: (EQ L1.TAG_L1_1$1(1) (BVEXTRACT 31 12 PA.value_L1_1$1(1)))
Add formula: (AND (EQ PA.value_L1_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0)) (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) L1.DATA_L1_1$1(0))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ pmem.l1Entry.V$1(1) L1.V_L1_1$1(1))
Add formula: (AND (EQ L1.V$1(1) L1.V_L1_1$1(1)) (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1)) (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0)))
Handle equation: (EQ L1.V$1(1) L1.V_L1_1$1(1))
Handle equation: (EQ L1.TAG$1(1) L1.TAG_L1_1$1(1))
Handle equation: (EQ L1.DATA$1(1) L1.DATA_L1_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l1Entry.DATA$1(1))
Add formula: (OR (EQ phi_25 000) (EQ phi_25 001) (EQ phi_25 010) (EQ phi_25 011) (EQ phi_25 100) (EQ phi_25 101) (EQ phi_25 110) (EQ phi_25 111))
Add formula: (AND (OR (EQ phi_25_0 1) (NOTEQ phi_25 000)) (OR (NOTEQ phi_25_0 1) (EQ phi_25 000)) (OR (EQ phi_25_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_25_0 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_25_1 1) (NOTEQ phi_25 001)) (OR (NOTEQ phi_25_1 1) (EQ phi_25 001)) (OR (EQ phi_25_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_25_1 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_25_2 1) (NOTEQ phi_25 010)) (OR (NOTEQ phi_25_2 1) (EQ phi_25 010)) (OR (EQ phi_25_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_25_2 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_25_3 1) (NOTEQ phi_25 011)) (OR (NOTEQ phi_25_3 1) (EQ phi_25 011)) (OR (EQ phi_25_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_25_3 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_25_4 1) (NOTEQ phi_25 100)) (OR (NOTEQ phi_25_4 1) (EQ phi_25 100)) (OR (EQ phi_25_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_25_4 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_25_5 1) (NOTEQ phi_25 101)) (OR (NOTEQ phi_25_5 1) (EQ phi_25 101)) (OR (EQ phi_25_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_25_5 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_25_6 1) (NOTEQ phi_25 110)) (OR (NOTEQ phi_25_6 1) (EQ phi_25 110)) (OR (EQ phi_25_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_25_6 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_25_7 1) (NOTEQ phi_25 111)) (OR (NOTEQ phi_25_7 1) (EQ phi_25 111)) (OR (EQ phi_25_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_25_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_25_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_25_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_25_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_25_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_25_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_25_7 0) (EQ pmem.TMP_0$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_0$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_0$1(1))
Possible dependencies: 3
Next branch structure (prolonged execution): [BASIC_BLOCK, IF_THEN: Target=6, Trace=[false], BlockCoverage=[0], SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, GOTO: Target=9, Trace=[true], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, IF_THEN: Target=0, Trace=[false], BlockCoverage=[8], SlotCoverage=null, DELAY_SLOT]
Branch structure: [BASIC_BLOCK, IF_THEN: Target=6, Trace=[false], BlockCoverage=[0], SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, GOTO: Target=9, Trace=[true], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, IF_THEN: Target=0, Trace=[false], BlockCoverage=[3], SlotCoverage=null, DELAY_SLOT]
Execution trace: [0, 1, 2, 3, 4, 5, 9, 10, 11]
Control code of length 2 for instruction 1 put to block 0
Control code of length 2 for instruction 10 put to block 3
Executed code: [], executed blocks: [0, 3, 9]
Nontaken code: [], nontaken blocks: [6]
Memory engine configuration: classifier=BUFFER_ACCESS, preparator=true, iterator=RANDOM, recursion-limit=1, count=5
MemoryEngine.solve: [instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null), instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)]
MemoryEngine.solve: globalConstraints=MemoryAccessConstraints [null, [], []]
MemoryEngine.solve: accessTypes=[LOAD[WORD], LOAD[WORD]]
MemoryEngine.solve: accessConstraints=[MemoryAccessConstraints [null, [], []], MemoryAccessConstraints [null, [], []]]
Classifying memory access paths: LOAD[WORD] 3 classes
Classifying memory access paths: LOAD[WORD] 3 classes
Checking dependencies between READ(L1:L1_1[PA:PA.value_L1_1[32]]) and READ(M:M_1[PA:PA.value_M_1[32]])
Possible dependencies: 1
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.

-------------- Constructed Test Case 5 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	lui $16, 0xaa29
	xori $16, $16, 0x3132
	sw $16, 0($18)
	addiu $18, $18, 0x4
	ori $17, $0, 0x2c5e
	sll $17, $17, 16
	xori $17, $17, 0x4363
	sw $17, 0($19)
	addiu $19, $19, 0x4
	ori $9, $0, 0xc1fb
	sll $9, $9, 16
	ori $9, $9, 0x52
	xori $10, $0, 0xd5a4
	sll $10, $10, 16
	ori $10, $10, 0xc527
	la $18, branch_data_0
	la $1, preparator_data_n35_0005
	lw $11, 0($1)
	lui $12, 0x70ea
	xori $12, $12, 0x98b5
	la $19, branch_data_1
	
	Stimulus
start_0005:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [false]
	bgez $16, normal_0005
	nop
overflow_0005:
	lw $17, 0($19)
	addiu $19, $19, 0x4
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $9, $10
	j finish_0005
	nop
normal_0005:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $11, $12
	lw $20, 0($13)
	lw $21, 0($14)
finish_0005:
	# Begin: Executed code (2)
	# End: Executed code (2)
	nop
	# Execution trace: [false]
	bltz $17, start_0005
	nop

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090454

0x0000000000090454 (PA): .org 0x10464
0x0000000000090464 (PA): .align 4
preparator_data_n35_0005:
0x0000000000090470 (PA): .word 0xF60F465E

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a0408 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a0410 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a0418 (PA): lui $16, 0xaa29 (0x3C10AA29)
0x00000000000a041c (PA): xori $16, $16, 0x3132 (0x3A103132)
0x00000000000a0420 (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a0424 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0428 (PA): ori $17, $0, 0x2c5e (0x34112C5E)
0x00000000000a042c (PA): sll $17, $17, 16 (0x00118C00)
0x00000000000a0430 (PA): xori $17, $17, 0x4363 (0x3A314363)
0x00000000000a0434 (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a0438 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a043c (PA): ori $9, $0, 0xc1fb (0x3409C1FB)
0x00000000000a0440 (PA): sll $9, $9, 16 (0x00094C00)
0x00000000000a0444 (PA): ori $9, $9, 0x52 (0x35290052)
0x00000000000a0448 (PA): xori $10, $0, 0xd5a4 (0x380AD5A4)
0x00000000000a044c (PA): sll $10, $10, 16 (0x000A5400)
0x00000000000a0450 (PA): ori $10, $10, 0xc527 (0x354AC527)
0x00000000000a0454 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a045c (PA): la $1, preparator_data_n35_0005 (0x3C01000934210470)
0x00000000000a0464 (PA): lw $11, 0($1) (0x8C2B0000)
0x00000000000a0468 (PA): lui $12, 0x70ea (0x3C0C70EA)
0x00000000000a046c (PA): xori $12, $12, 0x98b5 (0x398C98B5)
0x00000000000a0470 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a0478 (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a047c (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0480 (PA): nop (0x00000000)
0x00000000000a0484 (PA): bgez $16, normal_0005 (0x0601FFEE)
0x00000000000a0488 (PA): nop (0x00000000)
0x00000000000a048c (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a0490 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a0494 (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a0498 (PA): j finish_0005 (0x08028113)
0x00000000000a049c (PA): nop (0x00000000)
0x00000000000a04a0 (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a04a4 (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a04a8 (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a04ac (PA): nop (0x00000000)
0x00000000000a04b0 (PA): bltz $17, start_0005 (0x0620FFD9)
0x00000000000a04b4 (PA): nop (0x00000000)

--------- Running Execution from Test Case 5 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x0000000000000380

Execution cannot continue at the current stage.
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, HIT(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_1, READ(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_4, NORMAL: pmem.ASSIGN_5, NORMAL: ..., NORMAL: readData_0.STOP, NORMAL: pmem.ASSIGN_6, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.

-------------- Constructed Test Case 6 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	lui $16, 0xa233
	xori $16, $16, 0xe6c8
	sw $16, 0($18)
	addiu $18, $18, 0x4
	xori $17, $0, 0x6503
	sll $17, $17, 16
	ori $17, $17, 0x4149
	sw $17, 0($19)
	addiu $19, $19, 0x4
	la $1, preparator_data_n39_0006
	lw $9, 0($1)
	la $1, preparator_data_n40_0006
	lw $10, 0($1)
	la $18, branch_data_0
	la $1, preparator_data_n41_0006
	lw $11, 0($1)
	ori $12, $0, 0x1af8
	sll $12, $12, 16
	ori $12, $12, 0x66a7
	la $19, branch_data_1
	
	Stimulus
start_0006:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [false]
	bgez $16, normal_0006
	nop
overflow_0006:
	lw $17, 0($19)
	addiu $19, $19, 0x4
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $9, $10
	j finish_0006
	nop
normal_0006:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $11, $12
	lw $20, 0($13)
	lw $21, 0($14)
finish_0006:
	# Begin: Executed code (2)
	# End: Executed code (2)
	nop
	# Execution trace: [false]
	bltz $17, start_0006
	nop

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090474

0x0000000000090474 (PA): .org 0x10484
0x0000000000090484 (PA): .align 4
preparator_data_n39_0006:
0x0000000000090490 (PA): .word 0x86ABCDB5

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090494

0x0000000000090494 (PA): .org 0x104a4
0x00000000000904a4 (PA): .align 4
preparator_data_n40_0006:
0x00000000000904b0 (PA): .word 0x2DF9714F

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x00000000000904b4

0x00000000000904b4 (PA): .org 0x104c4
0x00000000000904c4 (PA): .align 4
preparator_data_n41_0006:
0x00000000000904d0 (PA): .word 0x32AC187B

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a04b8 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a04c0 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a04c8 (PA): lui $16, 0xa233 (0x3C10A233)
0x00000000000a04cc (PA): xori $16, $16, 0xe6c8 (0x3A10E6C8)
0x00000000000a04d0 (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a04d4 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a04d8 (PA): xori $17, $0, 0x6503 (0x38116503)
0x00000000000a04dc (PA): sll $17, $17, 16 (0x00118C00)
0x00000000000a04e0 (PA): ori $17, $17, 0x4149 (0x36314149)
0x00000000000a04e4 (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a04e8 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a04ec (PA): la $1, preparator_data_n39_0006 (0x3C01000934210490)
0x00000000000a04f4 (PA): lw $9, 0($1) (0x8C290000)
0x00000000000a04f8 (PA): la $1, preparator_data_n40_0006 (0x3C010009342104B0)
0x00000000000a0500 (PA): lw $10, 0($1) (0x8C2A0000)
0x00000000000a0504 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a050c (PA): la $1, preparator_data_n41_0006 (0x3C010009342104D0)
0x00000000000a0514 (PA): lw $11, 0($1) (0x8C2B0000)
0x00000000000a0518 (PA): ori $12, $0, 0x1af8 (0x340C1AF8)
0x00000000000a051c (PA): sll $12, $12, 16 (0x000C6400)
0x00000000000a0520 (PA): ori $12, $12, 0x66a7 (0x358C66A7)
0x00000000000a0524 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a052c (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a0530 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0534 (PA): nop (0x00000000)
0x00000000000a0538 (PA): bgez $16, normal_0006 (0x0601FFED)
0x00000000000a053c (PA): nop (0x00000000)
0x00000000000a0540 (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a0544 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a0548 (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a054c (PA): j finish_0006 (0x0802813F)
0x00000000000a0550 (PA): nop (0x00000000)
0x00000000000a0554 (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a0558 (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a055c (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a0560 (PA): nop (0x00000000)
0x00000000000a0564 (PA): bltz $17, start_0006 (0x0620FFD8)
0x00000000000a0568 (PA): nop (0x00000000)

--------- Running Execution from Test Case 6 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x0000000000000380

Execution cannot continue at the current stage.
Searching for a memory access path: [MMU_PA, L1, L2, L2, L1]
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$68(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$68(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 1 1 new$68(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 1) (EQ (BVEXTRACT 1 1 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 30 30 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$68(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value(0)) 1) (EQ (BVEXTRACT 2 2 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 3 3 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 29 29 VA.value(0)) 0) (EQ (BVEXTRACT 3 3 new$68(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value(0)) 1) (EQ (BVEXTRACT 3 3 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 4 4 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 28 28 VA.value(0)) 0) (EQ (BVEXTRACT 4 4 new$68(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value(0)) 1) (EQ (BVEXTRACT 4 4 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 5 5 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value(0)) 0) (EQ (BVEXTRACT 5 5 new$68(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value(0)) 1) (EQ (BVEXTRACT 5 5 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 6 6 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value(0)) 0) (EQ (BVEXTRACT 6 6 new$68(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value(0)) 1) (EQ (BVEXTRACT 6 6 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 7 7 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value(0)) 0) (EQ (BVEXTRACT 7 7 new$68(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value(0)) 1) (EQ (BVEXTRACT 7 7 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 8 8 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value(0)) 0) (EQ (BVEXTRACT 8 8 new$68(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value(0)) 1) (EQ (BVEXTRACT 8 8 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 9 9 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value(0)) 0) (EQ (BVEXTRACT 9 9 new$68(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value(0)) 1) (EQ (BVEXTRACT 9 9 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 10 10 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value(0)) 0) (EQ (BVEXTRACT 10 10 new$68(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value(0)) 1) (EQ (BVEXTRACT 10 10 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value(0)) 0) (EQ (BVEXTRACT 11 11 new$68(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value(0)) 1) (EQ (BVEXTRACT 11 11 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value(0)) 0) (EQ (BVEXTRACT 12 12 new$68(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value(0)) 1) (EQ (BVEXTRACT 12 12 new$68(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$68(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value(0)) 0) (EQ (BVEXTRACT 13 13 new$68(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value(0)) 1) (EQ (BVEXTRACT 13 13 new$68(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$68(0)) 0)
Add formula: (AND (EQ pmem.c(1) 3))
Handle equation: (EQ pmem.c(1) 3)
Add formula: (AND (EQ PA.value(1) VA.value(0)))
Handle equation: (EQ PA.value(1) VA.value(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1))
Add formula: (AND (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1))))
Handle equation: (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10)
Add formula: (AND (EQ PA.value_L1_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L1_1(1) PA.value(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c(1)) 11)
Add formula: (AND (EQ PA.value_L2_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L2_1(1) PA.value(1))
Add formula: (AND (EQ L2.V_L2_1(1) 1) (EQ L2.TAG_L2_1(1) (BVEXTRACT 31 17 PA.value_L2_1(1))))
Handle equation: (EQ L2.V_L2_1(1) 1)
Handle equation: (EQ L2.TAG_L2_1(1) (BVEXTRACT 31 17 PA.value_L2_1(1)))
Add formula: (AND (EQ PA.value_L2_1(2) PA.value(1)))
Handle equation: (EQ PA.value_L2_1(2) PA.value(1))
Add formula: (AND (EQ pmem.l2Entry.V(1) L2.V_L2_1(1)) (EQ pmem.l2Entry.DATA(1) L2.DATA_L2_1(0)) (EQ pmem.l2Entry.TAG(1) L2.TAG_L2_1(1)))
Handle equation: (EQ pmem.l2Entry.V(1) L2.V_L2_1(1))
Handle equation: (EQ pmem.l2Entry.DATA(1) L2.DATA_L2_1(0))
Handle equation: (EQ pmem.l2Entry.TAG(1) L2.TAG_L2_1(1))
Add formula: (AND (EQ L2.V(1) L2.V_L2_1(1)) (EQ L2.TAG(1) L2.TAG_L2_1(1)) (EQ L2.DATA(1) L2.DATA_L2_1(0)))
Handle equation: (EQ L2.V(1) L2.V_L2_1(1))
Handle equation: (EQ L2.TAG(1) L2.TAG_L2_1(1))
Handle equation: (EQ L2.DATA(1) L2.DATA_L2_1(0))
Add formula: (AND (EQ pmem.cacheData(1) pmem.l2Entry.DATA(1)))
Handle equation: (EQ pmem.cacheData(1) pmem.l2Entry.DATA(1))
Add formula: (OR (EQ phi_28 000) (EQ phi_28 001) (EQ phi_28 010) (EQ phi_28 011) (EQ phi_28 100) (EQ phi_28 101) (EQ phi_28 110) (EQ phi_28 111))
Add formula: (AND (OR (EQ phi_28_0 1) (NOTEQ phi_28 000)) (OR (NOTEQ phi_28_0 1) (EQ phi_28 000)) (OR (EQ phi_28_0 0) (EQ pmem.offset(1) 000)) (OR (EQ phi_28_0 0) (EQ pmem.TMP_1(1) (BVEXTRACT 31 0 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_28_1 1) (NOTEQ phi_28 001)) (OR (NOTEQ phi_28_1 1) (EQ phi_28 001)) (OR (EQ phi_28_1 0) (EQ pmem.offset(1) 001)) (OR (EQ phi_28_1 0) (EQ pmem.TMP_1(1) (BVEXTRACT 63 32 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_28_2 1) (NOTEQ phi_28 010)) (OR (NOTEQ phi_28_2 1) (EQ phi_28 010)) (OR (EQ phi_28_2 0) (EQ pmem.offset(1) 010)) (OR (EQ phi_28_2 0) (EQ pmem.TMP_1(1) (BVEXTRACT 95 64 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_28_3 1) (NOTEQ phi_28 011)) (OR (NOTEQ phi_28_3 1) (EQ phi_28 011)) (OR (EQ phi_28_3 0) (EQ pmem.offset(1) 011)) (OR (EQ phi_28_3 0) (EQ pmem.TMP_1(1) (BVEXTRACT 127 96 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_28_4 1) (NOTEQ phi_28 100)) (OR (NOTEQ phi_28_4 1) (EQ phi_28 100)) (OR (EQ phi_28_4 0) (EQ pmem.offset(1) 100)) (OR (EQ phi_28_4 0) (EQ pmem.TMP_1(1) (BVEXTRACT 159 128 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_28_5 1) (NOTEQ phi_28 101)) (OR (NOTEQ phi_28_5 1) (EQ phi_28 101)) (OR (EQ phi_28_5 0) (EQ pmem.offset(1) 101)) (OR (EQ phi_28_5 0) (EQ pmem.TMP_1(1) (BVEXTRACT 191 160 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_28_6 1) (NOTEQ phi_28 110)) (OR (NOTEQ phi_28_6 1) (EQ phi_28 110)) (OR (EQ phi_28_6 0) (EQ pmem.offset(1) 110)) (OR (EQ phi_28_6 0) (EQ pmem.TMP_1(1) (BVEXTRACT 223 192 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_28_7 1) (NOTEQ phi_28 111)) (OR (NOTEQ phi_28_7 1) (EQ phi_28 111)) (OR (EQ phi_28_7 0) (NOTEQ pmem.offset(1) 000)) (OR (EQ phi_28_7 0) (NOTEQ pmem.offset(1) 001)) (OR (EQ phi_28_7 0) (NOTEQ pmem.offset(1) 010)) (OR (EQ phi_28_7 0) (NOTEQ pmem.offset(1) 011)) (OR (EQ phi_28_7 0) (NOTEQ pmem.offset(1) 100)) (OR (EQ phi_28_7 0) (NOTEQ pmem.offset(1) 101)) (OR (EQ phi_28_7 0) (NOTEQ pmem.offset(1) 110)) (OR (EQ phi_28_7 0) (EQ pmem.TMP_1(1) (BVEXTRACT 255 224 pmem.cacheData(1)))))
Add formula: (AND (EQ pmem.data(1) pmem.TMP_1(1)))
Handle equation: (EQ pmem.data(1) pmem.TMP_1(1))
Add formula: (AND (EQ pmem.l1Entry.V(1) 1))
Handle equation: (EQ pmem.l1Entry.V(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG(1) (BVEXTRACT 31 12 PA.value(1))))
Handle equation: (EQ pmem.l1Entry.TAG(1) (BVEXTRACT 31 12 PA.value(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA(1) pmem.cacheData(1)))
Handle equation: (EQ pmem.l1Entry.DATA(1) pmem.cacheData(1))
Checking feasibility of the memory access: MemoryAccessConstraints [null, [], []]
Solving path constraints
Add formula: (EQ (BVEXTRACT 1 0 VA.value(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$69(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$69(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 1 1 new$69(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 1) (EQ (BVEXTRACT 1 1 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value(0)) 0) (EQ (BVEXTRACT 30 30 VA.value(0)) 0) (EQ (BVEXTRACT 2 2 new$69(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value(0)) 1) (EQ (BVEXTRACT 2 2 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 3 3 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value(0)) 00) (EQ (BVEXTRACT 29 29 VA.value(0)) 0) (EQ (BVEXTRACT 3 3 new$69(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value(0)) 1) (EQ (BVEXTRACT 3 3 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 4 4 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value(0)) 000) (EQ (BVEXTRACT 28 28 VA.value(0)) 0) (EQ (BVEXTRACT 4 4 new$69(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value(0)) 1) (EQ (BVEXTRACT 4 4 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 5 5 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value(0)) 0) (EQ (BVEXTRACT 5 5 new$69(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value(0)) 1) (EQ (BVEXTRACT 5 5 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 6 6 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value(0)) 0) (EQ (BVEXTRACT 6 6 new$69(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value(0)) 1) (EQ (BVEXTRACT 6 6 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 7 7 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value(0)) 0) (EQ (BVEXTRACT 7 7 new$69(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value(0)) 1) (EQ (BVEXTRACT 7 7 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 8 8 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value(0)) 0) (EQ (BVEXTRACT 8 8 new$69(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value(0)) 1) (EQ (BVEXTRACT 8 8 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 9 9 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value(0)) 0) (EQ (BVEXTRACT 9 9 new$69(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value(0)) 1) (EQ (BVEXTRACT 9 9 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 10 10 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value(0)) 0) (EQ (BVEXTRACT 10 10 new$69(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value(0)) 1) (EQ (BVEXTRACT 10 10 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value(0)) 0) (EQ (BVEXTRACT 11 11 new$69(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value(0)) 1) (EQ (BVEXTRACT 11 11 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value(0)) 0) (EQ (BVEXTRACT 12 12 new$69(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value(0)) 1) (EQ (BVEXTRACT 12 12 new$69(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$69(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value(0)) 0) (EQ (BVEXTRACT 13 13 new$69(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value(0)) 1) (EQ (BVEXTRACT 13 13 new$69(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$69(0)) 0)
Add formula: (AND (EQ pmem.c(1) 3))
Handle equation: (EQ pmem.c(1) 3)
Add formula: (AND (EQ PA.value(1) VA.value(0)))
Handle equation: (EQ PA.value(1) VA.value(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0(1) PA.value(1))
Add formula: (AND (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1))))
Handle equation: (EQ pmem.offset(1) (BVEXTRACT 4 2 PA.value(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c(1)) 10)
Add formula: (AND (EQ PA.value_L1_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L1_1(1) PA.value(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c(1)) 11)
Add formula: (AND (EQ PA.value_L2_1(1) PA.value(1)))
Handle equation: (EQ PA.value_L2_1(1) PA.value(1))
Add formula: (AND (EQ L2.V_L2_1(1) 1) (EQ L2.TAG_L2_1(1) (BVEXTRACT 31 17 PA.value_L2_1(1))))
Handle equation: (EQ L2.V_L2_1(1) 1)
Handle equation: (EQ L2.TAG_L2_1(1) (BVEXTRACT 31 17 PA.value_L2_1(1)))
Add formula: (AND (EQ PA.value_L2_1(2) PA.value(1)))
Handle equation: (EQ PA.value_L2_1(2) PA.value(1))
Add formula: (AND (EQ pmem.l2Entry.V(1) L2.V_L2_1(1)) (EQ pmem.l2Entry.DATA(1) L2.DATA_L2_1(0)) (EQ pmem.l2Entry.TAG(1) L2.TAG_L2_1(1)))
Handle equation: (EQ pmem.l2Entry.V(1) L2.V_L2_1(1))
Handle equation: (EQ pmem.l2Entry.DATA(1) L2.DATA_L2_1(0))
Handle equation: (EQ pmem.l2Entry.TAG(1) L2.TAG_L2_1(1))
Add formula: (AND (EQ L2.V(1) L2.V_L2_1(1)) (EQ L2.TAG(1) L2.TAG_L2_1(1)) (EQ L2.DATA(1) L2.DATA_L2_1(0)))
Handle equation: (EQ L2.V(1) L2.V_L2_1(1))
Handle equation: (EQ L2.TAG(1) L2.TAG_L2_1(1))
Handle equation: (EQ L2.DATA(1) L2.DATA_L2_1(0))
Add formula: (AND (EQ pmem.cacheData(1) pmem.l2Entry.DATA(1)))
Handle equation: (EQ pmem.cacheData(1) pmem.l2Entry.DATA(1))
Add formula: (OR (EQ phi_29 000) (EQ phi_29 001) (EQ phi_29 010) (EQ phi_29 011) (EQ phi_29 100) (EQ phi_29 101) (EQ phi_29 110) (EQ phi_29 111))
Add formula: (AND (OR (EQ phi_29_0 1) (NOTEQ phi_29 000)) (OR (NOTEQ phi_29_0 1) (EQ phi_29 000)) (OR (EQ phi_29_0 0) (EQ pmem.offset(1) 000)) (OR (EQ phi_29_0 0) (EQ pmem.TMP_1(1) (BVEXTRACT 31 0 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_29_1 1) (NOTEQ phi_29 001)) (OR (NOTEQ phi_29_1 1) (EQ phi_29 001)) (OR (EQ phi_29_1 0) (EQ pmem.offset(1) 001)) (OR (EQ phi_29_1 0) (EQ pmem.TMP_1(1) (BVEXTRACT 63 32 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_29_2 1) (NOTEQ phi_29 010)) (OR (NOTEQ phi_29_2 1) (EQ phi_29 010)) (OR (EQ phi_29_2 0) (EQ pmem.offset(1) 010)) (OR (EQ phi_29_2 0) (EQ pmem.TMP_1(1) (BVEXTRACT 95 64 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_29_3 1) (NOTEQ phi_29 011)) (OR (NOTEQ phi_29_3 1) (EQ phi_29 011)) (OR (EQ phi_29_3 0) (EQ pmem.offset(1) 011)) (OR (EQ phi_29_3 0) (EQ pmem.TMP_1(1) (BVEXTRACT 127 96 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_29_4 1) (NOTEQ phi_29 100)) (OR (NOTEQ phi_29_4 1) (EQ phi_29 100)) (OR (EQ phi_29_4 0) (EQ pmem.offset(1) 100)) (OR (EQ phi_29_4 0) (EQ pmem.TMP_1(1) (BVEXTRACT 159 128 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_29_5 1) (NOTEQ phi_29 101)) (OR (NOTEQ phi_29_5 1) (EQ phi_29 101)) (OR (EQ phi_29_5 0) (EQ pmem.offset(1) 101)) (OR (EQ phi_29_5 0) (EQ pmem.TMP_1(1) (BVEXTRACT 191 160 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_29_6 1) (NOTEQ phi_29 110)) (OR (NOTEQ phi_29_6 1) (EQ phi_29 110)) (OR (EQ phi_29_6 0) (EQ pmem.offset(1) 110)) (OR (EQ phi_29_6 0) (EQ pmem.TMP_1(1) (BVEXTRACT 223 192 pmem.cacheData(1)))))
Add formula: (AND (OR (EQ phi_29_7 1) (NOTEQ phi_29 111)) (OR (NOTEQ phi_29_7 1) (EQ phi_29 111)) (OR (EQ phi_29_7 0) (NOTEQ pmem.offset(1) 000)) (OR (EQ phi_29_7 0) (NOTEQ pmem.offset(1) 001)) (OR (EQ phi_29_7 0) (NOTEQ pmem.offset(1) 010)) (OR (EQ phi_29_7 0) (NOTEQ pmem.offset(1) 011)) (OR (EQ phi_29_7 0) (NOTEQ pmem.offset(1) 100)) (OR (EQ phi_29_7 0) (NOTEQ pmem.offset(1) 101)) (OR (EQ phi_29_7 0) (NOTEQ pmem.offset(1) 110)) (OR (EQ phi_29_7 0) (EQ pmem.TMP_1(1) (BVEXTRACT 255 224 pmem.cacheData(1)))))
Add formula: (AND (EQ pmem.data(1) pmem.TMP_1(1)))
Handle equation: (EQ pmem.data(1) pmem.TMP_1(1))
Add formula: (AND (EQ pmem.l1Entry.V(1) 1))
Handle equation: (EQ pmem.l1Entry.V(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG(1) (BVEXTRACT 31 12 PA.value(1))))
Handle equation: (EQ pmem.l1Entry.TAG(1) (BVEXTRACT 31 12 PA.value(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA(1) pmem.cacheData(1)))
Handle equation: (EQ pmem.l1Entry.DATA(1) pmem.cacheData(1))
Add formula: (EQ pmem.c pmem.c(1))
Handle equation: (EQ pmem.c pmem.c(1))
Add formula: (EQ PA.value PA.value(1))
Handle equation: (EQ PA.value PA.value(1))
Add formula: (EQ VA.value VA.value(0))
Handle equation: (EQ VA.value VA.value(0))
Add formula: (EQ MMU_PA.value_MMU_PA_0 MMU_PA.value_MMU_PA_0(1))
Handle equation: (EQ MMU_PA.value_MMU_PA_0 MMU_PA.value_MMU_PA_0(1))
Add formula: (EQ pmem.offset pmem.offset(1))
Handle equation: (EQ pmem.offset pmem.offset(1))
Add formula: (EQ PA.value_L1_1 PA.value_L1_1(1))
Handle equation: (EQ PA.value_L1_1 PA.value_L1_1(1))
Add formula: (EQ PA.value_L2_1 PA.value_L2_1(2))
Handle equation: (EQ PA.value_L2_1 PA.value_L2_1(2))
Add formula: (EQ L2.V_L2_1 L2.V_L2_1(1))
Handle equation: (EQ L2.V_L2_1 L2.V_L2_1(1))
Add formula: (EQ L2.TAG_L2_1 L2.TAG_L2_1(1))
Handle equation: (EQ L2.TAG_L2_1 L2.TAG_L2_1(1))
Add formula: (EQ pmem.l2Entry.V pmem.l2Entry.V(1))
Handle equation: (EQ pmem.l2Entry.V pmem.l2Entry.V(1))
Add formula: (EQ pmem.l2Entry.DATA pmem.l2Entry.DATA(1))
Handle equation: (EQ pmem.l2Entry.DATA pmem.l2Entry.DATA(1))
Add formula: (EQ L2.DATA_L2_1 L2.DATA_L2_1(0))
Handle equation: (EQ L2.DATA_L2_1 L2.DATA_L2_1(0))
Add formula: (EQ pmem.l2Entry.TAG pmem.l2Entry.TAG(1))
Handle equation: (EQ pmem.l2Entry.TAG pmem.l2Entry.TAG(1))
Add formula: (EQ L2.V L2.V(1))
Handle equation: (EQ L2.V L2.V(1))
Add formula: (EQ L2.TAG L2.TAG(1))
Handle equation: (EQ L2.TAG L2.TAG(1))
Add formula: (EQ L2.DATA L2.DATA(1))
Handle equation: (EQ L2.DATA L2.DATA(1))
Add formula: (EQ pmem.cacheData pmem.cacheData(1))
Handle equation: (EQ pmem.cacheData pmem.cacheData(1))
Add formula: (EQ pmem.data pmem.data(1))
Handle equation: (EQ pmem.data pmem.data(1))
Add formula: (EQ pmem.TMP_1 pmem.TMP_1(1))
Handle equation: (EQ pmem.TMP_1 pmem.TMP_1(1))
Add formula: (EQ pmem.l1Entry.V pmem.l1Entry.V(1))
Handle equation: (EQ pmem.l1Entry.V pmem.l1Entry.V(1))
Add formula: (EQ pmem.l1Entry.TAG pmem.l1Entry.TAG(1))
Handle equation: (EQ pmem.l1Entry.TAG pmem.l1Entry.TAG(1))
Add formula: (EQ pmem.l1Entry.DATA pmem.l1Entry.DATA(1))
Handle equation: (EQ pmem.l1Entry.DATA pmem.l1Entry.DATA(1))
Solving result: {}
Memory access path of length 23 for trajectory [MMU_PA, L1, L2, L2, L1]
Success
Searching for a memory access path: [MMU_PA, L1, L2, L2, L1]
No feasible memory access path has been found
Checking dependencies between READ(L2:L2_1[PA:PA.value_L2_1[32]]) and READ(L2:L2_1[PA:PA.value_L2_1[32]])
Enumerating dependencies between READ(L2:L2_1[PA:PA.value_L2_1[32]]) and READ(L2:L2_1[PA:PA.value_L2_1[32]])
Possible dependencies: hazard L2.IndexNotEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]
Possible dependencies: hazard L2.TagNotEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]
Possible dependencies: hazard L2.TagEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$70$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$70$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$70$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$70$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$70$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$70$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L2.V_L2_1$0(1) 1) (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1))))
Handle equation: (EQ L2.V_L2_1$0(1) 1)
Handle equation: (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1)))
Add formula: (AND (EQ PA.value_L2_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1)) (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0)) (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1)))
Handle equation: (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0))
Handle equation: (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1))
Add formula: (AND (EQ L2.V$0(1) L2.V_L2_1$0(1)) (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1)) (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0)))
Handle equation: (EQ L2.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1))
Handle equation: (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1))
Add formula: (OR (EQ phi_30 000) (EQ phi_30 001) (EQ phi_30 010) (EQ phi_30 011) (EQ phi_30 100) (EQ phi_30 101) (EQ phi_30 110) (EQ phi_30 111))
Add formula: (AND (OR (EQ phi_30_0 1) (NOTEQ phi_30 000)) (OR (NOTEQ phi_30_0 1) (EQ phi_30 000)) (OR (EQ phi_30_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_30_0 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_30_1 1) (NOTEQ phi_30 001)) (OR (NOTEQ phi_30_1 1) (EQ phi_30 001)) (OR (EQ phi_30_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_30_1 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_30_2 1) (NOTEQ phi_30 010)) (OR (NOTEQ phi_30_2 1) (EQ phi_30 010)) (OR (EQ phi_30_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_30_2 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_30_3 1) (NOTEQ phi_30 011)) (OR (NOTEQ phi_30_3 1) (EQ phi_30 011)) (OR (EQ phi_30_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_30_3 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_30_4 1) (NOTEQ phi_30 100)) (OR (NOTEQ phi_30_4 1) (EQ phi_30 100)) (OR (EQ phi_30_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_30_4 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_30_5 1) (NOTEQ phi_30 101)) (OR (NOTEQ phi_30_5 1) (EQ phi_30 101)) (OR (EQ phi_30_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_30_5 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_30_6 1) (NOTEQ phi_30 110)) (OR (NOTEQ phi_30_6 1) (EQ phi_30 110)) (OR (EQ phi_30_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_30_6 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_30_7 1) (NOTEQ phi_30 111)) (OR (NOTEQ phi_30_7 1) (EQ phi_30 111)) (OR (EQ phi_30_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_30_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_30_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_30_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_30_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_30_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_30_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_30_7 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_1$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_1$0(1))
Add formula: (AND (EQ pmem.l1Entry.V$0(1) 1))
Handle equation: (EQ pmem.l1Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1))))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (NOTEQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0))))
Handle equation: (NOTEQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$71$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$71$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$71$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$71$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$71$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$71$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L2.V_L2_1$1(1) 1) (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1))))
Handle equation: (EQ L2.V_L2_1$1(1) 1)
Handle equation: (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1)))
Add formula: (AND (EQ PA.value_L2_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1)) (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0)) (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1)))
Handle equation: (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0))
Handle equation: (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1))
Add formula: (AND (EQ L2.V$1(1) L2.V_L2_1$1(1)) (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1)) (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0)))
Handle equation: (EQ L2.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1))
Handle equation: (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1))
Add formula: (OR (EQ phi_31 000) (EQ phi_31 001) (EQ phi_31 010) (EQ phi_31 011) (EQ phi_31 100) (EQ phi_31 101) (EQ phi_31 110) (EQ phi_31 111))
Add formula: (AND (OR (EQ phi_31_0 1) (NOTEQ phi_31 000)) (OR (NOTEQ phi_31_0 1) (EQ phi_31 000)) (OR (EQ phi_31_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_31_0 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_31_1 1) (NOTEQ phi_31 001)) (OR (NOTEQ phi_31_1 1) (EQ phi_31 001)) (OR (EQ phi_31_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_31_1 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_31_2 1) (NOTEQ phi_31 010)) (OR (NOTEQ phi_31_2 1) (EQ phi_31 010)) (OR (EQ phi_31_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_31_2 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_31_3 1) (NOTEQ phi_31 011)) (OR (NOTEQ phi_31_3 1) (EQ phi_31 011)) (OR (EQ phi_31_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_31_3 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_31_4 1) (NOTEQ phi_31 100)) (OR (NOTEQ phi_31_4 1) (EQ phi_31 100)) (OR (EQ phi_31_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_31_4 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_31_5 1) (NOTEQ phi_31 101)) (OR (NOTEQ phi_31_5 1) (EQ phi_31 101)) (OR (EQ phi_31_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_31_5 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_31_6 1) (NOTEQ phi_31 110)) (OR (NOTEQ phi_31_6 1) (EQ phi_31 110)) (OR (EQ phi_31_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_31_6 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_31_7 1) (NOTEQ phi_31 111)) (OR (NOTEQ phi_31_7 1) (EQ phi_31 111)) (OR (EQ phi_31_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_31_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_31_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_31_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_31_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_31_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_31_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_31_7 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_1$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_1$1(1))
Add formula: (AND (EQ pmem.l1Entry.V$1(1) 1))
Handle equation: (EQ pmem.l1Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1))))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$72$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$72$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$72$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$72$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$72$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$72$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L2.V_L2_1$0(1) 1) (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1))))
Handle equation: (EQ L2.V_L2_1$0(1) 1)
Handle equation: (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1)))
Add formula: (AND (EQ PA.value_L2_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1)) (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0)) (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1)))
Handle equation: (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0))
Handle equation: (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1))
Add formula: (AND (EQ L2.V$0(1) L2.V_L2_1$0(1)) (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1)) (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0)))
Handle equation: (EQ L2.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1))
Handle equation: (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1))
Add formula: (OR (EQ phi_32 000) (EQ phi_32 001) (EQ phi_32 010) (EQ phi_32 011) (EQ phi_32 100) (EQ phi_32 101) (EQ phi_32 110) (EQ phi_32 111))
Add formula: (AND (OR (EQ phi_32_0 1) (NOTEQ phi_32 000)) (OR (NOTEQ phi_32_0 1) (EQ phi_32 000)) (OR (EQ phi_32_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_32_0 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_32_1 1) (NOTEQ phi_32 001)) (OR (NOTEQ phi_32_1 1) (EQ phi_32 001)) (OR (EQ phi_32_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_32_1 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_32_2 1) (NOTEQ phi_32 010)) (OR (NOTEQ phi_32_2 1) (EQ phi_32 010)) (OR (EQ phi_32_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_32_2 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_32_3 1) (NOTEQ phi_32 011)) (OR (NOTEQ phi_32_3 1) (EQ phi_32 011)) (OR (EQ phi_32_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_32_3 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_32_4 1) (NOTEQ phi_32 100)) (OR (NOTEQ phi_32_4 1) (EQ phi_32 100)) (OR (EQ phi_32_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_32_4 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_32_5 1) (NOTEQ phi_32 101)) (OR (NOTEQ phi_32_5 1) (EQ phi_32 101)) (OR (EQ phi_32_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_32_5 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_32_6 1) (NOTEQ phi_32 110)) (OR (NOTEQ phi_32_6 1) (EQ phi_32 110)) (OR (EQ phi_32_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_32_6 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_32_7 1) (NOTEQ phi_32 111)) (OR (NOTEQ phi_32_7 1) (EQ phi_32 111)) (OR (EQ phi_32_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_32_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_32_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_32_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_32_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_32_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_32_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_32_7 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_1$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_1$0(1))
Add formula: (AND (EQ pmem.l1Entry.V$0(1) 1))
Handle equation: (EQ pmem.l1Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1))))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (EQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0))) (NOTEQ (BVEXTRACT 31 17 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 31 17 PA.value_L2_1_L2_0$1(0))))
Handle equation: (EQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0)))
Handle equation: (NOTEQ (BVEXTRACT 31 17 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 31 17 PA.value_L2_1_L2_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$73$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$73$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$73$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$73$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$73$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$73$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L2.V_L2_1$1(1) 1) (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1))))
Handle equation: (EQ L2.V_L2_1$1(1) 1)
Handle equation: (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1)))
Add formula: (AND (EQ PA.value_L2_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1)) (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0)) (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1)))
Handle equation: (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0))
Handle equation: (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1))
Add formula: (AND (EQ L2.V$1(1) L2.V_L2_1$1(1)) (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1)) (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0)))
Handle equation: (EQ L2.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1))
Handle equation: (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1))
Add formula: (OR (EQ phi_33 000) (EQ phi_33 001) (EQ phi_33 010) (EQ phi_33 011) (EQ phi_33 100) (EQ phi_33 101) (EQ phi_33 110) (EQ phi_33 111))
Add formula: (AND (OR (EQ phi_33_0 1) (NOTEQ phi_33 000)) (OR (NOTEQ phi_33_0 1) (EQ phi_33 000)) (OR (EQ phi_33_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_33_0 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_33_1 1) (NOTEQ phi_33 001)) (OR (NOTEQ phi_33_1 1) (EQ phi_33 001)) (OR (EQ phi_33_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_33_1 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_33_2 1) (NOTEQ phi_33 010)) (OR (NOTEQ phi_33_2 1) (EQ phi_33 010)) (OR (EQ phi_33_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_33_2 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_33_3 1) (NOTEQ phi_33 011)) (OR (NOTEQ phi_33_3 1) (EQ phi_33 011)) (OR (EQ phi_33_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_33_3 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_33_4 1) (NOTEQ phi_33 100)) (OR (NOTEQ phi_33_4 1) (EQ phi_33 100)) (OR (EQ phi_33_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_33_4 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_33_5 1) (NOTEQ phi_33 101)) (OR (NOTEQ phi_33_5 1) (EQ phi_33 101)) (OR (EQ phi_33_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_33_5 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_33_6 1) (NOTEQ phi_33 110)) (OR (NOTEQ phi_33_6 1) (EQ phi_33 110)) (OR (EQ phi_33_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_33_6 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_33_7 1) (NOTEQ phi_33 111)) (OR (NOTEQ phi_33_7 1) (EQ phi_33 111)) (OR (EQ phi_33_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_33_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_33_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_33_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_33_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_33_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_33_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_33_7 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_1$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_1$1(1))
Add formula: (AND (EQ pmem.l1Entry.V$1(1) 1))
Handle equation: (EQ pmem.l1Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1))))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$74$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$74$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$74$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$74$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$74$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$74$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L2.V_L2_1$0(1) 1) (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1))))
Handle equation: (EQ L2.V_L2_1$0(1) 1)
Handle equation: (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1)))
Add formula: (AND (EQ PA.value_L2_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1)) (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0)) (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1)))
Handle equation: (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0))
Handle equation: (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1))
Add formula: (AND (EQ L2.V$0(1) L2.V_L2_1$0(1)) (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1)) (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0)))
Handle equation: (EQ L2.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1))
Handle equation: (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1))
Add formula: (OR (EQ phi_34 000) (EQ phi_34 001) (EQ phi_34 010) (EQ phi_34 011) (EQ phi_34 100) (EQ phi_34 101) (EQ phi_34 110) (EQ phi_34 111))
Add formula: (AND (OR (EQ phi_34_0 1) (NOTEQ phi_34 000)) (OR (NOTEQ phi_34_0 1) (EQ phi_34 000)) (OR (EQ phi_34_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_34_0 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_34_1 1) (NOTEQ phi_34 001)) (OR (NOTEQ phi_34_1 1) (EQ phi_34 001)) (OR (EQ phi_34_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_34_1 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_34_2 1) (NOTEQ phi_34 010)) (OR (NOTEQ phi_34_2 1) (EQ phi_34 010)) (OR (EQ phi_34_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_34_2 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_34_3 1) (NOTEQ phi_34 011)) (OR (NOTEQ phi_34_3 1) (EQ phi_34 011)) (OR (EQ phi_34_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_34_3 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_34_4 1) (NOTEQ phi_34 100)) (OR (NOTEQ phi_34_4 1) (EQ phi_34 100)) (OR (EQ phi_34_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_34_4 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_34_5 1) (NOTEQ phi_34 101)) (OR (NOTEQ phi_34_5 1) (EQ phi_34 101)) (OR (EQ phi_34_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_34_5 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_34_6 1) (NOTEQ phi_34 110)) (OR (NOTEQ phi_34_6 1) (EQ phi_34 110)) (OR (EQ phi_34_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_34_6 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_34_7 1) (NOTEQ phi_34 111)) (OR (NOTEQ phi_34_7 1) (EQ phi_34 111)) (OR (EQ phi_34_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_34_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_34_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_34_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_34_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_34_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_34_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_34_7 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_1$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_1$0(1))
Add formula: (AND (EQ pmem.l1Entry.V$0(1) 1))
Handle equation: (EQ pmem.l1Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1))))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (EQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0))) (EQ (BVEXTRACT 31 17 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 31 17 PA.value_L2_1_L2_0$1(0))))
Handle equation: (EQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0)))
Handle equation: (EQ (BVEXTRACT 31 17 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 31 17 PA.value_L2_1_L2_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$75$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$75$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$75$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$75$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$75$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$75$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L2.V_L2_1$1(1) 1) (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1))))
Handle equation: (EQ L2.V_L2_1$1(1) 1)
Handle equation: (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1)))
Add formula: (AND (EQ PA.value_L2_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1)) (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0)) (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1)))
Handle equation: (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0))
Handle equation: (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1))
Add formula: (AND (EQ L2.V$1(1) L2.V_L2_1$1(1)) (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1)) (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0)))
Handle equation: (EQ L2.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1))
Handle equation: (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1))
Add formula: (OR (EQ phi_35 000) (EQ phi_35 001) (EQ phi_35 010) (EQ phi_35 011) (EQ phi_35 100) (EQ phi_35 101) (EQ phi_35 110) (EQ phi_35 111))
Add formula: (AND (OR (EQ phi_35_0 1) (NOTEQ phi_35 000)) (OR (NOTEQ phi_35_0 1) (EQ phi_35 000)) (OR (EQ phi_35_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_35_0 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_35_1 1) (NOTEQ phi_35 001)) (OR (NOTEQ phi_35_1 1) (EQ phi_35 001)) (OR (EQ phi_35_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_35_1 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_35_2 1) (NOTEQ phi_35 010)) (OR (NOTEQ phi_35_2 1) (EQ phi_35 010)) (OR (EQ phi_35_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_35_2 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_35_3 1) (NOTEQ phi_35 011)) (OR (NOTEQ phi_35_3 1) (EQ phi_35 011)) (OR (EQ phi_35_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_35_3 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_35_4 1) (NOTEQ phi_35 100)) (OR (NOTEQ phi_35_4 1) (EQ phi_35 100)) (OR (EQ phi_35_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_35_4 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_35_5 1) (NOTEQ phi_35 101)) (OR (NOTEQ phi_35_5 1) (EQ phi_35 101)) (OR (EQ phi_35_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_35_5 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_35_6 1) (NOTEQ phi_35 110)) (OR (NOTEQ phi_35_6 1) (EQ phi_35 110)) (OR (EQ phi_35_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_35_6 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_35_7 1) (NOTEQ phi_35 111)) (OR (NOTEQ phi_35_7 1) (EQ phi_35 111)) (OR (EQ phi_35_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_35_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_35_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_35_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_35_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_35_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_35_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_35_7 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_1$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_1$1(1))
Add formula: (AND (EQ pmem.l1Entry.V$1(1) 1))
Handle equation: (EQ pmem.l1Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1))))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1))
Possible dependencies: 3
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, HIT(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_4, READ(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_7, NORMAL: pmem.ASSIGN_8, NORMAL: ..., NORMAL: readData_1.STOP, NORMAL: pmem.ASSIGN_9, NORMAL: pmem.ASSIGN_10, NORMAL: pmem.ASSIGN_11, NORMAL: pmem.ASSIGN_12, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_13, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, HIT(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_4, READ(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_7, NORMAL: pmem.ASSIGN_8, NORMAL: ..., NORMAL: readData_1.STOP, NORMAL: pmem.ASSIGN_9, NORMAL: pmem.ASSIGN_10, NORMAL: pmem.ASSIGN_11, NORMAL: pmem.ASSIGN_12, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_13, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={L2.IndexNotEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, HIT(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_4, READ(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_7, NORMAL: pmem.ASSIGN_8, NORMAL: ..., NORMAL: readData_1.STOP, NORMAL: pmem.ASSIGN_9, NORMAL: pmem.ASSIGN_10, NORMAL: pmem.ASSIGN_11, NORMAL: pmem.ASSIGN_12, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_13, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, HIT(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_4, READ(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_7, NORMAL: pmem.ASSIGN_8, NORMAL: ..., NORMAL: readData_1.STOP, NORMAL: pmem.ASSIGN_9, NORMAL: pmem.ASSIGN_10, NORMAL: pmem.ASSIGN_11, NORMAL: pmem.ASSIGN_12, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_13, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={L2.TagEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.

-------------- Constructed Test Case 7 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	xori $16, $0, 0xf8a3
	sll $16, $16, 16
	xori $16, $16, 0x42e3
	sw $16, 0($18)
	addiu $18, $18, 0x4
	lui $17, 0x4386
	xori $17, $17, 0x343
	sw $17, 0($19)
	addiu $19, $19, 0x4
	ori $9, $0, 0xe058
	sll $9, $9, 16
	ori $9, $9, 0xec75
	lui $10, 0xe8d9
	ori $10, $10, 0x921d
	la $18, branch_data_0
	xori $11, $0, 0x5fdf
	sll $11, $11, 16
	xori $11, $11, 0x3040
	lui $12, 0xa3a9
	ori $12, $12, 0x6764
	la $19, branch_data_1
	
	Stimulus
start_0007:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [false]
	bgez $16, normal_0007
	nop
overflow_0007:
	lw $17, 0($19)
	addiu $19, $19, 0x4
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $9, $10
	j finish_0007
	nop
normal_0007:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $11, $12
	lw $20, 0($13)
	lw $21, 0($14)
finish_0007:
	# Begin: Executed code (2)
	# End: Executed code (2)
	nop
	# Execution trace: [false]
	bltz $17, start_0007
	nop

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a056c (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a0574 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a057c (PA): xori $16, $0, 0xf8a3 (0x3810F8A3)
0x00000000000a0580 (PA): sll $16, $16, 16 (0x00108400)
0x00000000000a0584 (PA): xori $16, $16, 0x42e3 (0x3A1042E3)
0x00000000000a0588 (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a058c (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0590 (PA): lui $17, 0x4386 (0x3C114386)
0x00000000000a0594 (PA): xori $17, $17, 0x343 (0x3A310343)
0x00000000000a0598 (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a059c (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a05a0 (PA): ori $9, $0, 0xe058 (0x3409E058)
0x00000000000a05a4 (PA): sll $9, $9, 16 (0x00094C00)
0x00000000000a05a8 (PA): ori $9, $9, 0xec75 (0x3529EC75)
0x00000000000a05ac (PA): lui $10, 0xe8d9 (0x3C0AE8D9)
0x00000000000a05b0 (PA): ori $10, $10, 0x921d (0x354A921D)
0x00000000000a05b4 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a05bc (PA): xori $11, $0, 0x5fdf (0x380B5FDF)
0x00000000000a05c0 (PA): sll $11, $11, 16 (0x000B5C00)
0x00000000000a05c4 (PA): xori $11, $11, 0x3040 (0x396B3040)
0x00000000000a05c8 (PA): lui $12, 0xa3a9 (0x3C0CA3A9)
0x00000000000a05cc (PA): ori $12, $12, 0x6764 (0x358C6764)
0x00000000000a05d0 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a05d8 (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a05dc (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a05e0 (PA): nop (0x00000000)
0x00000000000a05e4 (PA): bgez $16, normal_0007 (0x0601FFEF)
0x00000000000a05e8 (PA): nop (0x00000000)
0x00000000000a05ec (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a05f0 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a05f4 (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a05f8 (PA): j finish_0007 (0x0802816C)
0x00000000000a05fc (PA): nop (0x00000000)
0x00000000000a0600 (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a0604 (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a0608 (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a060c (PA): nop (0x00000000)
0x00000000000a0610 (PA): bltz $17, start_0007 (0x0620FFDA)
0x00000000000a0614 (PA): nop (0x00000000)

--------- Running Execution from Test Case 7 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x0000000000000380

Execution cannot continue at the current stage.
Checking dependencies between READ(L2:L2_1[PA:PA.value_L2_1[32]]) and READ(L2:L2_1[PA:PA.value_L2_1[32]])
Enumerating dependencies between READ(L2:L2_1[PA:PA.value_L2_1[32]]) and READ(L2:L2_1[PA:PA.value_L2_1[32]])
Possible dependencies: hazard L2.IndexNotEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]
Possible dependencies: hazard L2.TagNotEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]
Possible dependencies: hazard L2.TagEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$82$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$82$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$82$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$82$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$82$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$82$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L2.V_L2_1$0(1) 1) (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1))))
Handle equation: (EQ L2.V_L2_1$0(1) 1)
Handle equation: (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1)))
Add formula: (AND (EQ PA.value_L2_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1)) (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0)) (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1)))
Handle equation: (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0))
Handle equation: (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1))
Add formula: (AND (EQ L2.V$0(1) L2.V_L2_1$0(1)) (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1)) (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0)))
Handle equation: (EQ L2.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1))
Handle equation: (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1))
Add formula: (OR (EQ phi_38 000) (EQ phi_38 001) (EQ phi_38 010) (EQ phi_38 011) (EQ phi_38 100) (EQ phi_38 101) (EQ phi_38 110) (EQ phi_38 111))
Add formula: (AND (OR (EQ phi_38_0 1) (NOTEQ phi_38 000)) (OR (NOTEQ phi_38_0 1) (EQ phi_38 000)) (OR (EQ phi_38_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_38_0 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_38_1 1) (NOTEQ phi_38 001)) (OR (NOTEQ phi_38_1 1) (EQ phi_38 001)) (OR (EQ phi_38_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_38_1 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_38_2 1) (NOTEQ phi_38 010)) (OR (NOTEQ phi_38_2 1) (EQ phi_38 010)) (OR (EQ phi_38_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_38_2 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_38_3 1) (NOTEQ phi_38 011)) (OR (NOTEQ phi_38_3 1) (EQ phi_38 011)) (OR (EQ phi_38_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_38_3 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_38_4 1) (NOTEQ phi_38 100)) (OR (NOTEQ phi_38_4 1) (EQ phi_38 100)) (OR (EQ phi_38_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_38_4 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_38_5 1) (NOTEQ phi_38 101)) (OR (NOTEQ phi_38_5 1) (EQ phi_38 101)) (OR (EQ phi_38_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_38_5 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_38_6 1) (NOTEQ phi_38 110)) (OR (NOTEQ phi_38_6 1) (EQ phi_38 110)) (OR (EQ phi_38_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_38_6 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_38_7 1) (NOTEQ phi_38 111)) (OR (NOTEQ phi_38_7 1) (EQ phi_38 111)) (OR (EQ phi_38_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_38_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_38_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_38_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_38_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_38_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_38_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_38_7 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_1$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_1$0(1))
Add formula: (AND (EQ pmem.l1Entry.V$0(1) 1))
Handle equation: (EQ pmem.l1Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1))))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (NOTEQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0))))
Handle equation: (NOTEQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$83$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$83$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$83$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$83$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$83$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$83$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L2.V_L2_1$1(1) 1) (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1))))
Handle equation: (EQ L2.V_L2_1$1(1) 1)
Handle equation: (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1)))
Add formula: (AND (EQ PA.value_L2_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1)) (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0)) (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1)))
Handle equation: (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0))
Handle equation: (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1))
Add formula: (AND (EQ L2.V$1(1) L2.V_L2_1$1(1)) (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1)) (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0)))
Handle equation: (EQ L2.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1))
Handle equation: (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1))
Add formula: (OR (EQ phi_39 000) (EQ phi_39 001) (EQ phi_39 010) (EQ phi_39 011) (EQ phi_39 100) (EQ phi_39 101) (EQ phi_39 110) (EQ phi_39 111))
Add formula: (AND (OR (EQ phi_39_0 1) (NOTEQ phi_39 000)) (OR (NOTEQ phi_39_0 1) (EQ phi_39 000)) (OR (EQ phi_39_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_39_0 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_39_1 1) (NOTEQ phi_39 001)) (OR (NOTEQ phi_39_1 1) (EQ phi_39 001)) (OR (EQ phi_39_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_39_1 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_39_2 1) (NOTEQ phi_39 010)) (OR (NOTEQ phi_39_2 1) (EQ phi_39 010)) (OR (EQ phi_39_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_39_2 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_39_3 1) (NOTEQ phi_39 011)) (OR (NOTEQ phi_39_3 1) (EQ phi_39 011)) (OR (EQ phi_39_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_39_3 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_39_4 1) (NOTEQ phi_39 100)) (OR (NOTEQ phi_39_4 1) (EQ phi_39 100)) (OR (EQ phi_39_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_39_4 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_39_5 1) (NOTEQ phi_39 101)) (OR (NOTEQ phi_39_5 1) (EQ phi_39 101)) (OR (EQ phi_39_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_39_5 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_39_6 1) (NOTEQ phi_39 110)) (OR (NOTEQ phi_39_6 1) (EQ phi_39 110)) (OR (EQ phi_39_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_39_6 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_39_7 1) (NOTEQ phi_39 111)) (OR (NOTEQ phi_39_7 1) (EQ phi_39 111)) (OR (EQ phi_39_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_39_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_39_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_39_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_39_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_39_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_39_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_39_7 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_1$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_1$1(1))
Add formula: (AND (EQ pmem.l1Entry.V$1(1) 1))
Handle equation: (EQ pmem.l1Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1))))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$84$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$84$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$84$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$84$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$84$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$84$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L2.V_L2_1$0(1) 1) (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1))))
Handle equation: (EQ L2.V_L2_1$0(1) 1)
Handle equation: (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1)))
Add formula: (AND (EQ PA.value_L2_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1)) (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0)) (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1)))
Handle equation: (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0))
Handle equation: (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1))
Add formula: (AND (EQ L2.V$0(1) L2.V_L2_1$0(1)) (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1)) (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0)))
Handle equation: (EQ L2.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1))
Handle equation: (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1))
Add formula: (OR (EQ phi_40 000) (EQ phi_40 001) (EQ phi_40 010) (EQ phi_40 011) (EQ phi_40 100) (EQ phi_40 101) (EQ phi_40 110) (EQ phi_40 111))
Add formula: (AND (OR (EQ phi_40_0 1) (NOTEQ phi_40 000)) (OR (NOTEQ phi_40_0 1) (EQ phi_40 000)) (OR (EQ phi_40_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_40_0 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_40_1 1) (NOTEQ phi_40 001)) (OR (NOTEQ phi_40_1 1) (EQ phi_40 001)) (OR (EQ phi_40_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_40_1 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_40_2 1) (NOTEQ phi_40 010)) (OR (NOTEQ phi_40_2 1) (EQ phi_40 010)) (OR (EQ phi_40_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_40_2 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_40_3 1) (NOTEQ phi_40 011)) (OR (NOTEQ phi_40_3 1) (EQ phi_40 011)) (OR (EQ phi_40_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_40_3 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_40_4 1) (NOTEQ phi_40 100)) (OR (NOTEQ phi_40_4 1) (EQ phi_40 100)) (OR (EQ phi_40_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_40_4 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_40_5 1) (NOTEQ phi_40 101)) (OR (NOTEQ phi_40_5 1) (EQ phi_40 101)) (OR (EQ phi_40_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_40_5 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_40_6 1) (NOTEQ phi_40 110)) (OR (NOTEQ phi_40_6 1) (EQ phi_40 110)) (OR (EQ phi_40_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_40_6 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_40_7 1) (NOTEQ phi_40 111)) (OR (NOTEQ phi_40_7 1) (EQ phi_40 111)) (OR (EQ phi_40_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_40_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_40_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_40_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_40_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_40_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_40_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_40_7 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_1$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_1$0(1))
Add formula: (AND (EQ pmem.l1Entry.V$0(1) 1))
Handle equation: (EQ pmem.l1Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1))))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (EQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0))) (NOTEQ (BVEXTRACT 31 17 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 31 17 PA.value_L2_1_L2_0$1(0))))
Handle equation: (EQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0)))
Handle equation: (NOTEQ (BVEXTRACT 31 17 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 31 17 PA.value_L2_1_L2_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$85$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$85$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$85$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$85$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$85$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$85$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L2.V_L2_1$1(1) 1) (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1))))
Handle equation: (EQ L2.V_L2_1$1(1) 1)
Handle equation: (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1)))
Add formula: (AND (EQ PA.value_L2_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1)) (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0)) (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1)))
Handle equation: (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0))
Handle equation: (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1))
Add formula: (AND (EQ L2.V$1(1) L2.V_L2_1$1(1)) (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1)) (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0)))
Handle equation: (EQ L2.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1))
Handle equation: (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1))
Add formula: (OR (EQ phi_41 000) (EQ phi_41 001) (EQ phi_41 010) (EQ phi_41 011) (EQ phi_41 100) (EQ phi_41 101) (EQ phi_41 110) (EQ phi_41 111))
Add formula: (AND (OR (EQ phi_41_0 1) (NOTEQ phi_41 000)) (OR (NOTEQ phi_41_0 1) (EQ phi_41 000)) (OR (EQ phi_41_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_41_0 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_41_1 1) (NOTEQ phi_41 001)) (OR (NOTEQ phi_41_1 1) (EQ phi_41 001)) (OR (EQ phi_41_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_41_1 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_41_2 1) (NOTEQ phi_41 010)) (OR (NOTEQ phi_41_2 1) (EQ phi_41 010)) (OR (EQ phi_41_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_41_2 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_41_3 1) (NOTEQ phi_41 011)) (OR (NOTEQ phi_41_3 1) (EQ phi_41 011)) (OR (EQ phi_41_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_41_3 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_41_4 1) (NOTEQ phi_41 100)) (OR (NOTEQ phi_41_4 1) (EQ phi_41 100)) (OR (EQ phi_41_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_41_4 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_41_5 1) (NOTEQ phi_41 101)) (OR (NOTEQ phi_41_5 1) (EQ phi_41 101)) (OR (EQ phi_41_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_41_5 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_41_6 1) (NOTEQ phi_41 110)) (OR (NOTEQ phi_41_6 1) (EQ phi_41 110)) (OR (EQ phi_41_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_41_6 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_41_7 1) (NOTEQ phi_41 111)) (OR (NOTEQ phi_41_7 1) (EQ phi_41 111)) (OR (EQ phi_41_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_41_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_41_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_41_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_41_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_41_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_41_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_41_7 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_1$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_1$1(1))
Add formula: (AND (EQ pmem.l1Entry.V$1(1) 1))
Handle equation: (EQ pmem.l1Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1))))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$86$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$86$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$86$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$86$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$86$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$86$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(1) PA.value$0(1))
Add formula: (AND (EQ L2.V_L2_1$0(1) 1) (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1))))
Handle equation: (EQ L2.V_L2_1$0(1) 1)
Handle equation: (EQ L2.TAG_L2_1$0(1) (BVEXTRACT 31 17 PA.value_L2_1$0(1)))
Add formula: (AND (EQ PA.value_L2_1$0(2) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(2) PA.value$0(1))
Add formula: (AND (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1)) (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0)) (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1)))
Handle equation: (EQ pmem.l2Entry.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ pmem.l2Entry.DATA$0(1) L2.DATA_L2_1$0(0))
Handle equation: (EQ pmem.l2Entry.TAG$0(1) L2.TAG_L2_1$0(1))
Add formula: (AND (EQ L2.V$0(1) L2.V_L2_1$0(1)) (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1)) (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0)))
Handle equation: (EQ L2.V$0(1) L2.V_L2_1$0(1))
Handle equation: (EQ L2.TAG$0(1) L2.TAG_L2_1$0(1))
Handle equation: (EQ L2.DATA$0(1) L2.DATA_L2_1$0(0))
Add formula: (AND (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1)))
Handle equation: (EQ pmem.cacheData$0(1) pmem.l2Entry.DATA$0(1))
Add formula: (OR (EQ phi_42 000) (EQ phi_42 001) (EQ phi_42 010) (EQ phi_42 011) (EQ phi_42 100) (EQ phi_42 101) (EQ phi_42 110) (EQ phi_42 111))
Add formula: (AND (OR (EQ phi_42_0 1) (NOTEQ phi_42 000)) (OR (NOTEQ phi_42_0 1) (EQ phi_42 000)) (OR (EQ phi_42_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_42_0 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_42_1 1) (NOTEQ phi_42 001)) (OR (NOTEQ phi_42_1 1) (EQ phi_42 001)) (OR (EQ phi_42_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_42_1 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_42_2 1) (NOTEQ phi_42 010)) (OR (NOTEQ phi_42_2 1) (EQ phi_42 010)) (OR (EQ phi_42_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_42_2 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_42_3 1) (NOTEQ phi_42 011)) (OR (NOTEQ phi_42_3 1) (EQ phi_42 011)) (OR (EQ phi_42_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_42_3 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_42_4 1) (NOTEQ phi_42 100)) (OR (NOTEQ phi_42_4 1) (EQ phi_42 100)) (OR (EQ phi_42_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_42_4 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_42_5 1) (NOTEQ phi_42 101)) (OR (NOTEQ phi_42_5 1) (EQ phi_42 101)) (OR (EQ phi_42_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_42_5 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_42_6 1) (NOTEQ phi_42 110)) (OR (NOTEQ phi_42_6 1) (EQ phi_42 110)) (OR (EQ phi_42_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_42_6 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_42_7 1) (NOTEQ phi_42 111)) (OR (NOTEQ phi_42_7 1) (EQ phi_42 111)) (OR (EQ phi_42_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_42_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_42_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_42_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_42_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_42_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_42_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_42_7 0) (EQ pmem.TMP_1$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_1$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_1$0(1))
Add formula: (AND (EQ pmem.l1Entry.V$0(1) 1))
Handle equation: (EQ pmem.l1Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1))))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (EQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0))) (EQ (BVEXTRACT 31 17 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 31 17 PA.value_L2_1_L2_0$1(0))))
Handle equation: (EQ (BVEXTRACT 16 5 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 16 5 PA.value_L2_1_L2_0$1(0)))
Handle equation: (EQ (BVEXTRACT 31 17 PA.value_L2_1_L2_1$0(0)) (BVEXTRACT 31 17 PA.value_L2_1_L2_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$87$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$87$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$87$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$87$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$87$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$87$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(1) PA.value$1(1))
Add formula: (AND (EQ L2.V_L2_1$1(1) 1) (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1))))
Handle equation: (EQ L2.V_L2_1$1(1) 1)
Handle equation: (EQ L2.TAG_L2_1$1(1) (BVEXTRACT 31 17 PA.value_L2_1$1(1)))
Add formula: (AND (EQ PA.value_L2_1$1(2) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(2) PA.value$1(1))
Add formula: (AND (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1)) (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0)) (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1)))
Handle equation: (EQ pmem.l2Entry.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ pmem.l2Entry.DATA$1(1) L2.DATA_L2_1$1(0))
Handle equation: (EQ pmem.l2Entry.TAG$1(1) L2.TAG_L2_1$1(1))
Add formula: (AND (EQ L2.V$1(1) L2.V_L2_1$1(1)) (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1)) (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0)))
Handle equation: (EQ L2.V$1(1) L2.V_L2_1$1(1))
Handle equation: (EQ L2.TAG$1(1) L2.TAG_L2_1$1(1))
Handle equation: (EQ L2.DATA$1(1) L2.DATA_L2_1$1(0))
Add formula: (AND (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1)))
Handle equation: (EQ pmem.cacheData$1(1) pmem.l2Entry.DATA$1(1))
Add formula: (OR (EQ phi_43 000) (EQ phi_43 001) (EQ phi_43 010) (EQ phi_43 011) (EQ phi_43 100) (EQ phi_43 101) (EQ phi_43 110) (EQ phi_43 111))
Add formula: (AND (OR (EQ phi_43_0 1) (NOTEQ phi_43 000)) (OR (NOTEQ phi_43_0 1) (EQ phi_43 000)) (OR (EQ phi_43_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_43_0 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_43_1 1) (NOTEQ phi_43 001)) (OR (NOTEQ phi_43_1 1) (EQ phi_43 001)) (OR (EQ phi_43_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_43_1 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_43_2 1) (NOTEQ phi_43 010)) (OR (NOTEQ phi_43_2 1) (EQ phi_43 010)) (OR (EQ phi_43_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_43_2 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_43_3 1) (NOTEQ phi_43 011)) (OR (NOTEQ phi_43_3 1) (EQ phi_43 011)) (OR (EQ phi_43_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_43_3 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_43_4 1) (NOTEQ phi_43 100)) (OR (NOTEQ phi_43_4 1) (EQ phi_43 100)) (OR (EQ phi_43_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_43_4 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_43_5 1) (NOTEQ phi_43 101)) (OR (NOTEQ phi_43_5 1) (EQ phi_43 101)) (OR (EQ phi_43_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_43_5 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_43_6 1) (NOTEQ phi_43 110)) (OR (NOTEQ phi_43_6 1) (EQ phi_43 110)) (OR (EQ phi_43_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_43_6 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_43_7 1) (NOTEQ phi_43 111)) (OR (NOTEQ phi_43_7 1) (EQ phi_43 111)) (OR (EQ phi_43_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_43_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_43_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_43_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_43_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_43_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_43_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_43_7 0) (EQ pmem.TMP_1$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_1$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_1$1(1))
Add formula: (AND (EQ pmem.l1Entry.V$1(1) 1))
Handle equation: (EQ pmem.l1Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1))))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1))
Possible dependencies: 3
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, HIT(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_4, READ(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_7, NORMAL: pmem.ASSIGN_8, NORMAL: ..., NORMAL: readData_1.STOP, NORMAL: pmem.ASSIGN_9, NORMAL: pmem.ASSIGN_10, NORMAL: pmem.ASSIGN_11, NORMAL: pmem.ASSIGN_12, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_13, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, HIT(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_4, READ(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_7, NORMAL: pmem.ASSIGN_8, NORMAL: ..., NORMAL: readData_1.STOP, NORMAL: pmem.ASSIGN_9, NORMAL: pmem.ASSIGN_10, NORMAL: pmem.ASSIGN_11, NORMAL: pmem.ASSIGN_12, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_13, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={L2.TagNotEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, HIT(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_4, READ(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_7, NORMAL: pmem.ASSIGN_8, NORMAL: ..., NORMAL: readData_1.STOP, NORMAL: pmem.ASSIGN_9, NORMAL: pmem.ASSIGN_10, NORMAL: pmem.ASSIGN_11, NORMAL: pmem.ASSIGN_12, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_13, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, HIT(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_4, READ(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_7, NORMAL: pmem.ASSIGN_8, NORMAL: ..., NORMAL: readData_1.STOP, NORMAL: pmem.ASSIGN_9, NORMAL: pmem.ASSIGN_10, NORMAL: pmem.ASSIGN_11, NORMAL: pmem.ASSIGN_12, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_13, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={L2.TagNotEqual[READ(L2:L2_1[PA:PA.value_L2_1[32]]),READ(L2:L2_1[PA:PA.value_L2_1[32]])]}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.

-------------- Constructed Test Case 8 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	la $1, preparator_data_n49_0008
	lw $16, 0($1)
	sw $16, 0($18)
	addiu $18, $18, 0x4
	xori $17, $0, 0x6af4
	sll $17, $17, 16
	ori $17, $17, 0x8f35
	sw $17, 0($19)
	addiu $19, $19, 0x4
	lui $9, 0x5b3e
	xori $9, $9, 0x33f4
	la $1, preparator_data_n52_0008
	lw $10, 0($1)
	la $18, branch_data_0
	la $1, preparator_data_n53_0008
	lw $11, 0($1)
	la $1, preparator_data_n54_0008
	lw $12, 0($1)
	la $19, branch_data_1
	
	Stimulus
start_0008:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [false]
	bgez $16, normal_0008
	nop
overflow_0008:
	lw $17, 0($19)
	addiu $19, $19, 0x4
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $9, $10
	j finish_0008
	nop
normal_0008:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $11, $12
	lw $20, 0($13)
	lw $21, 0($14)
finish_0008:
	# Begin: Executed code (2)
	# End: Executed code (2)
	nop
	# Execution trace: [false]
	bltz $17, start_0008
	nop

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x00000000000904d4

0x00000000000904d4 (PA): .org 0x104e4
0x00000000000904e4 (PA): .align 4
preparator_data_n49_0008:
0x00000000000904f0 (PA): .word 0xE77C4E97

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x00000000000904f4

0x00000000000904f4 (PA): .org 0x10504
0x0000000000090504 (PA): .align 4
preparator_data_n52_0008:
0x0000000000090510 (PA): .word 0x6BB9441A

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090514

0x0000000000090514 (PA): .org 0x10524
0x0000000000090524 (PA): .align 4
preparator_data_n53_0008:
0x0000000000090530 (PA): .word 0xAEC641C

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090534

0x0000000000090534 (PA): .org 0x10544
0x0000000000090544 (PA): .align 4
preparator_data_n54_0008:
0x0000000000090550 (PA): .word 0xD2907E73

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a0618 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a0620 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a0628 (PA): la $1, preparator_data_n49_0008 (0x3C010009342104F0)
0x00000000000a0630 (PA): lw $16, 0($1) (0x8C300000)
0x00000000000a0634 (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a0638 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a063c (PA): xori $17, $0, 0x6af4 (0x38116AF4)
0x00000000000a0640 (PA): sll $17, $17, 16 (0x00118C00)
0x00000000000a0644 (PA): ori $17, $17, 0x8f35 (0x36318F35)
0x00000000000a0648 (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a064c (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a0650 (PA): lui $9, 0x5b3e (0x3C095B3E)
0x00000000000a0654 (PA): xori $9, $9, 0x33f4 (0x392933F4)
0x00000000000a0658 (PA): la $1, preparator_data_n52_0008 (0x3C01000934210510)
0x00000000000a0660 (PA): lw $10, 0($1) (0x8C2A0000)
0x00000000000a0664 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a066c (PA): la $1, preparator_data_n53_0008 (0x3C01000934210530)
0x00000000000a0674 (PA): lw $11, 0($1) (0x8C2B0000)
0x00000000000a0678 (PA): la $1, preparator_data_n54_0008 (0x3C01000934210550)
0x00000000000a0680 (PA): lw $12, 0($1) (0x8C2C0000)
0x00000000000a0684 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a068c (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a0690 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0694 (PA): nop (0x00000000)
0x00000000000a0698 (PA): bgez $16, normal_0008 (0x0601FFED)
0x00000000000a069c (PA): nop (0x00000000)
0x00000000000a06a0 (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a06a4 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a06a8 (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a06ac (PA): j finish_0008 (0x08028197)
0x00000000000a06b0 (PA): nop (0x00000000)
0x00000000000a06b4 (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a06b8 (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a06bc (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a06c0 (PA): nop (0x00000000)
0x00000000000a06c4 (PA): bltz $17, start_0008 (0x0620FFD8)
0x00000000000a06c8 (PA): nop (0x00000000)

--------- Running Execution from Test Case 8 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x0000000000000380

Execution cannot continue at the current stage.
Checking dependencies between READ(M:M_1[PA:PA.value_M_1[32]]) and READ(M:M_1[PA:PA.value_M_1[32]])
Enumerating dependencies between READ(M:M_1[PA:PA.value_M_1[32]]) and READ(M:M_1[PA:PA.value_M_1[32]])
Possible dependencies: hazard M.IndexNotEqual[READ(M:M_1[PA:PA.value_M_1[32]]),READ(M:M_1[PA:PA.value_M_1[32]])]
Add formula: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$0(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$94$0(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$0(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 1 1 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 1) (EQ (BVEXTRACT 1 1 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$0(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$0(0)) 0) (EQ (BVEXTRACT 2 2 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$0(0)) 1) (EQ (BVEXTRACT 2 2 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 3 3 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$0(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$0(0)) 0) (EQ (BVEXTRACT 3 3 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$0(0)) 1) (EQ (BVEXTRACT 3 3 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 4 4 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$0(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$0(0)) 0) (EQ (BVEXTRACT 4 4 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$0(0)) 1) (EQ (BVEXTRACT 4 4 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 5 5 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$0(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$0(0)) 0) (EQ (BVEXTRACT 5 5 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$0(0)) 1) (EQ (BVEXTRACT 5 5 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 6 6 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$0(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$0(0)) 0) (EQ (BVEXTRACT 6 6 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$0(0)) 1) (EQ (BVEXTRACT 6 6 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 7 7 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$0(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$0(0)) 0) (EQ (BVEXTRACT 7 7 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$0(0)) 1) (EQ (BVEXTRACT 7 7 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 8 8 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$0(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$0(0)) 0) (EQ (BVEXTRACT 8 8 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$0(0)) 1) (EQ (BVEXTRACT 8 8 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 9 9 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$0(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$0(0)) 0) (EQ (BVEXTRACT 9 9 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$0(0)) 1) (EQ (BVEXTRACT 9 9 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 10 10 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$0(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$0(0)) 0) (EQ (BVEXTRACT 10 10 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$0(0)) 1) (EQ (BVEXTRACT 10 10 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$0(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$0(0)) 0) (EQ (BVEXTRACT 11 11 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$0(0)) 1) (EQ (BVEXTRACT 11 11 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$0(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$0(0)) 0) (EQ (BVEXTRACT 12 12 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$0(0)) 1) (EQ (BVEXTRACT 12 12 new$94$0(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$94$0(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$0(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$0(0)) 0) (EQ (BVEXTRACT 13 13 new$94$0(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$0(0)) 1) (EQ (BVEXTRACT 13 13 new$94$0(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$94$0(0)) 0)
Add formula: (AND (EQ pmem.c$0(1) 3))
Handle equation: (EQ pmem.c$0(1) 3)
Add formula: (AND (EQ PA.value$0(1) VA.value$0(0)))
Handle equation: (EQ PA.value$0(1) VA.value$0(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1))))
Handle equation: (EQ pmem.offset$0(1) (BVEXTRACT 4 2 PA.value$0(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$0(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L1_1$0(1) PA.value$0(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$0(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_L2_1$0(1) PA.value$0(1))
Add formula: (AND (EQ PA.value_M_1$0(1) PA.value$0(1)))
Handle equation: (EQ PA.value_M_1$0(1) PA.value$0(1))
Add formula: (AND (EQ pmem.cacheData$0(1) M.DATA_M_1$0(0)))
Handle equation: (EQ pmem.cacheData$0(1) M.DATA_M_1$0(0))
Add formula: (AND (EQ M.DATA$0(1) M.DATA_M_1$0(0)))
Handle equation: (EQ M.DATA$0(1) M.DATA_M_1$0(0))
Add formula: (OR (EQ phi_46 000) (EQ phi_46 001) (EQ phi_46 010) (EQ phi_46 011) (EQ phi_46 100) (EQ phi_46 101) (EQ phi_46 110) (EQ phi_46 111))
Add formula: (AND (OR (EQ phi_46_0 1) (NOTEQ phi_46 000)) (OR (NOTEQ phi_46_0 1) (EQ phi_46 000)) (OR (EQ phi_46_0 0) (EQ pmem.offset$0(1) 000)) (OR (EQ phi_46_0 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 31 0 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_46_1 1) (NOTEQ phi_46 001)) (OR (NOTEQ phi_46_1 1) (EQ phi_46 001)) (OR (EQ phi_46_1 0) (EQ pmem.offset$0(1) 001)) (OR (EQ phi_46_1 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 63 32 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_46_2 1) (NOTEQ phi_46 010)) (OR (NOTEQ phi_46_2 1) (EQ phi_46 010)) (OR (EQ phi_46_2 0) (EQ pmem.offset$0(1) 010)) (OR (EQ phi_46_2 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 95 64 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_46_3 1) (NOTEQ phi_46 011)) (OR (NOTEQ phi_46_3 1) (EQ phi_46 011)) (OR (EQ phi_46_3 0) (EQ pmem.offset$0(1) 011)) (OR (EQ phi_46_3 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 127 96 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_46_4 1) (NOTEQ phi_46 100)) (OR (NOTEQ phi_46_4 1) (EQ phi_46 100)) (OR (EQ phi_46_4 0) (EQ pmem.offset$0(1) 100)) (OR (EQ phi_46_4 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 159 128 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_46_5 1) (NOTEQ phi_46 101)) (OR (NOTEQ phi_46_5 1) (EQ phi_46 101)) (OR (EQ phi_46_5 0) (EQ pmem.offset$0(1) 101)) (OR (EQ phi_46_5 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 191 160 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_46_6 1) (NOTEQ phi_46 110)) (OR (NOTEQ phi_46_6 1) (EQ phi_46 110)) (OR (EQ phi_46_6 0) (EQ pmem.offset$0(1) 110)) (OR (EQ phi_46_6 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 223 192 pmem.cacheData$0(1)))))
Add formula: (AND (OR (EQ phi_46_7 1) (NOTEQ phi_46 111)) (OR (NOTEQ phi_46_7 1) (EQ phi_46 111)) (OR (EQ phi_46_7 0) (NOTEQ pmem.offset$0(1) 000)) (OR (EQ phi_46_7 0) (NOTEQ pmem.offset$0(1) 001)) (OR (EQ phi_46_7 0) (NOTEQ pmem.offset$0(1) 010)) (OR (EQ phi_46_7 0) (NOTEQ pmem.offset$0(1) 011)) (OR (EQ phi_46_7 0) (NOTEQ pmem.offset$0(1) 100)) (OR (EQ phi_46_7 0) (NOTEQ pmem.offset$0(1) 101)) (OR (EQ phi_46_7 0) (NOTEQ pmem.offset$0(1) 110)) (OR (EQ phi_46_7 0) (EQ pmem.TMP_2$0(1) (BVEXTRACT 255 224 pmem.cacheData$0(1)))))
Add formula: (AND (EQ pmem.data$0(1) pmem.TMP_2$0(1)))
Handle equation: (EQ pmem.data$0(1) pmem.TMP_2$0(1))
Add formula: (AND (EQ pmem.l2Entry.V$0(1) 1))
Handle equation: (EQ pmem.l2Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l2Entry.TAG$0(1) (BVEXTRACT 31 17 PA.value$0(1))))
Handle equation: (EQ pmem.l2Entry.TAG$0(1) (BVEXTRACT 31 17 PA.value$0(1)))
Add formula: (AND (EQ pmem.l2Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l2Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (EQ pmem.l1Entry.V$0(1) 1))
Handle equation: (EQ pmem.l1Entry.V$0(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1))))
Handle equation: (EQ pmem.l1Entry.TAG$0(1) (BVEXTRACT 31 12 PA.value$0(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1)))
Handle equation: (EQ pmem.l1Entry.DATA$0(1) pmem.cacheData$0(1))
Add formula: (AND (NOTEQ (BVEXTRACT 31 5 PA.value_M_1_M_1$0(0)) (BVEXTRACT 31 5 PA.value_M_1_M_0$1(0))))
Handle equation: (NOTEQ (BVEXTRACT 31 5 PA.value_M_1_M_1$0(0)) (BVEXTRACT 31 5 PA.value_M_1_M_0$1(0)))
Add formula: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Handle equation: (EQ (BVEXTRACT 1 0 VA.value$1(0)) 00)
Constraint: VA:VA.value[32] in [120000, FFFFFFFF]
Add formula: (AND (NOTEQ (BVEXTRACT 13 0 new$95$1(0)) 0) (OR (NOTEQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 31 17 VA.value$1(0)) 000000000001001) (EQ (BVEXTRACT 0 0 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 1 1 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 1) (EQ (BVEXTRACT 1 1 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 31 VA.value$1(0)) 0) (EQ (BVEXTRACT 30 30 VA.value$1(0)) 0) (EQ (BVEXTRACT 2 2 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 30 30 VA.value$1(0)) 1) (EQ (BVEXTRACT 2 2 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 3 3 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 30 VA.value$1(0)) 00) (EQ (BVEXTRACT 29 29 VA.value$1(0)) 0) (EQ (BVEXTRACT 3 3 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 29 29 VA.value$1(0)) 1) (EQ (BVEXTRACT 3 3 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 4 4 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 29 VA.value$1(0)) 000) (EQ (BVEXTRACT 28 28 VA.value$1(0)) 0) (EQ (BVEXTRACT 4 4 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 28 28 VA.value$1(0)) 1) (EQ (BVEXTRACT 4 4 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 5 5 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 28 VA.value$1(0)) 0000) (EQ (BVEXTRACT 27 27 VA.value$1(0)) 0) (EQ (BVEXTRACT 5 5 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 27 27 VA.value$1(0)) 1) (EQ (BVEXTRACT 5 5 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 6 6 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 27 VA.value$1(0)) 00000) (EQ (BVEXTRACT 26 26 VA.value$1(0)) 0) (EQ (BVEXTRACT 6 6 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 26 26 VA.value$1(0)) 1) (EQ (BVEXTRACT 6 6 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 7 7 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 26 VA.value$1(0)) 000000) (EQ (BVEXTRACT 25 25 VA.value$1(0)) 0) (EQ (BVEXTRACT 7 7 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 25 25 VA.value$1(0)) 1) (EQ (BVEXTRACT 7 7 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 8 8 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 25 VA.value$1(0)) 0000000) (EQ (BVEXTRACT 24 24 VA.value$1(0)) 0) (EQ (BVEXTRACT 8 8 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 24 24 VA.value$1(0)) 1) (EQ (BVEXTRACT 8 8 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 9 9 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 24 VA.value$1(0)) 00000000) (EQ (BVEXTRACT 23 23 VA.value$1(0)) 0) (EQ (BVEXTRACT 9 9 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 23 23 VA.value$1(0)) 1) (EQ (BVEXTRACT 9 9 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 10 10 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 23 VA.value$1(0)) 000000000) (EQ (BVEXTRACT 22 22 VA.value$1(0)) 0) (EQ (BVEXTRACT 10 10 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 22 22 VA.value$1(0)) 1) (EQ (BVEXTRACT 10 10 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 11 11 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 22 VA.value$1(0)) 0000000000) (EQ (BVEXTRACT 21 21 VA.value$1(0)) 0) (EQ (BVEXTRACT 11 11 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 21 21 VA.value$1(0)) 1) (EQ (BVEXTRACT 11 11 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 12 12 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 20 VA.value$1(0)) 000000000001) (EQ (BVEXTRACT 19 19 VA.value$1(0)) 0) (EQ (BVEXTRACT 12 12 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 19 19 VA.value$1(0)) 1) (EQ (BVEXTRACT 12 12 new$95$1(0)) 0)) (OR (EQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 13 13 new$95$1(0)) 0)) (OR (NOTEQ (BVEXTRACT 31 19 VA.value$1(0)) 0000000000010) (EQ (BVEXTRACT 18 18 VA.value$1(0)) 0) (EQ (BVEXTRACT 13 13 new$95$1(0)) 1)) (OR (EQ (BVEXTRACT 18 18 VA.value$1(0)) 1) (EQ (BVEXTRACT 13 13 new$95$1(0)) 0)))
Handle equation: (NOTEQ (BVEXTRACT 13 0 new$95$1(0)) 0)
Add formula: (AND (EQ pmem.c$1(1) 3))
Handle equation: (EQ pmem.c$1(1) 3)
Add formula: (AND (EQ PA.value$1(1) VA.value$1(0)))
Handle equation: (EQ PA.value$1(1) VA.value$1(0))
Add formula: (AND (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1)))
Handle equation: (EQ MMU_PA.value_MMU_PA_0$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1))))
Handle equation: (EQ pmem.offset$1(1) (BVEXTRACT 4 2 PA.value$1(1)))
Add formula: (AND (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10))
Handle equation: (NOTEQ (BVEXTRACT 1 0 pmem.c$1(1)) 10)
Add formula: (AND (EQ PA.value_L1_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L1_1$1(1) PA.value$1(1))
Add formula: (AND (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11))
Handle equation: (EQ (BVEXTRACT 1 0 pmem.c$1(1)) 11)
Add formula: (AND (EQ PA.value_L2_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_L2_1$1(1) PA.value$1(1))
Add formula: (AND (EQ PA.value_M_1$1(1) PA.value$1(1)))
Handle equation: (EQ PA.value_M_1$1(1) PA.value$1(1))
Add formula: (AND (EQ pmem.cacheData$1(1) M.DATA_M_1$1(0)))
Handle equation: (EQ pmem.cacheData$1(1) M.DATA_M_1$1(0))
Add formula: (AND (EQ M.DATA$1(1) M.DATA_M_1$1(0)))
Handle equation: (EQ M.DATA$1(1) M.DATA_M_1$1(0))
Add formula: (OR (EQ phi_47 000) (EQ phi_47 001) (EQ phi_47 010) (EQ phi_47 011) (EQ phi_47 100) (EQ phi_47 101) (EQ phi_47 110) (EQ phi_47 111))
Add formula: (AND (OR (EQ phi_47_0 1) (NOTEQ phi_47 000)) (OR (NOTEQ phi_47_0 1) (EQ phi_47 000)) (OR (EQ phi_47_0 0) (EQ pmem.offset$1(1) 000)) (OR (EQ phi_47_0 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 31 0 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_47_1 1) (NOTEQ phi_47 001)) (OR (NOTEQ phi_47_1 1) (EQ phi_47 001)) (OR (EQ phi_47_1 0) (EQ pmem.offset$1(1) 001)) (OR (EQ phi_47_1 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 63 32 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_47_2 1) (NOTEQ phi_47 010)) (OR (NOTEQ phi_47_2 1) (EQ phi_47 010)) (OR (EQ phi_47_2 0) (EQ pmem.offset$1(1) 010)) (OR (EQ phi_47_2 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 95 64 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_47_3 1) (NOTEQ phi_47 011)) (OR (NOTEQ phi_47_3 1) (EQ phi_47 011)) (OR (EQ phi_47_3 0) (EQ pmem.offset$1(1) 011)) (OR (EQ phi_47_3 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 127 96 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_47_4 1) (NOTEQ phi_47 100)) (OR (NOTEQ phi_47_4 1) (EQ phi_47 100)) (OR (EQ phi_47_4 0) (EQ pmem.offset$1(1) 100)) (OR (EQ phi_47_4 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 159 128 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_47_5 1) (NOTEQ phi_47 101)) (OR (NOTEQ phi_47_5 1) (EQ phi_47 101)) (OR (EQ phi_47_5 0) (EQ pmem.offset$1(1) 101)) (OR (EQ phi_47_5 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 191 160 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_47_6 1) (NOTEQ phi_47 110)) (OR (NOTEQ phi_47_6 1) (EQ phi_47 110)) (OR (EQ phi_47_6 0) (EQ pmem.offset$1(1) 110)) (OR (EQ phi_47_6 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 223 192 pmem.cacheData$1(1)))))
Add formula: (AND (OR (EQ phi_47_7 1) (NOTEQ phi_47 111)) (OR (NOTEQ phi_47_7 1) (EQ phi_47 111)) (OR (EQ phi_47_7 0) (NOTEQ pmem.offset$1(1) 000)) (OR (EQ phi_47_7 0) (NOTEQ pmem.offset$1(1) 001)) (OR (EQ phi_47_7 0) (NOTEQ pmem.offset$1(1) 010)) (OR (EQ phi_47_7 0) (NOTEQ pmem.offset$1(1) 011)) (OR (EQ phi_47_7 0) (NOTEQ pmem.offset$1(1) 100)) (OR (EQ phi_47_7 0) (NOTEQ pmem.offset$1(1) 101)) (OR (EQ phi_47_7 0) (NOTEQ pmem.offset$1(1) 110)) (OR (EQ phi_47_7 0) (EQ pmem.TMP_2$1(1) (BVEXTRACT 255 224 pmem.cacheData$1(1)))))
Add formula: (AND (EQ pmem.data$1(1) pmem.TMP_2$1(1)))
Handle equation: (EQ pmem.data$1(1) pmem.TMP_2$1(1))
Add formula: (AND (EQ pmem.l2Entry.V$1(1) 1))
Handle equation: (EQ pmem.l2Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l2Entry.TAG$1(1) (BVEXTRACT 31 17 PA.value$1(1))))
Handle equation: (EQ pmem.l2Entry.TAG$1(1) (BVEXTRACT 31 17 PA.value$1(1)))
Add formula: (AND (EQ pmem.l2Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l2Entry.DATA$1(1) pmem.cacheData$1(1))
Add formula: (AND (EQ pmem.l1Entry.V$1(1) 1))
Handle equation: (EQ pmem.l1Entry.V$1(1) 1)
Add formula: (AND (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1))))
Handle equation: (EQ pmem.l1Entry.TAG$1(1) (BVEXTRACT 31 12 PA.value$1(1)))
Add formula: (AND (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1)))
Handle equation: (EQ pmem.l1Entry.DATA$1(1) pmem.cacheData$1(1))
Possible dependencies: 1
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={M.IndexNotEqual[READ(M:M_1[PA:PA.value_M_1[32]]),READ(M:M_1[PA:PA.value_M_1[32]])]}]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: ]
MemoryEngine.solve: instruction call (root: lw, preparator: null, data: false, atomic: false, allocatorAction: null)
MemoryEngine.solve: [Access: LOAD[WORD], NORMAL: pmem.START, LOAD, NORMAL: pmem.IF_READ, NORMAL: pmem.ASSIGN_0, NORMAL: pmem.ASSIGN_1, WRITE(MMU_PA:MMU_PA_0[PA:PA.value_MMU_PA_0[32]]), NORMAL: pmem.ASSIGN_2, NORMAL: pmem.ASSIGN_3, (NOTEQ (BVEXTRACT 1 0 pmem.c) 10), NORMAL: pmem.BRANCH_0, MISS(L1:L1_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_2, (EQ (BVEXTRACT 1 0 pmem.c) 11), NORMAL: pmem.BRANCH_3, MISS(L2:L2_0[PA:PA.value[32]]), NORMAL: pmem.BRANCH_5, READ(M:M_1[PA:PA.value_M_1[32]]), NORMAL: pmem.ASSIGN_14, NORMAL: ..., NORMAL: readData_2.STOP, NORMAL: pmem.ASSIGN_15, NORMAL: pmem.ASSIGN_16, NORMAL: pmem.ASSIGN_17, NORMAL: pmem.ASSIGN_18, WRITE(L2:L2_1[PA:PA.value_L2_1[32]]), NORMAL: pmem.ASSIGN_19, NORMAL: pmem.ASSIGN_20, NORMAL: pmem.ASSIGN_21, NORMAL: pmem.ASSIGN_22, WRITE(L1:L1_1[PA:PA.value_L1_1[32]]), NORMAL: pmem.ASSIGN_23, NORMAL: pmem.JOIN_1, NORMAL: pmem.JOIN_2, NORMAL: pmem.JOIN_0, NORMAL: pmem.JOIN_3, pmem.STOP, Dependencies: [0]={M.IndexNotEqual[READ(M:M_1[PA:PA.value_M_1[32]]),READ(M:M_1[PA:PA.value_M_1[32]])]}]
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.startProcessing(SequenceConcretizer.java:617)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:160)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.onBeforeExecute(SequenceConcretizer.java:458)
	at ru.ispras.microtesk.test.Executor.executeCall(Executor.java:437)
	at ru.ispras.microtesk.test.Executor.executeToBreak(Executor.java:345)
	at ru.ispras.microtesk.test.Executor.execute(Executor.java:273)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.execute(SequenceConcretizer.java:246)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:163)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.
Warning: Query processing has failed: TestBaseQueryResult [Status: ERROR, Errors: 
  java.lang.IllegalStateException: CVC4 (text-based interface): The external constraint solver executable (/home/kamkin/work/microtesk/build/target//tools/cvc4/unix/cvc4) does not exist or the path is not a valid file path.
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solverFileExistsCheck(SmtTextSolver.java:107)
	at ru.ispras.fortress.solver.engine.smt.SmtTextSolver.solve(SmtTextSolver.java:117)
	at ru.ispras.fortress.solver.engine.smt.Cvc4Solver.solve(Cvc4Solver.java:35)
	at ru.ispras.microtesk.translator.nml.coverage.TestBase.executeQuery(TestBase.java:125)
	at ru.ispras.microtesk.test.engine.EngineUtils.getTestData(EngineUtils.java:209)
	at ru.ispras.microtesk.test.engine.EngineUtils.makeInitializer(EngineUtils.java:120)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processPrimitive(SequenceConcretizer.java:559)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.processCall(SequenceConcretizer.java:502)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer$ConcreteSequenceCreator.finishProcessing(SequenceConcretizer.java:628)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.processSequence(SequenceConcretizer.java:172)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.concretizeSequence(SequenceConcretizer.java:124)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:98)
	at ru.ispras.microtesk.test.engine.SequenceConcretizer.value(SequenceConcretizer.java:61)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:172)
	at ru.ispras.microtesk.test.engine.SequenceProcessor$ConcreteSequenceIterator.value(SequenceProcessor.java:137)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlock(TemplateProcessor.java:415)
	at ru.ispras.microtesk.test.TemplateProcessor.processPostponedBlocks(TemplateProcessor.java:306)
	at ru.ispras.microtesk.test.TemplateProcessor.finish(TemplateProcessor.java:194)
	at ru.ispras.microtesk.test.template.Template.endMainSection(Template.java:220)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:436)
	at org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:300)
	at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:35)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.IfNode.interpret(IfNode.java:116)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_BLOCK(ASTInterpreter.java:112)
	at org.jruby.runtime.Interpreted19Block.evalBlockBody(Interpreted19Block.java:206)
	at org.jruby.runtime.Interpreted19Block.yield(Interpreted19Block.java:157)
	at org.jruby.runtime.Block.yield(Block.java:142)
	at org.jruby.RubyHash$13.visit(RubyHash.java:1355)
	at org.jruby.RubyHash.visitLimited(RubyHash.java:648)
	at org.jruby.RubyHash.visitAll(RubyHash.java:634)
	at org.jruby.RubyHash.iteratorVisitAll(RubyHash.java:1306)
	at org.jruby.RubyHash.each_pairCommon(RubyHash.java:1351)
	at org.jruby.RubyHash.each19(RubyHash.java:1342)
	at org.jruby.RubyHash$INVOKER$i$0$0$each19.call(RubyHash$INVOKER$i$0$0$each19.gen)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:316)
	at org.jruby.runtime.callsite.CachingCallSite.callBlock(CachingCallSite.java:145)
	at org.jruby.runtime.callsite.CachingCallSite.callIter(CachingCallSite.java:154)
	at org.jruby.ast.CallNoArgBlockNode.interpret(CallNoArgBlockNode.java:64)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_METHOD(ASTInterpreter.java:74)
	at org.jruby.internal.runtime.methods.InterpretedMethod.call(InterpretedMethod.java:139)
	at org.jruby.internal.runtime.methods.DefaultMethod.call(DefaultMethod.java:187)
	at org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
	at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
	at org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
	at org.jruby.ast.NewlineNode.interpret(NewlineNode.java:105)
	at org.jruby.ast.BlockNode.interpret(BlockNode.java:71)
	at org.jruby.ast.RootNode.interpret(RootNode.java:129)
	at org.jruby.evaluator.ASTInterpreter.INTERPRET_ROOT(ASTInterpreter.java:121)
	at org.jruby.Ruby.runInterpreter(Ruby.java:884)
	at org.jruby.Ruby.runInterpreter(Ruby.java:892)
	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:119)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1360)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1405)
	at ru.ispras.microtesk.RubyRunner.run(RubyRunner.java:65)
	at ru.ispras.microtesk.ScriptRunner.run(ScriptRunner.java:43)
	at ru.ispras.microtesk.test.TestEngine.generate(TestEngine.java:172)
	at ru.ispras.microtesk.MicroTESK.generate(MicroTESK.java:284)
	at ru.ispras.microtesk.MicroTESK.runTask(MicroTESK.java:131)
	at ru.ispras.microtesk.MicroTESK.main(MicroTESK.java:79)

  No suitable test data generator is found.
]
Warning: Default test data will be used.

-------------- Constructed Test Case 9 (multiple_engines.rb:112) ---------------

	Preparation
	la $18, branch_data_0
	la $19, branch_data_1
	lui $16, 0xe69b
	ori $16, $16, 0x9210
	sw $16, 0($18)
	addiu $18, $18, 0x4
	lui $17, 0x6f14
	ori $17, $17, 0xa760
	sw $17, 0($19)
	addiu $19, $19, 0x4
	ori $9, $0, 0x2515
	sll $9, $9, 16
	ori $9, $9, 0x5e8d
	la $1, preparator_data_n58_0009
	lw $10, 0($1)
	la $18, branch_data_0
	xori $11, $0, 0x156f
	sll $11, $11, 16
	ori $11, $11, 0x7514
	la $1, preparator_data_n60_0009
	lw $12, 0($1)
	la $19, branch_data_1
	
	Stimulus
start_0009:
	lw $16, 0($18)
	addiu $18, $18, 0x4
	# Begin: Executed code (0)
	# End: Executed code (0)
	nop
	# Execution trace: [false]
	bgez $16, normal_0009
	nop
overflow_0009:
	lw $17, 0($19)
	addiu $19, $19, 0x4
	# Begin: Executed code (1)
	# End: Executed code (1)
	add $8, $9, $10
	j finish_0009
	nop
normal_0009:
	# Begin: Non-taken code (0)
	# End: Non-taken code (0)
	add $8, $11, $12
	lw $20, 0($13)
	lw $21, 0($14)
finish_0009:
	# Begin: Executed code (2)
	# End: Executed code (2)
	nop
	# Execution trace: [false]
	bltz $17, start_0009
	nop

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090554

0x0000000000090554 (PA): .org 0x10564
0x0000000000090564 (PA): .align 4
preparator_data_n58_0009:
0x0000000000090570 (PA): .word 0xDBE5DBA8

------------------------------- Allocating data --------------------------------

Section: .data [pa=0x0000000000080000, va=0x0000000000080000]
Allocation starts: 0x0000000000090574

0x0000000000090574 (PA): .org 0x10584
0x0000000000090584 (PA): .align 4
preparator_data_n60_0009:
0x0000000000090590 (PA): .word 0xFB776CCD

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a06cc (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a06d4 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a06dc (PA): lui $16, 0xe69b (0x3C10E69B)
0x00000000000a06e0 (PA): ori $16, $16, 0x9210 (0x36109210)
0x00000000000a06e4 (PA): sw $16, 0($18) (0xAE500000)
0x00000000000a06e8 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a06ec (PA): lui $17, 0x6f14 (0x3C116F14)
0x00000000000a06f0 (PA): ori $17, $17, 0xa760 (0x3631A760)
0x00000000000a06f4 (PA): sw $17, 0($19) (0xAE710000)
0x00000000000a06f8 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a06fc (PA): ori $9, $0, 0x2515 (0x34092515)
0x00000000000a0700 (PA): sll $9, $9, 16 (0x00094C00)
0x00000000000a0704 (PA): ori $9, $9, 0x5e8d (0x35295E8D)
0x00000000000a0708 (PA): la $1, preparator_data_n58_0009 (0x3C01000934210570)
0x00000000000a0710 (PA): lw $10, 0($1) (0x8C2A0000)
0x00000000000a0714 (PA): la $18, branch_data_0 (0x3C12000936520000)
0x00000000000a071c (PA): xori $11, $0, 0x156f (0x380B156F)
0x00000000000a0720 (PA): sll $11, $11, 16 (0x000B5C00)
0x00000000000a0724 (PA): ori $11, $11, 0x7514 (0x356B7514)
0x00000000000a0728 (PA): la $1, preparator_data_n60_0009 (0x3C01000934210590)
0x00000000000a0730 (PA): lw $12, 0($1) (0x8C2C0000)
0x00000000000a0734 (PA): la $19, branch_data_1 (0x3C13000936730200)
0x00000000000a073c (PA): lw $16, 0($18) (0x8E500000)
0x00000000000a0740 (PA): addiu $18, $18, 0x4 (0x26520004)
0x00000000000a0744 (PA): nop (0x00000000)
0x00000000000a0748 (PA): bgez $16, normal_0009 (0x0601FFEE)
0x00000000000a074c (PA): nop (0x00000000)
0x00000000000a0750 (PA): lw $17, 0($19) (0x8E710000)
0x00000000000a0754 (PA): addiu $19, $19, 0x4 (0x26730004)
0x00000000000a0758 (PA): add $8, $9, $10 (0x012A4020)
0x00000000000a075c (PA): j finish_0009 (0x080281C4)
0x00000000000a0760 (PA): nop (0x00000000)
0x00000000000a0764 (PA): add $8, $11, $12 (0x016C4020)
0x00000000000a0768 (PA): lw $20, 0($13) (0x8DB40000)
0x00000000000a076c (PA): lw $21, 0($14) (0x8DD50000)
0x00000000000a0770 (PA): nop (0x00000000)
0x00000000000a0774 (PA): bltz $17, start_0009 (0x0620FFD9)
0x00000000000a0778 (PA): nop (0x00000000)

--------- Running Execution from Test Case 9 (multiple_engines.rb:112) ---------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x0000000000000380

Execution cannot continue at the current stage.
Checking dependencies between READ(L2:L2_1[PA:PA.value_L2_1[32]]) and READ(M:M_1[PA:PA.value_M_1[32]])
Possible dependencies: 1
Next branch structure (empty stack): [BASIC_BLOCK, IF_THEN: Target=6, Trace=[], BlockCoverage=[0], SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, GOTO: Target=9, Trace=[], BlockCoverage=null, SlotCoverage=null, DELAY_SLOT, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, BASIC_BLOCK, IF_THEN: Target=0, Trace=[], BlockCoverage=[3], SlotCoverage=null, DELAY_SLOT]

----------------- Constructed Epilogue (minimips_base.rb:285) ------------------

	j exit
	nop
	
	# Here must be code for reporting errors detected by self-checks
check_failed:
	nop
	
	# Here must be test program termination code
exit:
	nop

------------------------------- Allocating code --------------------------------

Section: .text [pa=0x0000000000000000, va=0x0000000000000000]

0x00000000000a077c (PA): j exit (0x08000000)
0x00000000000a0780 (PA): nop (0x00000000)
0x00000000000a0784 (PA): nop (0x00000000)
0x00000000000a0788 (PA): nop (0x00000000)

------------ Running Execution from Epilogue (minimips_base.rb:285) ------------


---------------------------------- Instance 0 ----------------------------------

Execution status: 0x0000000000000380

Execution cannot continue at the current stage.
Allocated entries: []

--------------- Printing test program to multiple_engines_0000.s ---------------

Error: Instance 0 is at address 0x0000000000000380 and it cannot reach the end of test program.
Generation was aborted.
Generation Statistics
Generation time: 1.543 seconds
Generation rate: 290 instructions/second
Programs/stimuli/instructions: 1/10/449
