/*
 * Copyright 2018 ISP RAS (http://www.ispras.ru)
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

address VA(value: 16)
address PA(value: 14)

segment DIRECT (va: VA) = (pa: PA)
  range = (0xc000, 0xffff)
  read = {
    pa.value = va.value<13..0>;
  }

function TranslateAddress(va: VA): PA
var pa: PA;
{
  if (va.value<0> != 0) then
    exception("AddressError");
  endif;

  if (DIRECT(va).hit) then
    pa = DIRECT(va);
  else
    exception("AddressError");
  endif;

  return pa;
}

buffer MEM (pa: PA)
  ways = 1
  sets = 2 ** 13
  entry = (data: 16)
  index = pa.value<13..1>
  match = 0
  policy = NONE

mmu vmem (va: VA) = (data: 16)
  var pa: PA;
  var memEntry: MEM.entry;

  read = {
    pa = TranslateAddress(va);
    memEntry = MEM(pa);
    data = memEntry.data;
  }

  write = {
    pa = TranslateAddress(va);
    memEntry.data = data;
    MEM(pa) = memEntry;
  }
